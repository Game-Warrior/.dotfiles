!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=612)}([,,function(e,t,n){var o,r,i;r=[e],void 0===(i="function"==typeof(o=function(e){"use strict";if("undefined"==typeof browser||Object.getPrototypeOf(browser)!==Object.prototype){const t="The message port closed before a response was received.",n="Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)",o=e=>{const o={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getBrowserInfo:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(0===Object.keys(o).length)throw new Error("api-metadata.json has not been included in browser-polyfill");class r extends WeakMap{constructor(e,t){super(t),this.createItem=e}get(e){return this.has(e)||this.set(e,this.createItem(e)),super.get(e)}}const i=(t,n)=>(...o)=>{e.runtime.lastError?t.reject(e.runtime.lastError):n.singleCallbackArg||o.length<=1&&!1!==n.singleCallbackArg?t.resolve(o[0]):t.resolve(o)},s=e=>1==e?"argument":"arguments",a=(e,t,n)=>new Proxy(t,{apply:(t,o,r)=>n.call(o,e,...r)});let l=Function.call.bind(Object.prototype.hasOwnProperty);const c=(e,t={},n={})=>{let o=Object.create(null),r={has:(t,n)=>n in e||n in o,get(r,u,d){if(u in o)return o[u];if(!(u in e))return;let m=e[u];if("function"==typeof m)if("function"==typeof t[u])m=a(e,e[u],t[u]);else if(l(n,u)){let t=((e,t)=>function(n,...o){if(o.length<t.minArgs)throw new Error(`Expected at least ${t.minArgs} ${s(t.minArgs)} for ${e}(), got ${o.length}`);if(o.length>t.maxArgs)throw new Error(`Expected at most ${t.maxArgs} ${s(t.maxArgs)} for ${e}(), got ${o.length}`);return new Promise((r,s)=>{if(t.fallbackToNoCallback)try{n[e](...o,i({resolve:r,reject:s},t))}catch(i){console.warn(e+" API method doesn't seem to support the callback parameter, falling back to call it without a callback: ",i),n[e](...o),t.fallbackToNoCallback=!1,t.noCallback=!0,r()}else t.noCallback?(n[e](...o),r()):n[e](...o,i({resolve:r,reject:s},t))})})(u,n[u]);m=a(e,e[u],t)}else m=m.bind(e);else{if("object"!=typeof m||null===m||!l(t,u)&&!l(n,u))return Object.defineProperty(o,u,{configurable:!0,enumerable:!0,get:()=>e[u],set(t){e[u]=t}}),m;m=c(m,t[u],n[u])}return o[u]=m,m},set:(t,n,r,i)=>(n in o?o[n]=r:e[n]=r,!0),defineProperty:(e,t,n)=>Reflect.defineProperty(o,t,n),deleteProperty:(e,t)=>Reflect.deleteProperty(o,t)},u=Object.create(e);return new Proxy(u,r)},u=e=>({addListener(t,n,...o){t.addListener(e.get(n),...o)},hasListener:(t,n)=>t.hasListener(e.get(n)),removeListener(t,n){t.removeListener(e.get(n))}});let d=!1;const m=new r(e=>"function"!=typeof e?e:function(t,o,r){let i,s,a=!1,l=new Promise(e=>{i=function(t){d||(console.warn(n,(new Error).stack),d=!0),a=!0,e(t)}});try{s=e(t,o,i)}catch(e){s=Promise.reject(e)}const c=!0!==s&&(u=s)&&"object"==typeof u&&"function"==typeof u.then;var u;if(!0!==s&&!c&&!a)return!1;const m=e=>{e.then(e=>{r(e)},e=>{let t;t=e&&(e instanceof Error||"string"==typeof e.message)?e.message:"An unexpected error occurred",r({__mozWebExtensionPolyfillReject__:!0,message:t})}).catch(e=>{console.error("Failed to send onMessage rejected reply",e)})};return m(c?s:l),!0}),g=({reject:n,resolve:o},r)=>{e.runtime.lastError?e.runtime.lastError.message===t?o():n(e.runtime.lastError):r&&r.__mozWebExtensionPolyfillReject__?n(new Error(r.message)):o(r)},p=(e,t,n,...o)=>{if(o.length<t.minArgs)throw new Error(`Expected at least ${t.minArgs} ${s(t.minArgs)} for ${e}(), got ${o.length}`);if(o.length>t.maxArgs)throw new Error(`Expected at most ${t.maxArgs} ${s(t.maxArgs)} for ${e}(), got ${o.length}`);return new Promise((e,t)=>{const r=g.bind(null,{resolve:e,reject:t});o.push(r),n.sendMessage(...o)})},f={runtime:{onMessage:u(m),onMessageExternal:u(m),sendMessage:p.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:p.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},b={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return o.privacy={network:{networkPredictionEnabled:b,webRTCIPHandlingPolicy:b},services:{passwordSavingEnabled:b},websites:{hyperlinkAuditingEnabled:b,referrersEnabled:b}},c(e,f,o)};e.exports=o(chrome)}else e.exports=browser})?o.apply(t,r):o)||(e.exports=i)},,,,function(e,t,n){"use strict";var o=n(12),r=n.n(o),i=n(2),s=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{l(o.next(e))}catch(e){i(e)}}function a(e){try{l(o.throw(e))}catch(e){i(e)}}function l(e){e.done?r(e.value):new n((function(t){t(e.value)})).then(s,a)}l((o=o.apply(e,t||[])).next())}))};function a(e){return e.stacktrace=e.stacktrace.map((function(e){return e.file=e.file.replace(/chrome-extension:/g,"chrome_extension:"),e.file=e.file.replace(/.*(moz-extension|chrome_extension|chrome-extension|file):\/\/.*\/scripts\/(.*)/gi,"togglbutton://scripts/$2"),e.file=e.file.replace(/\\/g,"/"),e})),e}const l=r.a.start({apiKey:"7419717b29de539ab0fbe35dcd7ca19d",appVersion:"2.0.18",releaseStage:"production",enabledReleaseStages:["production","development"],enabledBreadcrumbTypes:[],autoTrackSessions:!1,collectUserIp:!1,onError:function(e){return s(this,void 0,void 0,(function*(){const t=i.extension.getBackgroundPage().db;if(!(yield t.get("sendErrorReports")))return!1;e.errors.map(a)}))}});t.a=l},function(e,t,n){"use strict";n.d(t,"g",(function(){return s})),n.d(t,"f",(function(){return a})),n.d(t,"a",(function(){return c})),n.d(t,"c",(function(){return u})),n.d(t,"e",(function(){return d})),n.d(t,"b",(function(){return m})),n.d(t,"d",(function(){return g}));var o=n(6),r=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{l(o.next(e))}catch(e){i(e)}}function a(e){try{l(o.throw(e))}catch(e){i(e)}}function l(e){e.done?r(e.value):new n((function(t){t(e.value)})).then(s,a)}l((o=o.apply(e,t||[])).next())}))};const i=/^(\w+\.)?toggl\.(space|com)$/;function s(e){return Math.floor(e/3600)+"h "+Math.floor(e%3600/60)+"m"}function a(e){o.a.notify(e)}const l={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function c(e){return String(e).replace(/[&<>"'/]/g,(function(e){return l[e]}))}function u(e,t){return new URL(e).searchParams.get(t)}function d(e){try{return i.test(new URL(e).hostname)}catch(t){return o.a.notify(t,t=>{t.addMetadata("general",{url:e})}),!1}}function m(e=!1){return e?"https://addons.mozilla.org/en-US/firefox/addon/toggl-button-time-tracker/":"https://chrome.google.com/webstore/detail/toggl-button-productivity/oejgccbfbmkkpaidnkphaiaecficdnfn"}function g(e){return r(this,void 0,void 0,(function*(){return((yield e.get("timeEntriesTracked"))||0)>=30}))}},,,function(e,t,n){"use strict";t.a={"airtable.com":{url:"*://airtable.com/*",name:"Airtable",file:"airtable.js"},"any.do":{url:"*://*.any.do/*",name:"Anydo"},"app.asana.com":{url:"*://app.asana.com/*",name:"Asana",file:"asana.js"},"assembla.com":{url:"*://*.assembla.com/*",name:"Assembla"},"atlassian.com":{url:"*://*.atlassian.com/*",name:"Atlassian / Jira",file:"atlassian.js"},"atlassian.net":{url:"*://*.atlassian.net/*",name:"Atlassian / Jira",clone:"true",file:"atlassian.js"},"axosoft.com":{url:"*://*.axosoft.com/*",name:"Axosoft"},"backlog.jp":{url:"*://*.backlog.jp/*",name:"Backlog"},"basecamp.com":{url:"*://*.basecamp.com/*",name:"Basecamp"},"basecamphq.com":{url:"*://*.basecamphq.com/*",name:"BasecampHQ",clone:"true",file:"basecamp.js"},"bitbucket.org":{url:"*://*.bitbucket.org/*",name:"Bitbucket"},"bitrix24.com":{url:"*://*.bitrix24.com/*",name:"Bitrix24"},"app.breeze.pm":{url:"*://app.breeze.pm/*",name:"Breeze"},"app.brokerengine.com.au":{url:"*://app.brokerengine.com.au/*",name:"BrokerEngine"},"bugherd.com":{url:"*://*.bugherd.com/*",name:"BugHerd",file:"bugherd.js"},"app.bugsnag.com":{url:"*://app.bugsnag.com/*",name:"Bugsnag"},"bugzilla.mozilla.org":{url:"*://bugzilla.mozilla.org/*",name:"Bugzilla"},"capsulecrm.com":{url:"*://*.capsulecrm.com/*",name:"CapsuleCRM"},"clickup.com":{url:"*://*.clickup.com/*",name:"ClickUp"},"cloudes.me":{url:"*://*.cloudes.me/*",name:"Cloudes.me"},"app.clubhouse.io":{url:"*://app.clubhouse.io/*",name:"Clubhouse"},"app.codeable.io":{url:"*://app.codeable.io/*",name:"Codeable"},"codebasehq.com":{url:"*://*.codebasehq.com/*",name:"Codebase"},"corgee.com":{url:"*://*.corgee.com/*",name:"Corgee"},"crowdin.com":{url:"*://*.crowdin.com/*",name:"Crowdin",file:"crowdin.js"},"desk.com":{url:"*://*.desk.com/web/agent/*",name:"Desk.com"},"devdocs.io":{url:"*://devdocs.io/*",name:"Devdocs.io"},"dixa.com":{url:"*://*.dixa.com/*",name:"Dixa"},"dobambam.com":{url:"*://*.dobambam.com/*",name:"Dobambam"},"doit.im":{url:"*://*.doit.im/*",name:"Doit"},"doitim.com":{url:"*://*.doitim.com/*",name:"Doit",clone:"true"},"dokuwiki.org":{url:"*://*.dokuwiki.org/*",name:"DokuWiki",file:"dokuwiki.js"},"dom-integration":{url:"*://toggl-button-dom-demo.now.sh/*",name:"DOM Integration"},"draftin.com":{url:"*://*.draftin.com/*",name:"Draftin"},"paper.dropbox.com":{url:"*://paper.dropbox.com/*",name:"Dropbox Paper"},"drupal.org":{url:"*://*.drupal.org/*",name:"Drupal"},"dynamics.com":{url:"*://*.dynamics.com/*",name:"Dynamics 365"},"eproject.me":{url:"*://*.eproject.me/*",name:"Eproject.me"},"esa.io":{url:"*://*.esa.io/*",name:"Esa.io"},eventum:{url:"",name:"Eventum"},"evernote.com":{url:"*://*.evernote.com/*",name:"Evernote"},"fastmail.com":{url:"*://*.fastmail.com/*",name:"Fastmail"},"feedly.com":{url:"*://*.feedly.com/*",name:"Feedly"},"fibery.io":{url:"*://*.fibery.io/*",name:"Fibery"},"focuster.com":{url:"*://*.focuster.com/*",name:"Focuster"},"fogbugz.com":{url:"*://*.fogbugz.com/*",name:"Fogbugz"},"freshdesk.com":{url:"*://*.freshdesk.com/*",name:"Freshdesk"},"ongemini.com":{url:"*://*.ongemini.com/*",name:"Gemini"},"getflow.com":{url:"*://*.getflow.com/*",name:"Getflow"},"gingkoapp.com":{url:"*://gingkoapp.com/*",name:"Gingkoapp"},"gitea.com":{url:"*://gitea.com/*",name:"Gitea"},"github.com":{url:"*://github.com/*",name:"Github",file:"github.js"},"gitlab.com":{url:"*://*.gitlab.com/*",name:"Gitlab"},"gogs.io":{url:"*://*.gogs.io/*",name:"Gogs"},"calendar.google.com":{url:"*://calendar.google.com/*",name:"Google Calendar"},"classroom.google.com":{url:"*://classroom.google.com/*",name:"Google Classroom"},"docs.google.com":{url:"*://docs.google.com/*",name:"Google Docs"},"inbox.google.com":{url:"*://inbox.google.com/*",name:"Google Inbox"},"keep.google.com":{url:"*://keep.google.com/*",name:"Google Keep"},"mail.google.com":{url:"*://mail.google.com/*",name:"Google Mail"},"gqueues.com":{url:"*://*.gqueues.com/*",name:"GQueues",file:"gqueues.js"},"habitica.com":{url:"*://habitica.com/*",name:"Habitica"},"app.heflo.com":{url:"*://app.heflo.com/*",name:"HEFLO"},"helprace.com":{url:"*://*.helprace.com/*",name:"Helprace"},"secure.helpscout.net":{url:"*://secure.helpscout.net/*",name:"Helpscout"},"app.huskymarketingplanner.com":{url:"*://app.huskymarketingplanner.com/*",name:"Husky Marketing Planner",file:"husky-marketing-planner.js"},"intercom.com":{url:"*://*.intercom.com/*",name:"Intercom"},"jira.com":{url:"*://*.jira.com/*",name:"Jira",file:"atlassian.js"},"bugs.jquery.com":{url:"*://bugs.jquery.com/*",name:"Jquery Bugs",file:"trac.js"},"kanban.ist":{url:"*://*.kanban.ist/*",name:"Kanbanist"},"kanboard.net":{url:"",name:"Kanboard"},"kantree.io":{url:"*://*.kantree.io/*",name:"Kantree"},"khanacademy.org":{url:"*://*.khanacademy.org/*",name:"KhanAcademy",file:"khanacademy.js"},"www.khanacademy.org":{url:"*://www.khanacademy.org/*",name:"KhanAcademy"},"app.liquidplanner.com":{url:"*://app.liquidplanner.com/*",name:"Liquidplanner"},"ladesk.com":{url:"*://*.ladesk.com/*",name:"LiveAgent",file:"liveagent.js"},"manageengine.com":{url:"*://*.manageengine.com/*",name:"ManageEngine"},"mantishub.com":{url:"*://*.mantishub.com/*",name:"Mantishub"},"mantishub.io":{url:"*://*.mantishub.io/*",name:"Mantishub",clone:"true"},"meistertask.com":{url:"*://*.meistertask.com/*",name:"MeisterTask",file:"meistertask.js"},"tasks.office.com":{url:"*://tasks.office.com/*",name:"Microsoft Planner"},"to-do.live.com":{url:"*://*.to-do.live.com/*",name:"Microsoft To-Do",file:"microsoft-to-do.js"},"to-do.microsoft.com":{url:"*://*.to-do.microsoft.com/*",name:"Microsoft To-Do",file:"microsoft-to-do.js"},"to-do.office.com":{url:"*://*.to-do.office.com/*",name:"Microsoft To-Do",file:"microsoft-to-do.js"},"minicrm.pl":{url:"*://*.minicrm.pl/*",name:"Minicrm",clone:"true"},"newsletter2go.com":{url:"*://*.newsletter2go.com/*",name:"Newsletter2go"},"notion.so":{url:"*://*.notion.so/*",name:"Notion",file:"notion.js"},"app.nozbe.com":{url:"*://app.nozbe.com/*",name:"Nozbe"},"odoo.com":{url:"*://*.odoo.com/*",name:"Odoo"},"onlyoffice.com":{url:"*://*.onlyoffice.com/*",name:"OnlyOffice"},"onshape.com":{url:"*://*.onshape.com/*",name:"Onshape"},"openproject.com":{url:"*://*.openproject.com/*",name:"Openproject"},"supportsystem.com":{url:"*://*.supportsystem.com/*",name:"osTicket",file:"osticket.js"},"outlook.office.com":{url:"*://outlook.office.com/*",name:"Outlook",file:"outlook.js"},"outlook.live.com":{url:"*://outlook.live.com/*",name:"Outlook",clone:"true"},"pagerduty.com":{url:"*://*.pagerduty.com/*",name:"PagerDuty"},"pivotaltracker.com":{url:"*://*.pivotaltracker.com/*",name:"PivotalTracker"},"placker.com":{url:"*://*.placker.com/*",name:"Placker",file:"placker.js"},"planbox.com":{url:"*://*.planbox.com/*",name:"Planbox"},"podio.com":{url:"*://*.podio.com/*",name:"Podio"},processwire:{url:"",name:"ProcessWire"},"produck.io":{url:"*://*.produck.io/*",name:"Produck"},"protonmail.com":{url:"*://*.protonmail.com/*",name:"Protonmail"},"proworkflow.com":{url:"*://*.proworkflow.com/*",name:"Proworkflow"},"rally1.rallydev.com":{url:"*://rally1.rallydev.com/*",name:"RallyDev"},"redbooth.com":{url:"*://*.redbooth.com/*",name:"Redbooth"},"redmine.org":{url:"*://*.redmine.org/*",name:"Redmine"},"rememberthemilk.com":{url:"*://*.rememberthemilk.com/*",name:"RememberTheMilk"},"rbcommons.com":{url:"*://*.rbcommons.com/*",name:"Reviewboard"},"rindle.com":{url:"*://*.rindle.com/*",name:"Rindle"},"rollbar.com":{url:"*://*.rollbar.com/*",name:"Rollbar"},"salesforce.com":{url:"*://*.salesforce.com/*,*://*.my.salesforce.com/*",name:"Salesforce",file:"salesforce.js"},"force.com":{url:"*://*.force.com/*,*://*.lightning.force.com/*",name:"Salesforce Lightning",file:"force.js"},"scrapbox.io":{url:"*://scrapbox.io/*",name:"Scrapbox"},"sentry.io":{url:"*://*.sentry.io/*",name:"Sentry"},"sherpadesk.com":{url:"*://*.sherpadesk.com/*",name:"Sherpadesk"},"app.shortcut.com":{url:"*://app.shortcut.com/*",name:"Shortcut"},"sifterapp.com":{url:"*://*.sifterapp.com/*",name:"Sifterapp"},"slack.com":{url:"*://*.slack.com/*",name:"Slack"},"sourcelair.com":{url:"*://*.sourcelair.com/*",name:"Sourcelair",file:"sourcelair.js"},"spidergap.com":{url:"*://*.spidergap.com/*",name:"Spidergap"},"sprint.ly":{url:"*://sprint.ly/*",name:"Sprintly"},"taiga.io":{url:"*://*.taiga.io/*",name:"Taiga",file:"taiga.js"},"targetprocess.com":{url:"*://*.targetprocess.com/*",name:"Targetprocess"},"tpondemand.com":{url:"*://*.tpondemand.com/*",name:"Targetprocess",clone:"true"},"app.teamleader.eu":{url:"*://app.teamleader.eu/*",name:"Teamleader"},"teamwork.com":{url:"*://*.teamwork.com/*",name:"Teamwork",file:"teamwork.js"},"teamworkpm.net":{url:"*://*.teamworkpm.net/*",name:"Teamwork",clone:"true"},"ticktick.com":{url:"*://ticktick.com/*,*://*.ticktick.com/*",name:"TickTick"},"todoist.com":{url:"*://*.todoist.com/app*",name:"Todoist",file:"todoist.js"},"toggl.com":{url:"*://toggl.com/*",name:"Toggl",clone:"true"},"www.toggl.com":{url:"*://www.toggl.com/*",name:"Toggl",clone:"true"},"plan.toggl.com":{url:"*://plan.toggl.com/*",name:"Toggl Plan",file:"toggl-plan.js"},"toodledo.com":{url:"*://*.toodledo.com/*",name:"Toodledo"},"trac-hacks.org":{url:"*://trac-hacks.org/*",name:"Trac"},"trac.edgewall.org":{url:"*://trac.edgewall.org/*",name:"Trac",clone:"true"},"trac.wordpress.org":{url:"*://*.trac.wordpress.org/*",name:"Trac",clone:"true"},"trello.com":{url:"*://*.trello.com/*",name:"Trello"},"unfuddle.com":{url:"*://*.unfuddle.com/*",name:"Unfuddle"},"v1host.com":{url:"*://*.v1host.com/*",name:"VersionOne"},"visualstudio.com":{url:"*://*.visualstudio.com/*",name:"VisualStudio"},"azure.com":{url:"*://*.azure.com/*",name:"VisualStudio"},"app.vivifyscrum.com":{url:"*://app.vivifyscrum.com/*",name:"VivifyScrum",clone:"true"},"wordpress.com":{url:"*://wordpress.com/*",name:"Wordpress"},"workast.io":{url:"*://*.workast.io/*",name:"Workast"},"workflowy.com":{url:"*://workflowy.com/*",name:"Workflowy"},"attask-ondemand.com":{url:"*://*.attask-ondemand.com/*",name:"Workfront",clone:"true"},"my.workfront.com":{url:"*://*.my.workfront.com/*",name:"Workfront"},"worksection.com":{url:"*://*.worksection.com/*",name:"Worksection"},"worksection.eu":{url:"*://*.worksection.eu/*",name:"Worksection",clone:"true"},"worksection.net":{url:"*://*.worksection.net/*",name:"Worksection",clone:"true"},"wrike.com":{url:"*://*.wrike.com/*",name:"Wrike",file:"wrike.js"},"xero.com":{url:"*://*.xero.com/*",name:"Xero",file:"xero.js"},"myjetbrains.com":{url:"*://*.myjetbrains.com/*",name:"YouTrack",file:"youtrack.js"},"zammad.com":{url:"*://*.zammad.com/*",name:"Zammad"},"zendesk.com":{url:"*://*.zendesk.com/*",name:"Zendesk",file:"zendesk.js"},"app.zenhub.com":{url:"*://app.zenhub.com/*",name:"Zenhub"},"books.zoho.com":{url:"*://books.zoho.com/*",name:"Zoho Books"},"zube.io":{url:"*://zube.io/*",name:"Zube"}}},,function(e,t,n){e.exports=n(14)},,function(e,t,n){e.exports=function(){var e=["navigation","request","process","log","user","state","error","manual"],t=function(e,t,n){for(var o=n,r=0,i=e.length;r<i;r++)o=t(o,e[r],r,e);return o},n=function(e,n){return t(e,(function(e,t,o,r){return n(t,o,r)?e.concat(t):e}),[])},o=function(e,n){return t(e,(function(e,t,o,r){return!0===e||t===n}),!1)},r=function(e){return"[object Array]"===Object.prototype.toString.call(e)},i=!{toString:null}.propertyIsEnumerable("toString"),s=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],a=function(e){var t,n=[];for(t in e)Object.prototype.hasOwnProperty.call(e,t)&&n.push(t);if(!i)return n;for(var o=0,r=s.length;o<r;o++)Object.prototype.hasOwnProperty.call(e,s[o])&&n.push(s[o]);return n},l=function(e,t){return void 0===e&&(e=1),void 0===t&&(t=1/0),function(n){return"number"==typeof n&&parseInt(""+n,10)===n&&n>=e&&n<=t}},c=function(e){return"function"==typeof e||r(e)&&n(e,(function(e){return"function"==typeof e})).length===e.length},u=function(e){return"string"==typeof e&&!!e.length},d={};d.schema={apiKey:{defaultValue:function(){return null},message:"is required",validate:u},appVersion:{defaultValue:function(){},message:"should be a string",validate:function(e){return void 0===e||u(e)}},appType:{defaultValue:function(){},message:"should be a string",validate:function(e){return void 0===e||u(e)}},autoDetectErrors:{defaultValue:function(){return!0},message:"should be true|false",validate:function(e){return!0===e||!1===e}},enabledErrorTypes:{defaultValue:function(){return{unhandledExceptions:!0,unhandledRejections:!0}},message:"should be an object containing the flags { unhandledExceptions:true|false, unhandledRejections:true|false }",allowPartialObject:!0,validate:function(e){if("object"!=typeof e||!e)return!1;var t=a(e),r=a({unhandledExceptions:!0,unhandledRejections:!0});return!(n(t,(function(e){return o(r,e)})).length<t.length||n(a(e),(function(t){return"boolean"!=typeof e[t]})).length>0)}},onError:{defaultValue:function(){return[]},message:"should be a function or array of functions",validate:c},onSession:{defaultValue:function(){return[]},message:"should be a function or array of functions",validate:c},onBreadcrumb:{defaultValue:function(){return[]},message:"should be a function or array of functions",validate:c},endpoints:{defaultValue:function(){return{notify:"https://notify.bugsnag.com",sessions:"https://sessions.bugsnag.com"}},message:"should be an object containing endpoint URLs { notify, sessions }",validate:function(e){return e&&"object"==typeof e&&u(e.notify)&&u(e.sessions)&&0===n(a(e),(function(e){return!o(["notify","sessions"],e)})).length}},autoTrackSessions:{defaultValue:function(e){return!0},message:"should be true|false",validate:function(e){return!0===e||!1===e}},enabledReleaseStages:{defaultValue:function(){return null},message:"should be an array of strings",validate:function(e){return null===e||r(e)&&n(e,(function(e){return"string"==typeof e})).length===e.length}},releaseStage:{defaultValue:function(){return"production"},message:"should be a string",validate:function(e){return"string"==typeof e&&e.length}},maxBreadcrumbs:{defaultValue:function(){return 25},message:"should be a number ≤100",validate:function(e){return l(0,100)(e)}},enabledBreadcrumbTypes:{defaultValue:function(){return e},message:"should be null or a list of available breadcrumb types ("+e.join(",")+")",validate:function(n){return null===n||r(n)&&t(n,(function(t,n){return!1===t?t:o(e,n)}),!0)}},context:{defaultValue:function(){},message:"should be a string",validate:function(e){return void 0===e||"string"==typeof e}},user:{defaultValue:function(){return{}},message:"should be an object with { id, email, name } properties",validate:function(e){return null===e||e&&t(a(e),(function(e,t){return e&&o(["id","email","name"],t)}),!0)}},metadata:{defaultValue:function(){return{}},message:"should be an object",validate:function(e){return"object"==typeof e&&null!==e}},logger:{defaultValue:function(){},message:"should be null or an object with methods { debug, info, warn, error }",validate:function(e){return!e||e&&t(["debug","info","warn","error"],(function(t,n){return t&&"function"==typeof e[n]}),!0)}},redactedKeys:{defaultValue:function(){return["password"]},message:"should be an array of strings|regexes",validate:function(e){return r(e)&&e.length===n(e,(function(e){return"string"==typeof e||e&&"function"==typeof e.test})).length}},plugins:{defaultValue:function(){return[]},message:"should be an array of plugin objects",validate:function(e){return r(e)&&e.length===n(e,(function(e){return e&&"object"==typeof e&&"function"==typeof e.load})).length}}};var m=function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},g=function(e,n){return t(e,(function(e,t,o,r){return e.concat(n(t,o,r))}),[])};function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var f=d.schema,b={releaseStage:m({},f.releaseStage,{defaultValue:function(){return/^localhost(:\d+)?$/.test(window.location.host)?"development":"production"}}),appType:p({},f.appType,{defaultValue:function(){return"browser"}}),logger:m({},f.logger,{defaultValue:function(){return"undefined"!=typeof console&&"function"==typeof console.debug?h():void 0}})},h=function(){var e={},t=console.log;return g(["debug","info","warn","error"],(function(n){var o=console[n];e[n]="function"==typeof o?o.bind(console,"[bugsnag]"):t.bind(console,"[bugsnag]")})),e},k=function(){function e(e,t,n,o){void 0===o&&(o=new Date),this.type=n,this.message=e,this.metadata=t,this.timestamp=o}return e.prototype.toJSON=function(){return{type:this.type,name:this.message,timestamp:this.timestamp,metaData:this.metadata}},e}(),y={};!function(e,t){"use strict";"object"==typeof y?y=t():e.StackFrame=t()}(this,(function(){"use strict";function e(e){return!isNaN(parseFloat(e))&&isFinite(e)}function t(e){return e.charAt(0).toUpperCase()+e.substring(1)}function n(e){return function(){return this[e]}}var o=["isConstructor","isEval","isNative","isToplevel"],r=["columnNumber","lineNumber"],i=["fileName","functionName","source"],s=o.concat(r,i,["args"]);function a(e){if(e instanceof Object)for(var n=0;n<s.length;n++)e.hasOwnProperty(s[n])&&void 0!==e[s[n]]&&this["set"+t(s[n])](e[s[n]])}a.prototype={getArgs:function(){return this.args},setArgs:function(e){if("[object Array]"!==Object.prototype.toString.call(e))throw new TypeError("Args must be an Array");this.args=e},getEvalOrigin:function(){return this.evalOrigin},setEvalOrigin:function(e){if(e instanceof a)this.evalOrigin=e;else{if(!(e instanceof Object))throw new TypeError("Eval Origin must be an Object or StackFrame");this.evalOrigin=new a(e)}},toString:function(){return(this.getFunctionName()||"{anonymous}")+"("+(this.getArgs()||[]).join(",")+")"+(this.getFileName()?"@"+this.getFileName():"")+(e(this.getLineNumber())?":"+this.getLineNumber():"")+(e(this.getColumnNumber())?":"+this.getColumnNumber():"")}};for(var l=0;l<o.length;l++)a.prototype["get"+t(o[l])]=n(o[l]),a.prototype["set"+t(o[l])]=function(e){return function(t){this[e]=Boolean(t)}}(o[l]);for(var c=0;c<r.length;c++)a.prototype["get"+t(r[c])]=n(r[c]),a.prototype["set"+t(r[c])]=function(t){return function(n){if(!e(n))throw new TypeError(t+" must be a Number");this[t]=Number(n)}}(r[c]);for(var u=0;u<i.length;u++)a.prototype["get"+t(i[u])]=n(i[u]),a.prototype["set"+t(i[u])]=function(e){return function(t){this[e]=String(t)}}(i[u]);return a}));var v={};!function(e,t){"use strict";"object"==typeof v?v=t(y):e.ErrorStackParser=t(e.StackFrame)}(this,(function(e){"use strict";var t=/(^|@)\S+\:\d+/,n=/^\s*at .*(\S+\:\d+|\(native\))/m,o=/^(eval@)?(\[native code\])?$/;return{parse:function(e){if(void 0!==e.stacktrace||void 0!==e["opera#sourceloc"])return this.parseOpera(e);if(e.stack&&e.stack.match(n))return this.parseV8OrIE(e);if(e.stack)return this.parseFFOrSafari(e);throw new Error("Cannot parse given Error object")},extractLocation:function(e){if(-1===e.indexOf(":"))return[e];var t=/(.+?)(?:\:(\d+))?(?:\:(\d+))?$/.exec(e.replace(/[\(\)]/g,""));return[t[1],t[2]||void 0,t[3]||void 0]},parseV8OrIE:function(t){return t.stack.split("\n").filter((function(e){return!!e.match(n)}),this).map((function(t){t.indexOf("(eval ")>-1&&(t=t.replace(/eval code/g,"eval").replace(/(\(eval at [^\()]*)|(\)\,.*$)/g,""));var n=t.replace(/^\s+/,"").replace(/\(eval code/g,"("),o=n.match(/ (\((.+):(\d+):(\d+)\)$)/),r=(n=o?n.replace(o[0],""):n).split(/\s+/).slice(1),i=this.extractLocation(o?o[1]:r.pop()),s=r.join(" ")||void 0,a=["eval","<anonymous>"].indexOf(i[0])>-1?void 0:i[0];return new e({functionName:s,fileName:a,lineNumber:i[1],columnNumber:i[2],source:t})}),this)},parseFFOrSafari:function(t){return t.stack.split("\n").filter((function(e){return!e.match(o)}),this).map((function(t){if(t.indexOf(" > eval")>-1&&(t=t.replace(/ line (\d+)(?: > eval line \d+)* > eval\:\d+\:\d+/g,":$1")),-1===t.indexOf("@")&&-1===t.indexOf(":"))return new e({functionName:t});var n=/((.*".+"[^@]*)?[^@]*)(?:@)/,o=t.match(n),r=o&&o[1]?o[1]:void 0,i=this.extractLocation(t.replace(n,""));return new e({functionName:r,fileName:i[0],lineNumber:i[1],columnNumber:i[2],source:t})}),this)},parseOpera:function(e){return!e.stacktrace||e.message.indexOf("\n")>-1&&e.message.split("\n").length>e.stacktrace.split("\n").length?this.parseOpera9(e):e.stack?this.parseOpera11(e):this.parseOpera10(e)},parseOpera9:function(t){for(var n=/Line (\d+).*script (?:in )?(\S+)/i,o=t.message.split("\n"),r=[],i=2,s=o.length;i<s;i+=2){var a=n.exec(o[i]);a&&r.push(new e({fileName:a[2],lineNumber:a[1],source:o[i]}))}return r},parseOpera10:function(t){for(var n=/Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,o=t.stacktrace.split("\n"),r=[],i=0,s=o.length;i<s;i+=2){var a=n.exec(o[i]);a&&r.push(new e({functionName:a[3]||void 0,fileName:a[2],lineNumber:a[1],source:o[i]}))}return r},parseOpera11:function(n){return n.stack.split("\n").filter((function(e){return!!e.match(t)&&!e.match(/^Error created at/)}),this).map((function(t){var n,o=t.split("@"),r=this.extractLocation(o.pop()),i=o.shift()||"",s=i.replace(/<anonymous function(: (\w+))?>/,"$2").replace(/\([^\)]*\)/g,"")||void 0;i.match(/\(([^\)]*)\)/)&&(n=i.replace(/^[^\(]+\(([^\)]*)\)$/,"$1"));var a=void 0===n||"[arguments not available]"===n?void 0:n.split(",");return new e({functionName:s,args:a,fileName:r[0],lineNumber:r[1],columnNumber:r[2],source:t})}),this)}}}));var T=v,j=function(e){return!(!e||!e.stack&&!e.stacktrace&&!e["opera#sourceloc"]||"string"!=typeof(e.stack||e.stacktrace||e["opera#sourceloc"])||e.stack===e.name+": "+e.message)},w=function(e){switch(Object.prototype.toString.call(e)){case"[object Error]":case"[object Exception]":case"[object DOMException]":return!0;default:return e instanceof Error}},x=function(e,t,n){"string"==typeof t&&(n?e[t]&&delete e[t][n]:delete e[t])},E={add:function(e,t,n,o){var r;if(t){var i;if(null===n)return x(e,t);"object"==typeof n&&(i=n),"string"==typeof n&&((r={})[n]=o,i=r),i&&(e[t]||(e[t]={}),e[t]=m({},e[t],i))}},get:function(e,t,n){if("string"==typeof t)return n?e[t]?e[t][n]:void 0:e[t]},clear:x},C={};!function(e,t){"use strict";"object"==typeof C?C=t(y):e.StackGenerator=t(e.StackFrame)}(this,(function(e){return{backtrace:function(t){var n=[],o=10;"object"==typeof t&&"number"==typeof t.maxStackSize&&(o=t.maxStackSize);for(var r=arguments.callee;r&&n.length<o&&r.arguments;){for(var i=new Array(r.arguments.length),s=0;s<i.length;++s)i[s]=r.arguments[s];/function(?:\s+([\w$]+))+\s*\(/.test(r.toString())?n.push(new e({functionName:RegExp.$1||void 0,args:i})):n.push(new e({args:i}));try{r=r.caller}catch(e){break}}return n}}}));var $=function(){function e(n,o,r,i,s){void 0===r&&(r=[]),void 0===i&&(i=S()),this.apiKey=void 0,this.context=void 0,this.groupingHash=void 0,this.originalError=s,this._handledState=i,this.severity=this._handledState.severity,this.unhandled=this._handledState.unhandled,this.app={},this.device={},this.request={},this.breadcrumbs=[],this.threads=[],this._metadata={},this._user={},this._session=void 0,this.errors=[{errorClass:B(n),errorMessage:B(o),type:e.__type,stacktrace:t(r,(function(e,t){var n=N(t);try{return"{}"===JSON.stringify(n)?e:e.concat(n)}catch(t){return e}}),[])}]}var n=e.prototype;return n.addMetadata=function(e,t,n){return E.add(this._metadata,e,t,n)},n.getMetadata=function(e,t){return E.get(this._metadata,e,t)},n.clearMetadata=function(e,t){return E.clear(this._metadata,e,t)},n.getUser=function(){return this._user},n.setUser=function(e,t,n){this._user={id:e,email:t,name:n}},n.toJSON=function(){return{payloadVersion:"4",exceptions:g(this.errors,(function(e){return m({},e,{message:e.errorMessage})})),severity:this.severity,unhandled:this._handledState.unhandled,severityReason:this._handledState.severityReason,app:this.app,device:this.device,request:this.request,breadcrumbs:this.breadcrumbs,context:this.context,groupingHash:this.groupingHash,metaData:this._metadata,user:this._user,session:this._session}},e}(),N=function(e){var t={file:e.fileName,method:_(e.functionName),lineNumber:e.lineNumber,columnNumber:e.columnNumber,code:void 0,inProject:void 0};return t.lineNumber>-1&&!t.file&&!t.method&&(t.file="global code"),t},_=function(e){return/^global code$/i.test(e)?"global code":e},S=function(){return{unhandled:!1,severity:"warning",severityReason:{type:"handledException"}}},B=function(e){return"string"==typeof e?e:""};$.getStacktrace=function(e,t,o){if(j(e))return T.parse(e).slice(t);try{return n(C.backtrace(),(function(e){return-1===(e.functionName||"").indexOf("StackGenerator$$")})).slice(1+o)}catch(e){return[]}},$.create=function(e,t,n,o,r,i){void 0===r&&(r=0);var s,a=L(e,t,o,i),l=a[0],c=a[1];try{var u=$.getStacktrace(l,c>0?1+c+r:0,1+r);s=new $(l.name,l.message,u,n,e)}catch(t){s=new $(l.name,l.message,[],n,e)}return"InvalidError"===l.name&&s.addMetadata(""+o,"non-error parameter",A(e)),s};var A=function(e){return null===e?"null":void 0===e?"undefined":e},L=function(e,t,n,o){var r,i=0,s=function(e){o&&o.warn(n+' received a non-error: "'+e+'"');var t=new Error(n+' received a non-error. See "'+n+'" tab for more detail.');return t.name="InvalidError",t};if(t)switch(typeof e){case"string":case"number":case"boolean":r=new Error(String(e)),i+=1;break;case"function":r=s("function"),i+=2;break;case"object":null!==e&&w(e)?r=e:null!==e&&P(e)?((r=new Error(e.message||e.errorMessage)).name=e.name||e.errorClass,i+=1):(r=s(null===e?"null":"unsupported object"),i+=2);break;default:r=s("nothing"),i+=2}else w(e)?r=e:(r=s(typeof e),i+=2);if(!j(r))try{throw r}catch(e){j(e)&&(r=e,i=1)}return[r,i]};$.__type="browserjs";var P=function(e){return!("string"!=typeof e.name&&"string"!=typeof e.errorClass||"string"!=typeof e.message&&"string"!=typeof e.errorMessage)},I=$,D=function(e,t,n,o){for(var r=!1,i=e.slice();!r&&i.length;)try{r=!1===i.pop()(t)}catch(e){o.error("Error occurred in "+n+" callback, continuing anyway…"),o.error(e)}return r},q=function(e,t){var n="000000000"+e;return n.substr(n.length-t)},O="object"==typeof window?window:self,M=0;for(var R in O)Object.hasOwnProperty.call(O,R)&&M++;var F=navigator.mimeTypes?navigator.mimeTypes.length:0,U=q((F+navigator.userAgent.length).toString(36)+M.toString(36),4),H=function(){return U},W=0,z=Math.pow(36,4);function V(){return q((Math.random()*z<<0).toString(36),4)}function J(){return"c"+(new Date).getTime().toString(36)+q((W=W<z?W:0,++W-1).toString(36),4)+H()+(V()+V())}J.fingerprint=H;var K=J,G=function(){function e(){this.id=K(),this.startedAt=new Date,this._handled=0,this._unhandled=0,this._user={},this.app={},this.device={}}var t=e.prototype;return t.getUser=function(){return this._user},t.setUser=function(e,t,n){this._user={id:e,email:t,name:n}},t.toJSON=function(){return{id:this.id,startedAt:this.startedAt,events:{handled:this._handled,unhandled:this._unhandled}}},t._track=function(e){this[e._handledState.unhandled?"_unhandled":"_handled"]+=1},e}(),Z=function(){},X=function(){function r(e,t,n,o){var i=this;void 0===t&&(t=d.schema),void 0===n&&(n=[]),this._notifier=o,this._config={},this._schema=t,this._delivery={sendSession:Z,sendEvent:Z},this._logger={debug:Z,info:Z,warn:Z,error:Z},this._plugins={},this._breadcrumbs=[],this._session=null,this._metadata={},this._context=void 0,this._user={},this._cbs={e:[],s:[],sp:[],b:[]},this.Client=r,this.Event=I,this.Breadcrumb=k,this.Session=G,this._config=this._configure(e,n),g(n.concat(this._config.plugins),(function(e){e&&i._loadPlugin(e)})),this._depth=1;var s=this,a=this.notify;this.notify=function(){return a.apply(s,arguments)}}var i=r.prototype;return i.addMetadata=function(e,t,n){return E.add(this._metadata,e,t,n)},i.getMetadata=function(e,t){return E.get(this._metadata,e,t)},i.clearMetadata=function(e,t){return E.clear(this._metadata,e,t)},i.getContext=function(){return this._context},i.setContext=function(e){this._context=e},i._configure=function(e,n){var o=t(n,(function(e,t){return t&&t.configSchema?m({},e,t.configSchema):e}),this._schema),r=t(a(o),(function(t,n){var r=o[n].defaultValue(e[n]);return void 0!==e[n]?o[n].validate(e[n])?o[n].allowPartialObject?t.config[n]=m(r,e[n]):t.config[n]=e[n]:(t.errors[n]=o[n].message,t.config[n]=r):t.config[n]=r,t}),{errors:{},config:{}}),i=r.errors,s=r.config;if(o.apiKey){if(!s.apiKey)throw new Error("No Bugsnag API Key set");/^[0-9a-f]{32}$/i.test(s.apiKey)||(i.apiKey="should be a string of 32 hexadecimal characters")}return this._metadata=m({},s.metadata),this._user=m({},s.user),this._context=s.context,s.logger&&(this._logger=s.logger),s.onError&&(this._cbs.e=this._cbs.e.concat(s.onError)),s.onBreadcrumb&&(this._cbs.b=this._cbs.b.concat(s.onBreadcrumb)),s.onSession&&(this._cbs.s=this._cbs.s.concat(s.onSession)),a(i).length&&this._logger.warn(Q(i,e)),s},i.getUser=function(){return this._user},i.setUser=function(e,t,n){this._user={id:e,email:t,name:n}},i._loadPlugin=function(e){var t=e.load(this);return e.name&&(this._plugins["~"+e.name+"~"]=t),this},i.getPlugin=function(e){return this._plugins["~"+e+"~"]},i._setDelivery=function(e){this._delivery=e(this)},i.startSession=function(){var e=new G;return e.app.releaseStage=this._config.releaseStage,e.app.version=this._config.appVersion,e.app.type=this._config.appType,e._user=m({},this._user),D(this._cbs.s,e,"onSession",this._logger)?(this._logger.debug("Session not started due to onSession callback"),this):this._sessionDelegate.startSession(this,e)},i.addOnError=function(e,t){void 0===t&&(t=!1),this._cbs.e[t?"unshift":"push"](e)},i.removeOnError=function(e){this._cbs.e=n(this._cbs.e,(function(t){return t!==e}))},i._addOnSessionPayload=function(e){this._cbs.sp.push(e)},i.addOnSession=function(e){this._cbs.s.push(e)},i.removeOnSession=function(e){this._cbs.s=n(this._cbs.s,(function(t){return t!==e}))},i.addOnBreadcrumb=function(e,t){void 0===t&&(t=!1),this._cbs.b[t?"unshift":"push"](e)},i.removeOnBreadcrumb=function(e){this._cbs.b=n(this._cbs.b,(function(t){return t!==e}))},i.pauseSession=function(){return this._sessionDelegate.pauseSession(this)},i.resumeSession=function(){return this._sessionDelegate.resumeSession(this)},i.leaveBreadcrumb=function(t,n,r){if(t="string"==typeof t?t:"",r="string"==typeof r&&o(e,r)?r:"manual",n="object"==typeof n&&null!==n?n:{},t){var i=new k(t,n,r);D(this._cbs.b,i,"onBreadcrumb",this._logger)?this._logger.debug("Breadcrumb not attached due to onBreadcrumb callback"):(this._breadcrumbs.push(i),this._breadcrumbs.length>this._config.maxBreadcrumbs&&(this._breadcrumbs=this._breadcrumbs.slice(this._breadcrumbs.length-this._config.maxBreadcrumbs)))}},i._isBreadcrumbTypeEnabled=function(e){var t=this._config.enabledBreadcrumbTypes;return null===t||o(t,e)},i.notify=function(e,t,n){void 0===n&&(n=Z);var o=I.create(e,!0,void 0,"notify()",this._depth+1,this._logger);this._notify(o,t,n)},i._notify=function(e,t,n){var i=this;if(void 0===n&&(n=Z),e.app=m({},e.app,{releaseStage:this._config.releaseStage,version:this._config.appVersion,type:this._config.appType}),e.context=e.context||this._context,e._metadata=m({},e._metadata,this._metadata),e._user=m({},e._user,this._user),e.breadcrumbs=this._breadcrumbs.slice(),null!==this._config.enabledReleaseStages&&!o(this._config.enabledReleaseStages,this._config.releaseStage))return this._logger.warn("Event not sent due to releaseStage/enabledReleaseStages configuration"),n(null,e);var s=e.severity,a=function(e){i._logger.error("Error occurred in onError callback, continuing anyway…"),i._logger.error(e)};!function(e,t,n,o){!function(e,t,n){var o=0,r=function(){if(o>=e.length)return n(null,!0);t(e[o],(function(e,t){return e?n(e):!1===t?n(null,!1):(o++,void r())}))};r()}(e,(function(e,o){if("function"!=typeof e)return o(null);try{if(2!==e.length){var r=e(t);return r&&"function"==typeof r.then?r.then((function(e){return setTimeout((function(){return o(null,e)}))}),(function(e){setTimeout((function(){return n(e),o(null,!0)}))})):o(null,r)}e(t,(function(e,t){if(e)return n(e),o(null);o(null,t)}))}catch(e){n(e),o(null)}}),o)}([].concat(this._cbs.e).concat(t),e,a,(function(t,o){if(t&&a(t),!o)return i._logger.debug("Event not sent due to onError callback"),n(null,e);i._isBreadcrumbTypeEnabled("error")&&r.prototype.leaveBreadcrumb.call(i,e.errors[0].errorClass,{errorClass:e.errors[0].errorClass,errorMessage:e.errors[0].errorMessage,severity:e.severity},"error"),s!==e.severity&&(e._handledState.severityReason={type:"userCallbackSetSeverity"}),e.unhandled!==e._handledState.unhandled&&(e._handledState.severityReason.unhandledOverridden=!0,e._handledState.unhandled=e.unhandled),i._session&&(i._session._track(e),e._session=i._session),i._delivery.sendEvent({apiKey:e.apiKey||i._config.apiKey,notifier:i._notifier,events:[e]},(function(t){return n(t,e)}))}))},r}(),Q=function(e,t){return new Error("Invalid configuration\n"+g(a(e),(function(n){return"  - "+n+" "+e[n]+", got "+Y(t[n])})).join("\n\n"))},Y=function(e){switch(typeof e){case"string":case"number":case"object":return JSON.stringify(e);default:return String(e)}},ee=X,te=function(e,t,n,o){var r=o&&o.redactedKeys?o.redactedKeys:[],i=o&&o.redactedPaths?o.redactedPaths:[];return JSON.stringify(function(e,t,n){var o=[],r=0;return function e(i,s){function a(){return s.length>8&&r>25e3}if(r++,s.length>20)return"...";if(a())return"...";if(null===i||"object"!=typeof i)return i;if(function(e,t){for(var n=0,o=e.length;n<o;n++)if(e[n]===t)return!0;return!1}(o,i))return"[Circular]";if(o.push(i),"function"==typeof i.toJSON)try{r--;var l=e(i.toJSON(),s);return o.pop(),l}catch(e){return ne(e)}var c;if((c=i)instanceof Error||/^\[object (Error|(Dom)?Exception)\]$/.test(Object.prototype.toString.call(c))){r--;var u=e({name:i.name,message:i.message},s);return o.pop(),u}if(function(e){return"[object Array]"===Object.prototype.toString.call(e)}(i)){for(var d=[],m=0,g=i.length;m<g;m++){if(a()){d.push("...");break}d.push(e(i[m],s.concat("[]")))}return o.pop(),d}var p={};try{for(var f in i)if(Object.prototype.hasOwnProperty.call(i,f))if(oe(n,s.join("."))&&re(t,f))p[f]="[REDACTED]";else{if(a()){p[f]="...";break}p[f]=e(ie(i,f),s.concat(f))}}catch(e){}return o.pop(),p}(e,[])}(e,r,i),t,n)};function ne(e){return"[Throws: "+(e?e.message:"?")+"]"}function oe(e,t){for(var n=0,o=e.length;n<o;n++)if(0===t.indexOf(e[n]))return!0;return!1}function re(e,t){for(var n=0,o=e.length;n<o;n++){if("string"==typeof e[n]&&e[n].toLowerCase()===t.toLowerCase())return!0;if(e[n]&&"function"==typeof e[n].test&&e[n].test(t))return!0}return!1}function ie(e,t){try{return e[t]}catch(e){return ne(e)}}var se,ae={},le=["events.[].metaData","events.[].breadcrumbs.[].metaData","events.[].request"];ae.event=function(e,t){var n=te(e,null,null,{redactedPaths:le,redactedKeys:t});if(n.length>1e6&&(e.events[0]._metadata={notifier:"WARNING!\nSerialized payload was "+n.length/1e6+"MB (limit = 1MB)\nmetadata was removed"},(n=te(e,null,null,{redactedPaths:le,redactedKeys:t})).length>1e6))throw new Error("payload exceeded 1MB limit");return n},ae.session=function(e,t){var n=te(e,null,null);if(n.length>1e6)throw new Error("payload exceeded 1MB limit");return n},se=function(e,t){return void 0===t&&(t=window),{sendEvent:function(n,o){void 0===o&&(o=function(){});var r=ce(e._config,"notify","4",t),i=new t.XDomainRequest;i.onload=function(){o(null)},i.open("POST",r),setTimeout((function(){try{i.send(ae.event(n,e._config.redactedKeys))}catch(t){e._logger.error(t),o(t)}}),0)},sendSession:function(n,o){void 0===o&&(o=function(){});var r=ce(e._config,"sessions","1",t),i=new t.XDomainRequest;i.onload=function(){o(null)},i.open("POST",r),setTimeout((function(){try{i.send(ae.session(n,e._config.redactedKeys))}catch(t){e._logger.error(t),o(t)}}),0)}}};var ce=function(e,t,n,o){var r=JSON.parse(JSON.stringify(new Date));return ue(e.endpoints[t],o.location.protocol)+"?apiKey="+encodeURIComponent(e.apiKey)+"&payloadVersion="+n+"&sentAt="+encodeURIComponent(r)},ue=se._matchPageProtocol=function(e,t){return"http:"===t?e.replace(/^https:/,"http:"):e},de=function(e,t){return void 0===t&&(t=window),{sendEvent:function(n,o){void 0===o&&(o=function(){});try{var r=e._config.endpoints.notify,i=new t.XMLHttpRequest;i.onreadystatechange=function(){i.readyState===t.XMLHttpRequest.DONE&&o(null)},i.open("POST",r),i.setRequestHeader("Content-Type","application/json"),i.setRequestHeader("Bugsnag-Api-Key",n.apiKey||e._config.apiKey),i.setRequestHeader("Bugsnag-Payload-Version","4"),i.setRequestHeader("Bugsnag-Sent-At",(new Date).toISOString()),i.send(ae.event(n,e._config.redactedKeys))}catch(t){e._logger.error(t)}},sendSession:function(n,o){void 0===o&&(o=function(){});try{var r=e._config.endpoints.sessions,i=new t.XMLHttpRequest;i.onreadystatechange=function(){i.readyState===t.XMLHttpRequest.DONE&&o(null)},i.open("POST",r),i.setRequestHeader("Content-Type","application/json"),i.setRequestHeader("Bugsnag-Api-Key",e._config.apiKey),i.setRequestHeader("Bugsnag-Payload-Version","1"),i.setRequestHeader("Bugsnag-Sent-At",(new Date).toISOString()),i.send(ae.session(n,e._config.redactedKeys))}catch(t){e._logger.error(t)}}}},me=new Date,ge=function(){me=new Date},pe={name:"appDuration",load:function(e){return e.addOnError((function(e){var t=new Date;e.app.duration=t-me}),!0),{reset:ge}}},fe=function(e,t){var n="000000000"+e;return n.substr(n.length-t)},be="object"==typeof window?window:self,he=0;for(var ke in be)Object.hasOwnProperty.call(be,ke)&&he++;var ye=navigator.mimeTypes?navigator.mimeTypes.length:0,ve=fe((ye+navigator.userAgent.length).toString(36)+he.toString(36),4),Te=function(){return ve},je=0,we=Math.pow(36,4);function xe(){return fe((Math.random()*we<<0).toString(36),4)}function Ee(){return"c"+(new Date).getTime().toString(36)+fe((je=je<we?je:0,++je-1).toString(36),4)+Te()+(xe()+xe())}Ee.fingerprint=Te;var Ce=Ee,$e=function(e,t){return void 0===e&&(e=navigator),void 0===t&&(t=window.screen),{load:function(n){var o={locale:e.browserLanguage||e.systemLanguage||e.userLanguage||e.language,userAgent:e.userAgent};t&&t.orientation&&t.orientation.type?o.orientation=t.orientation.type:o.orientation=document.documentElement.clientWidth>document.documentElement.clientHeight?"landscape":"portrait",n._config.generateAnonymousId&&(o.id=function(){try{var e=window.localStorage,t=e.getItem("bugsnag-anonymous-id");return t&&/^c[a-z0-9]{20,32}$/.test(t)||(t=Ce(),e.setItem("bugsnag-anonymous-id",t)),t}catch(e){}}()),n.addOnSession((function(e){e.device=m({},e.device,o),n._config.collectUserIp||Ne(e)})),n.addOnError((function(e){e.device=m({},e.device,o,{time:new Date}),n._config.collectUserIp||Ne(e)}),!0)},configSchema:{generateAnonymousId:{validate:function(e){return!0===e||!1===e},defaultValue:function(){return!0},message:"should be true|false"}}}},Ne=function(e){var t=e.getUser();t&&t.id||e.setUser(e.device.id)},_e=function(e){return void 0===e&&(e=window),{load:function(t){t.addOnError((function(t){t.request&&t.request.url||(t.request=m({},t.request,{url:e.location.href}))}),!0)}}},Se={load:function(e){e._sessionDelegate=Be}},Be={startSession:function(e,t){var n=e;return n._session=t,n._pausedSession=null,null===n._config.enabledReleaseStages||o(n._config.enabledReleaseStages,n._config.releaseStage)?(n._delivery.sendSession({notifier:n._notifier,device:t.device,app:t.app,sessions:[{id:t.id,startedAt:t.startedAt,user:t._user}]}),n):(n._logger.warn("Session not sent due to releaseStage/enabledReleaseStages configuration"),n)},resumeSession:function(e){return e._session?e:e._pausedSession?(e._session=e._pausedSession,e._pausedSession=null,e):e.startSession()},pauseSession:function(e){e._pausedSession=e._session,e._session=null}},Ae={load:function(e){e._config.collectUserIp||e.addOnError((function(e){e._user&&void 0===e._user.id&&delete e._user.id,e._user=m({id:"[REDACTED]"},e._user),e.request=m({clientIp:"[REDACTED]"},e.request)}))},configSchema:{collectUserIp:{defaultValue:function(){return!0},message:"should be true|false",validate:function(e){return!0===e||!1===e}}}},Le={load:function(e){!/^(local-)?dev(elopment)?$/.test(e._config.releaseStage)&&e._isBreadcrumbTypeEnabled("log")&&g(Pe,(function(n){var o=console[n];console[n]=function(){for(var r=arguments.length,i=new Array(r),s=0;s<r;s++)i[s]=arguments[s];e.leaveBreadcrumb("Console output",t(i,(function(e,t,n){var o="[Unknown value]";try{o=String(t)}catch(e){}if("[object Object]"===o)try{o=JSON.stringify(t)}catch(e){}return e["["+n+"]"]=o,e}),{severity:0===n.indexOf("group")?"log":n}),"log"),o.apply(console,i)},console[n]._restore=function(){console[n]=o}}))}},Pe=n(["log","debug","info","warn","error"],(function(e){return"undefined"!=typeof console&&"function"==typeof console[e]})),Ie=function(e,o){return void 0===e&&(e=document),void 0===o&&(o=window),{load:function(r){if(r._config.trackInlineScripts){var i=o.location.href,s="",a=e.attachEvent?"complete"===e.readyState:"loading"!==e.readyState,l=function(){return e.documentElement.outerHTML};s=l();var c=e.onreadystatechange;e.onreadystatechange=function(){"interactive"===e.readyState&&(s=l(),a=!0);try{c.apply(this,arguments)}catch(e){}};var u=null,d=function(e){u=e},m=function(){var t=e.currentScript||u;if(!t&&!a){var n=e.scripts||e.getElementsByTagName("script");t=n[n.length-1]}return t};r.addOnError((function(e){e.errors[0].stacktrace=n(e.errors[0].stacktrace,(function(e){return!/__trace__$/.test(e.method)}));var o=e.errors[0].stacktrace[0];if(!o||!o.file||o.file.replace(/#.*$/,"")===i.replace(/#.*$/,"")){var r=m();if(r){var c=r.innerHTML;e.addMetadata("script","content",c.length<=5e5?c:c.substr(0,5e5)),o&&o.lineNumber&&(o.code=function(e){a&&s||(s=l());var n=["\x3c!-- DOC START --\x3e"].concat(s.split("\n")),o=e-1,r=Math.max(o-3,0),i=Math.min(o+3,n.length);return t(n.slice(r,i),(function(e,t,n){return e[r+1+n]=t.length<=200?t:t.substr(0,200),e}),{})}(o.lineNumber))}}}),!0);var p=g(["setTimeout","setInterval","setImmediate","requestAnimationFrame"],(function(e){return De(o,e,(function(e){return f(e,(function(e){return{get:function(){return e[0]},replace:function(t){e[0]=t}}}))}))}))[0];g(["EventTarget","Window","Node","ApplicationCache","AudioTrackList","ChannelMergerNode","CryptoOperation","EventSource","FileReader","HTMLUnknownElement","IDBDatabase","IDBRequest","IDBTransaction","KeyOperation","MediaController","MessagePort","ModalWindow","Notification","SVGElementInstance","Screen","TextTrack","TextTrackCue","TextTrackList","WebSocket","WebSocketWorker","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","XMLHttpRequestUpload"],(function(e){o[e]&&o[e].prototype&&Object.prototype.hasOwnProperty.call(o[e].prototype,"addEventListener")&&(De(o[e].prototype,"addEventListener",(function(e){return f(e,qe)})),De(o[e].prototype,"removeEventListener",(function(e){return f(e,qe,!0)})))}))}function f(e,t,n){return void 0===n&&(n=!1),function(){var o=[].slice.call(arguments);try{var r=t(o),i=r.get();if(n&&e.apply(this,o),"function"!=typeof i)return e.apply(this,o);if(i.__trace__)r.replace(i.__trace__);else{var s=m();i.__trace__=function(){d(s),p((function(){d(null)}),0);var e=i.apply(this,arguments);return d(null),e},i.__trace__.__trace__=i.__trace__,r.replace(i.__trace__)}}catch(e){}if(e.apply)return e.apply(this,o);switch(o.length){case 1:return e(o[0]);case 2:return e(o[0],o[1]);default:return e()}}}},configSchema:{trackInlineScripts:{validate:function(e){return!0===e||!1===e},defaultValue:function(){return!0},message:"should be true|false"}}}};function De(e,t,n){var o=e[t];if(!o)return o;var r=n(o);return e[t]=r,o}function qe(e){var t=!!e[1]&&"function"==typeof e[1].handleEvent;return{get:function(){return t?e[1].handleEvent:e[1]},replace:function(n){t?e[1].handleEvent=n:e[1]=n}}}var Oe,Me=function(e){return void 0===e&&(e=window),{load:function(t){"addEventListener"in e&&t._isBreadcrumbTypeEnabled("user")&&e.addEventListener("click",(function(n){var o,r;try{o=Re(n.target),r=function e(t,n){var o=[t.tagName];if(t.id&&o.push("#"+t.id),t.className&&t.className.length&&o.push("."+t.className.split(" ").join(".")),!n.document.querySelectorAll||!Array.prototype.indexOf)return o.join("");try{if(1===n.document.querySelectorAll(o.join("")).length)return o.join("")}catch(e){return o.join("")}if(t.parentNode.childNodes.length>1){var r=Array.prototype.indexOf.call(t.parentNode.childNodes,t)+1;o.push(":nth-child("+r+")")}return 1===n.document.querySelectorAll(o.join("")).length?o.join(""):t.parentNode?e(t.parentNode,n)+" > "+o.join(""):o.join("")}(n.target,e)}catch(e){o="[hidden]",r="[hidden]",t._logger.error("Cross domain error when tracking click event. See docs: https://tinyurl.com/yy3rn63z")}t.leaveBreadcrumb("UI click",{targetText:o,targetSelector:r},"user")}),!0)}}},Re=function(e){var t,n,o=e.textContent||e.innerText||"";return o||"submit"!==e.type&&"button"!==e.type||(o=e.value),o=o.replace(/^\s+|\s+$/g,""),n=140,(t=o)&&t.length<=n?t:t.slice(0,n-"(...)".length)+"(...)"};Oe=function(e){return void 0===e&&(e=window),{load:function(t){if("addEventListener"in e&&t._isBreadcrumbTypeEnabled("navigation")){var n=function(e){return function(){return t.leaveBreadcrumb(e,{},"navigation")}};e.addEventListener("pagehide",n("Page hidden"),!0),e.addEventListener("pageshow",n("Page shown"),!0),e.addEventListener("load",n("Page loaded"),!0),e.document.addEventListener("DOMContentLoaded",n("DOMContentLoaded"),!0),e.addEventListener("load",(function(){return e.addEventListener("popstate",n("Navigated back"),!0)})),e.addEventListener("hashchange",(function(n){var o=n.oldURL?{from:Fe(n.oldURL,e),to:Fe(n.newURL,e),state:He(e)}:{to:Fe(e.location.href,e)};t.leaveBreadcrumb("Hash changed",o,"navigation")}),!0),e.history.replaceState&&Ue(t,e.history,"replaceState",e),e.history.pushState&&Ue(t,e.history,"pushState",e)}}}};var Fe=function(e,t){var n=t.document.createElement("A");return n.href=e,""+n.pathname+n.search+n.hash},Ue=function(e,t,n,o){var r=t[n];t[n]=function(i,s,a){e.leaveBreadcrumb("History "+n,function(e,t,n,o){var r=Fe(e.location.href,e);return{title:n,state:t,prevState:He(e),to:o||r,from:r}}(o,i,s,a),"navigation"),"function"==typeof e.resetEventCount&&e.resetEventCount(),e._config.autoTrackSessions&&e.startSession(),r.apply(t,[i,s].concat(void 0!==a?a:[]))}},He=function(e){try{return e.history.state}catch(e){}},We=function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=window),{load:function(n){if(n._isBreadcrumbTypeEnabled("request")){var r=[n._config.endpoints.notify,n._config.endpoints.sessions].concat(e);!function(){if("addEventListener"in t.XMLHttpRequest.prototype){var e=t.XMLHttpRequest.prototype.open;t.XMLHttpRequest.prototype.open=function(t,n){this["BS~~U"]=n,this["BS~~M"]=t,this["BS~~S"]&&(this.removeEventListener("load",a),this.removeEventListener("error",l)),this.addEventListener("load",a),this.addEventListener("error",l),this["BS~~S"]=!0,e.apply(this,arguments)}}}(),function(){if("fetch"in t&&!t.fetch.polyfill){var e=t.fetch;t.fetch=function(){var t,n=arguments,o=arguments[0],r=arguments[1],a=null;return o&&"object"==typeof o?(a=o.url,r&&"method"in r?t=r.method:o&&"method"in o&&(t=o.method)):(a=o,r&&"method"in r&&(t=r.method)),void 0===t&&(t="GET"),new Promise((function(o,r){e.apply(void 0,n).then((function(e){i(e,t,a),o(e)})).catch((function(e){s(t,a),r(e)}))}))}}}();var i=function(e,t,o){var r={status:e.status,request:t+" "+o};e.status>=400?n.leaveBreadcrumb("fetch() failed",r,"request"):n.leaveBreadcrumb("fetch() succeeded",r,"request")},s=function(e,t){n.leaveBreadcrumb("fetch() error",{request:e+" "+t},"request")}}function a(){if(!o(r,this["BS~~U"].replace(/\?.*$/,""))){var e={status:this.status,request:this["BS~~M"]+" "+this["BS~~U"]};this.status>=400?n.leaveBreadcrumb("XMLHttpRequest failed",e,"request"):n.leaveBreadcrumb("XMLHttpRequest succeeded",e,"request")}}function l(){o(r,this["BS~~U"].replace(/\?.*$/,""))||n.leaveBreadcrumb("XMLHttpRequest error",{request:this["BS~~M"]+" "+this["BS~~U"]},"request")}}}},ze={load:function(e){var t=0;e.addOnError((function(n){if(t>=e._config.maxEvents)return!1;t++})),e.resetEventCount=function(){t=0}},configSchema:{maxEvents:{defaultValue:function(){return 10},message:"should be a positive integer ≤100",validate:function(e){return l(1,100)(e)}}}},Ve={},Je=(Ve={load:function(e){e.addOnError((function(e){var n=t(e.errors,(function(e,t){return e.concat(t.stacktrace)}),[]);g(n,(function(e){e.file=Je(e.file)}))}))}})._strip=function(e){return"string"==typeof e?e.replace(/\?.*$/,"").replace(/#.*$/,""):e},Ke=function(e){return void 0===e&&(e=window),{load:function(t){if(t._config.autoDetectErrors&&t._config.enabledErrorTypes.unhandledExceptions){var n=e.onerror;e.onerror=function(e,o,r,i,s){if(0===r&&/Script error\.?/.test(e))t._logger.warn("Ignoring cross-domain or eval script error. See docs: https://tinyurl.com/yy3rn63z");else{var a,l={severity:"error",unhandled:!0,severityReason:{type:"unhandledException"}};if(s)a=t.Event.create(s,!0,l,"window onerror",1),Ge(a.errors[0].stacktrace,o,r,i);else if("object"!=typeof e||null===e||o&&"string"==typeof o||r||i||s)a=t.Event.create(e,!0,l,"window onerror",1),Ge(a.errors[0].stacktrace,o,r,i);else{var c=e.type?"Event: "+e.type:"Error",u=e.message||e.detail||"";(a=t.Event.create({name:c,message:u},!0,l,"window onerror",1)).originalError=e,a.addMetadata("window onerror",{event:e,extraParameters:o})}t._notify(a)}"function"==typeof n&&n.apply(this,arguments)}}}}},Ge=function(e,t,n,o){e[0]||e.push({});var r=e[0];r.file||"string"!=typeof t||(r.file=t),!r.lineNumber&&Ze(n)&&(r.lineNumber=n),r.columnNumber||(Ze(o)?r.columnNumber=o:window.event&&Ze(window.event.errorCharacter)&&(r.columnNumber=window.event.errorCharacter))},Ze=function(e){return"number"==typeof e&&"NaN"!==String.call(e)},Xe=function(e){return void 0===e&&(e=window),{load:function(t){if(t._config.autoDetectErrors&&t._config.enabledErrorTypes.unhandledRejections){var n=function(e){var n=e.reason,o=!1;try{e.detail&&e.detail.reason&&(n=e.detail.reason,o=!0)}catch(e){}var r=t.Event.create(n,!1,{severity:"error",unhandled:!0,severityReason:{type:"unhandledPromiseRejection"}},"unhandledrejection handler",1,t._logger);o&&g(r.errors[0].stacktrace,Qe(n)),t._notify(r,(function(e){var t;w(e.originalError)&&!e.originalError.stack&&e.addMetadata("unhandledRejection handler",((t={})[Object.prototype.toString.call(e.originalError)]={name:e.originalError.name,message:e.originalError.message,code:e.originalError.code},t))}))};"addEventListener"in e?e.addEventListener("unhandledrejection",n):e.onunhandledrejection=function(e,t){n({detail:{reason:e,promise:t}})}}}}},Qe=function(e){return function(t){t.file!==e.toString()&&t.method&&(t.method=t.method.replace(/^\s+/,""))}},Ye={},et=m({},d.schema,b),tt={_client:null,createClient:function(e){"string"==typeof e&&(e={apiKey:e}),e||(e={});var t,n=[pe,$e(),(void 0===t&&(t=window),{load:function(e){e.addOnError((function(e){void 0===e.context&&(e.context=t.location.pathname)}),!0)}}),_e(),ze,Se,Ae,Ve,Ke(),Xe(),Oe(),Me(),We(),Le,Ie()],o=new ee(e,et,n,{name:"Bugsnag JavaScript",version:"7.11.0",url:"https://github.com/bugsnag/bugsnag-js"});return o._setDelivery(window.XDomainRequest?se:de),o._logger.debug("Loaded!"),o.leaveBreadcrumb("Bugsnag loaded",{},"state"),o._config.autoTrackSessions?o.startSession():o},start:function(e){return tt._client?(tt._client._logger.warn("Bugsnag.start() was called more than once. Ignoring."),tt._client):(tt._client=tt.createClient(e),tt._client)}};return g(["resetEventCount"].concat(a(ee.prototype)),(function(e){/^_/.test(e)||(tt[e]=function(){if(!tt._client)return console.log("Bugsnag."+e+"() was called before Bugsnag.start()");tt._client._depth+=1;var t=tt._client[e].apply(tt._client,arguments);return tt._client._depth-=1,t})})),(Ye=tt).Client=ee,Ye.Event=I,Ye.Session=G,Ye.Breadcrumb=k,Ye.default=tt,Ye}()},,,,,,,,,,,function(e,t,n){"use strict";t.a='<?xml version="1.0" encoding="UTF-8"?>\n<svg height="23pt" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" width="23pt" version="1.1" viewBox="0,0,23,23">\n<title>Toggl Button</title>\n<defs/>\n<g opacity="1">\n\x3c!-- \n    WARNING!\n    Make sure that the "path" elements have the correct classes\n    so that the specific paths can be selected reliably.\n--\x3e\n<path class="play-icon" d="M3+11.5C3+6.80558+6.80558+3+11.5+3C16.1944+3+20+6.80558+20+11.5C20+16.1944+16.1944+20+11.5+20C6.80558+20+3+16.1944+3+11.5Z" opacity="1" fill="black"/>\n<path class="background-circle" d="M11.1+17C8.1+17+5.7+14.5+5.7+11.5C5.7+9+7.4+6.9+9.7+6.3L9.7+7.9C8.2+8.4+7.2+9.9+7.2+11.5C7.2+13.7+8.9+15.5+11.1+15.5C13.3+15.5+15.1+13.7+15.1+11.5C15.1+9.9+14+8.4+12.6+7.9L12.6+6.3C14.9+6.9+16.6+9+16.6+11.5C16.6+14.5+14.1+17+11.1+17L11.1+17ZM10.3+4.5L11.9+4.5L11.9+12.2L10.3+12.2L10.3+4.5ZM11.1+0.1C5+0.1+0+5.1+0+11.3C0+17.4+5+22.4+11.1+22.4C17.3+22.4+22.2+17.4+22.2+11.3C22.2+5.1+17.3+0.1+11.1+0.1L11.1+0.1Z" opacity="1" fill="#DD6FD1"/>\n</g>\n</svg>\n'},,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Airtable\n * @urlAlias airtable.com\n * @urlRegex *://airtable.com/*\n */\n'use strict';\n\ntogglbutton.render(\n  '.DetailViewWithActivityFeed:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const container = elem.querySelector('div[role=\"button\"]:nth-of-type(5)');\n\n    const getDescription = () => {\n      const description = elem.querySelector('.detailView .cellContainer textarea')\n      return description ? description.value : '';\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'airtable',\n      description: getDescription\n    });\n\n    container.after(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global togglbutton, $ */\n\n// Any.do Q3 2021: task card\ntogglbutton.render(\n  '.TaskEditPaneDetails:not(.toggl)',\n  { observe: true },\n  elem => {\n    const descriptionSelector = () => elem.querySelector('.TaskEditPaneDetails__taskTitle textarea').value;\n    const projectSelector = () => elem.querySelector('.TaskCategoryPickerButton__text').textContent;\n\n    const link = togglbutton.createTimerLink({\n      buttonType: 'minimal',\n      className: 'anydo--2021',\n      description: descriptionSelector,\n      projectName: projectSelector\n    });\n\n    elem.querySelector('.TaskEditPaneDetails__taskLabels').after(link);\n  }\n);\n\n// Any.do Q3 2021: tasks lists\ntogglbutton.render(\n  '.TaskList__taskContainer:not(.toggl)',\n  { observe: true },\n  elem => {\n    const descriptionSelector = () => elem.querySelector('.TaskItem__title').textContent;\n    const projectSelector = () => elem.querySelector('.TaskItemIndicators').textContent || document.querySelector('.TasksToolBar__title').textContent;\n\n    const link = togglbutton.createTimerLink({\n      buttonType: 'minimal',\n      className: 'anydo--2021__taskItem',\n      description: descriptionSelector,\n      projectName: projectSelector\n    });\n\n    elem.querySelector('.TaskItem__mainContent').after(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Asana\n * @urlAlias app.asana.com \n * @urlRegex *://app.asana.com/*\n */\n'use strict';\n\n\n// Board view. Inserts button next to assignee/due date.\ntogglbutton.render('.BoardCardLayout:not(.toggl)', { observe: true },\n  boadCardElem => {\n    if (boadCardElem.querySelector('.toggl-button')) {\n      // Due to the way this UI is rendered, we must check for existence of old buttons manually.\n      return;\n    }\n\n    const descriptionSelector = () => boadCardElem.querySelector('.BoardCard-taskName').textContent.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'asana-board-view',\n      description: descriptionSelector,\n      buttonType: 'minimal',\n      // N.B. Tags and ProjectName cannot be supported on board view as the information is not available.\n    });\n\n    const injectContainer = boadCardElem.querySelector('.BoardCardLayout-actionButtons');\n    if (injectContainer) {\n      injectContainer.insertAdjacentElement('afterbegin', link);\n    }\n  }\n);\n\n// Spreadsheet view. Inserts button next to to the task name.\ntogglbutton.render('.SpreadsheetRow .SpreadsheetTaskName:not(.toggl)', { observe: true },\n  function (taskNameCell) {\n    const container = taskNameCell.closest('.SpreadsheetRow');\n\n    if (container.querySelector('.toggl-button')) {\n      // Due to the way this UI is rendered, we must check for existence of old buttons manually.\n      return;\n    }\n\n    const descriptionSelector = () => taskNameCell.querySelector('textarea').textContent.trim();\n    const projectHeaderSelector = () => {\n      // Try to look for for page project title instead.\n      const projectHeader = document.querySelector('.TopbarPageHeaderStructure.ProjectPageHeader .TopbarPageHeaderStructure-title');\n      if (!projectHeader) {\n        return '';\n      }\n      return projectHeader.textContent\n        .replace(/\\u00a0/g, ' ') // There can be &nbsp; in Asana header content\n        .trim();\n    };\n    const projectSelector = () => {\n      const projectCell = container.querySelector('.SpreadsheetTaskRow-projectsCell');\n      if (!projectCell) {\n        // Try to look for for page project title instead.\n        return projectHeaderSelector();\n      }\n\n      // There can be multiple projects, but we can't support trying to match multiple yet.\n      const firstProject = projectCell.querySelector('.Pill');\n      return firstProject ? firstProject.textContent.trim() : projectHeaderSelector();\n    };\n\n    const tagsSelector = () => {\n      const tags = container.querySelectorAll('.SpreadsheetTaskRow-tagsCell .Pill');\n      return [...tags].map(tag => tag.textContent.trim());\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'asana-spreadsheet',\n      description: descriptionSelector,\n      projectName: projectSelector,\n      tags: tagsSelector,\n      buttonType: 'minimal'\n    });\n\n    taskNameCell.insertAdjacentElement('afterend', link);\n  }\n);\n\n// 2020 My Tasks view, possibly other similar views.\ntogglbutton.render('.MyTasksTaskRow:not(.toggl)', { observe: true },\n  function (elem) {\n    if (elem.querySelector('.toggl-button')) {\n      // Due to the way this UI is rendered, we must check for existence of old buttons manually.\n      return;\n    }\n    const descriptionSelector = () => elem.querySelector('.TaskName textarea').textContent;\n\n    // attempt at separating projects and tags, which are not differentiated in the dom\n    // assume first pill is a project and any others are tags\n    // misses tags which are in the \"...\" overflow, and if there is a tag without a project\n    const pillSelector = (type) => {\n      const pills = [...elem.querySelectorAll('.Pill')]\n        .map(pill => pill.textContent.trim());\n      if (type === 'project') {\n        return pills.length ? pills : '';\n      } else if (type === 'tags') {\n        return pills.length > 1 ? pills.slice(1) : [];\n      }\n    };\n\n    const projectSelector = () => {\n      return pillSelector('project');\n    };\n\n    const tagsSelector = () => {\n      return pillSelector('tags');\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'asana-new-ui',\n      description: descriptionSelector,\n      projectName: projectSelector,\n      tags: tagsSelector,\n      buttonType: 'minimal'\n    });\n\n    const wrapper = document.createElement('div');\n    wrapper.style.margin = '3px 0 0 4px';\n    wrapper.appendChild(link);\n\n    elem.appendChild(wrapper);\n  }\n);\n\n// Task detail. My Tasks, Spreadsheet, Board, ...\ntogglbutton.render('.TaskPane:not(.toggl)', { observe: true },\n  taskPaneEl => {\n    if (taskPaneEl.querySelector('.toggl-button')) {\n      // Due to the way this UI is rendered, we must check for existence of old buttons manually.\n      return;\n    }\n\n    const descriptionSelector = () => taskPaneEl.querySelector('.TaskPane-titleRow textarea').textContent.trim();\n\n    const projectSelector = () => {\n      const projectElement = taskPaneEl.querySelector('.TokenizerPillBase-name');\n      if (!projectElement) return '';\n\n      return projectElement.textContent.trim();\n    };\n\n    const tagsSelector = () => {\n      const tags = taskPaneEl.querySelectorAll('.TokenizerPillBase-name');\n      return [...tags].map(tag => tag.textContent.trim());\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'TaskPaneToolbar-button',\n      description: descriptionSelector,\n      projectName: projectSelector,\n      buttonType: 'minimal',\n      tags: tagsSelector\n    });\n\n    const injectContainer = taskPaneEl.querySelector('.TaskPaneExtraActionsButton');\n\n    if (injectContainer) {\n      injectContainer.parentNode.insertBefore(link, injectContainer.nextSibling);\n    }\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '#ticketDetailsContainer:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const container = createTag('li', 'toggle-container');\n\n    const descFunc = function () {\n      return document\n        .querySelector('#copyButton1')\n        .getAttribute('data-clipboard-text');\n    };\n\n    const projectFunc = function () {\n      return $('h1.header-w > span').textContent || '';\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'assembla',\n      description: descFunc,\n      projectName: projectFunc\n    });\n\n    container.appendChild(link);\n    $('ul.menu-submenu').appendChild(container);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Atlassian / Jira\n * @urlAlias atlassian.com\n * @urlRegex *://*.atlassian.com/*\n */\n'use strict';\n\n// Jira 2017 board sidebar\ntogglbutton.render(\n  '#ghx-detail-view [spacing] h1:not(.toggl)',\n  { observe: true },\n  function () {\n    if (process.env.DEBUG) {\n      console.info('🏃 \"Jira 2017 sidebar\" rendering');\n    }\n\n    const rootElem = $('#ghx-detail-view');\n    const container = createTag('div', 'jira-ghx-toggl-button');\n    const titleElem = $('[spacing] h1', rootElem);\n    const numElem = $('[spacing] a', rootElem);\n    const projectElem = $('.bgdPDV');\n    let description = titleElem.textContent;\n    if (numElem !== null) {\n      description = numElem.textContent + ' ' + description;\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'jira2017',\n      description: description,\n      buttonType: 'minimal',\n      projectName: projectElem && projectElem.textContent\n    });\n\n    container.appendChild(link);\n    numElem.parentNode.appendChild(container);\n  }\n);\n\n// Jira Jan 2020 issue detail page. Uses functions for timer values due to SPA on issue-lists.\ntogglbutton.render(\n  // The main \"issue link\" at the top of the issue.\n  '#jira-issue-header:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const issueWrapper = elem.querySelector('[data-test-id=\"issue.views.issue-base.foundation.breadcrumbs.breadcrumb-current-issue-container\"]');\n    let issueNumberElement;\n    let container;\n\n    if (issueWrapper) {\n      issueNumberElement = issueWrapper;\n      container = issueWrapper.parentElement;\n    } else {\n      container = elem.querySelector('[class^=BreadcrumbsContainer]');\n      issueNumberElement = container.lastElementChild;\n    }\n\n    if (container.querySelector('.toggl-button')) {\n      // We're checking for existence of the button as re-rendering in Jira SPA is not reliable for our uses.\n      if (process.env.DEBUG) {\n        console.info('🚫 \"Jira 2020-01 issue detail\" quit rendering early');\n      }\n      return;\n    }\n\n    if (process.env.DEBUG) {\n      console.info('🏃 \"Jira 2020-01 issue detail\" rendering');\n    }\n\n    try {\n      const link = togglbutton.createTimerLink({\n        className: 'jira2018',\n        description: getDescription(issueNumberElement),\n        projectName: getProject,\n        container: '#jira-issue-header'\n      });\n\n      container.appendChild(link);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n);\n\nconst getDescription = (issueNumberElement) => () => {\n  let description = '';\n\n  if (issueNumberElement) {\n    // Inspect deeper to avoid other hidden elements which can contain text\n    // https://github.com/toggl/toggl-button/issues/1644\n    const issueLink = issueNumberElement.querySelector('a');\n    if (issueLink) {\n      description += issueLink.textContent.trim();\n    }\n  }\n\n  const titleElement = document.querySelector('h1[data-test-id=\"issue.views.issue-base.foundation.summary.heading\"]');\n  if (titleElement) {\n    if (description) description += ' ';\n    description += titleElement.textContent.trim();\n  }\n\n  return description;\n};\n\nfunction getProject () {\n  const project = '';\n  let projectElement;\n\n  // Best effort to find the \"Project switcher\" found in the sidebar of most pages, and extract\n  // the project name from that. Historically project has not always been picked up reliably in Jira.\n  projectElement = $('[data-test-id=\"navigation-apps.project-switcher-v2\"] button > div:nth-child(2) > div');\n  // Attempt to find the project name in page subtitle in case the sidebar is hidden\n  if (!projectElement) projectElement = $('a[href^=\"/browse/\"][target=_self]');\n\n  if (projectElement) {\n    return projectElement.textContent.trim();\n  }\n\n  projectElement = $('[data-testid=\"rapidboard-breadcrumbs\"] a[href*=\"browse\"] span') || $('[data-test-id=\"rapidboard-breadcrumbs\"] a[href*=\"browse\"] span');\n\n  if (projectElement) {\n    try {\n      return projectElement.textContent.trim();\n    } catch (e) {\n      return '';\n    }\n  }\n\n  projectElement = $('[data-test-id=\"issue.views.issue-base.foundation.breadcrumbs.breadcrumb-current-issue-container\"]');\n\n  if (projectElement) {\n    const projectWrapper = projectElement.parentElement.querySelector('a[href*=\"browse\"] span + span');\n    return projectWrapper ? projectWrapper.textContent.trim() : '';\n  }\n\n  return project;\n}\n\n// Jira 2017 issue page\ntogglbutton.render(\n  '.issue-header-content:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    if (process.env.DEBUG) {\n      console.info('🏃 \"Jira 2017 issue page\" rendering');\n    }\n\n    const numElem = $('#key-val', elem);\n    const titleElem = $('#summary-val', elem) || '';\n    let projectElem = $('.bgdPDV');\n    let description;\n\n    if (titleElem) {\n      description = titleElem.textContent.trim();\n    }\n\n    if (numElem !== null) {\n      if (description) {\n        description = ' ' + description;\n      }\n      description = numElem.textContent + description;\n    }\n\n    if (projectElem === null) {\n      projectElem = $('[data-test-id=\"navigation-apps.project-switcher-v2\"] button > div:nth-child(2) > div');\n    }\n    // JIRA server support\n    if (projectElem === null) {\n      projectElem = $('#project-name-val');\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'jira2017',\n      description: description,\n      projectName: projectElem && projectElem.textContent.trim()\n    });\n\n    link.style.marginLeft = '8px';\n\n    const issueLinkContainer =\n      ($('.issue-link') || {}).parentElement || ($('.aui-nav li') || {}).lastElementChild;\n    issueLinkContainer && issueLinkContainer.appendChild(link);\n  }\n);\n\n// Jira pre-2017\ntogglbutton.render('#ghx-detail-issue:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const container = createTag('div', 'ghx-toggl-button');\n  const titleElem = $('[data-field-id=\"summary\"]', elem);\n  const numElem = $('.ghx-fieldname-issuekey a');\n  const projectElem = $('.ghx-project', elem);\n  let description = titleElem.textContent;\n  if (numElem !== null) {\n    description = numElem.textContent + ' ' + description;\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'jira',\n    description: description,\n    projectName: projectElem && projectElem.textContent\n  });\n\n  container.appendChild(link);\n  $('#ghx-detail-head').appendChild(container);\n});\n\n// Jira pre-2017\ntogglbutton.render(\n  '.issue-header-content:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    let description;\n    const numElem = $('#key-val', elem);\n    const titleElem = $('#summary-val', elem) || '';\n    const projectElem = $('#project-name-val', elem);\n\n    if (titleElem) {\n      description = titleElem.textContent;\n    }\n\n    if (numElem !== null) {\n      if (description) {\n        description = ' ' + description;\n      }\n      description = numElem.textContent + description;\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'jira',\n      description: description,\n      projectName: projectElem && projectElem.textContent\n    });\n\n    const ul = createTag('ul', 'toolbar-group');\n    const li = createTag('li', 'toolbar-item');\n    li.appendChild(link);\n    ul.appendChild(li);\n    $('.toolbar-split-left').appendChild(ul);\n  }\n);\n\n// Confluence\ntogglbutton.render('#title-heading:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const titleElem = $('[id=\"title-text\"]', elem);\n  const description = titleElem.textContent.trim();\n\n  const link = togglbutton.createTimerLink({\n    className: 'confluence',\n    description: description\n  });\n\n  $('#title-text').appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.item-field-name input:not(.toggl)',\n  { observe: true },\n  function () {\n    let titleText;\n    const wrapperElem = $('.axo-addEditItem-content');\n    const titleElem = $('#name', wrapperElem);\n    const beforeElem =\n        $('.axo-rating', wrapperElem) || $('.item-field-name', wrapperElem);\n\n    if (titleElem !== null) {\n      titleText = titleElem.value;\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'axosoft',\n      description: titleText || ''\n    });\n    link.classList.add('edit');\n    beforeElem.parentNode.insertBefore(link, beforeElem);\n  }\n);\n\ntogglbutton.render(\n  '.axo-view-item-content .item-field-name:not(.toggl)',\n  { observe: true },\n  function () {\n    const wrapperElem = $('.axo-view-item-content');\n    const titleElem = $('.item-field-name', wrapperElem);\n    const beforeElem = $('.axo-rating', wrapperElem) || titleElem;\n    let titleText;\n\n    if (titleElem !== null) {\n      titleText = titleElem.textContent;\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'axosoft',\n      description: titleText || ''\n    });\n    link.classList.add('view');\n    beforeElem.parentNode.insertBefore(link, beforeElem);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#issueArea:not(.toggl)', { observe: true }, function (elem) {\n  const container = createTag('span', '');\n  const ticketNumElem = $('.ticket__key .ticket__key-number', elem);\n  const titleElem = $('#summary .title-group__title-text', elem);\n  const projectElem = $('.project-header .header-icon-set__name');\n  const containerElem = $('#summary *:first-child');\n\n  const descFunc = function () {\n    return ticketNumElem.textContent + ' ' + titleElem.textContent;\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'Backlog',\n    description: descFunc,\n    projectName: projectElem.textContent,\n    calculateTotal: true\n  });\n\n  container.appendChild(link);\n  containerElem.parentNode.appendChild(container, containerElem);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Basecamp Next\ntogglbutton.render(\n  'section.todos li.todo:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const behavior = 'hover_content';\n    const container = $('.wrapper', elem);\n\n    if (container === null) {\n      return;\n    }\n\n    const projectFunc = function () {\n      const p = $('.project > title') || $('.project > header > h1 > a');\n      return p ? p.textContent : '';\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'basecamp',\n      description: $('.content_for_perma', elem).textContent,\n      projectName: projectFunc\n    });\n\n    link.setAttribute('data-behavior', behavior);\n    link.addEventListener('click', function (e) {\n      if (link.getAttribute('data-behavior') === '') {\n        link.setAttribute('data-behavior', behavior);\n      } else {\n        link.setAttribute('data-behavior', '');\n      }\n    });\n\n    const spanTag = document.createElement('span');\n    container.appendChild(spanTag.appendChild(link));\n  }\n);\n\n// Basecamp Classic\ntogglbutton.render(\n  '.items_wrapper .item > .content:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const behavior = 'selectable_target';\n\n    const link = togglbutton.createTimerLink({\n      className: 'basecamphq',\n      description: elem.querySelector('span.content > span').textContent.trim(),\n      projectName: $('.project')\n        ? ($('.project > title') || $('.project > header > h1 > a')).textContent\n        : ''\n    });\n\n    link.setAttribute('data-behavior', '');\n    link.addEventListener('click', function (e) {\n      if (link.getAttribute('data-behavior') === '') {\n        link.setAttribute('data-behavior', behavior);\n      } else {\n        link.setAttribute('data-behavior', '');\n      }\n    });\n\n    const spanTag = document.createElement('span');\n    $('.content', elem).appendChild(spanTag.appendChild(link));\n  }\n);\n\n// Basecamp 3\ntogglbutton.render('.todos li.todo:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const parent = $('.checkbox__content', elem);\n  const description = parent.childNodes[1].textContent.trim();\n  let project = $('#a-breadcrumb-menu-button');\n  project = project ? project.textContent : '';\n\n  const metadata = $('.metadata', parent);\n\n  const link = togglbutton.createTimerLink({\n    buttonType: metadata ? null : 'minimal',\n    className: 'basecamp3',\n    description: description,\n    projectName: project\n  });\n\n  const container = metadata || parent;\n  container.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#issue-header:not(.toggl)', {}, function (elem) {\n  let description;\n  const numElem = $('.issue-id');\n  const titleElem = $('#issue-title');\n  const projectElem = $('.entity-name');\n\n  description = titleElem.textContent;\n  if (numElem !== null) {\n    description = numElem.textContent.trim() + ' ' + description;\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'bitbucket',\n    description: description,\n    projectName: projectElem && projectElem.textContent.trim()\n  });\n\n  $('#issue-header').appendChild(link);\n});\n\ntogglbutton.render('#pull-request-header:not(.toggl)', {}, function (elem) {\n  let description;\n  const numElem = $('.pull-request-self-link');\n  const titleElem = $('.pull-request-title');\n  const projectElem = $('.entity-name');\n  let parentToAppendTo = '.pull-request-status';\n\n  if (titleElem !== null) {\n    description = titleElem.textContent.trim();\n    if (numElem !== null) {\n      description = numElem.textContent.trim() + ' ' + description;\n    }\n  } else {\n    // Bitbucket Server support as at version v5.9.0\n    description = $('.pr-title-jira-issues-trigger').closest('h2').textContent;\n    parentToAppendTo = '.pull-request-metadata';\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'bitbucket',\n    description: description,\n    projectName: projectElem && projectElem.textContent.trim()\n  });\n\n  $(parentToAppendTo).appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global togglbutton, $ */\n\nconst addButton = ($container, iframeSelector) => {\n  const link = togglbutton.createTimerLink({\n    className: 'bitrix24',\n    description: descriptionSelector,\n    projectName: projectSelector,\n    tags: tagsSelector\n  }, iframeSelector);\n\n  $container.appendChild(link);\n};\n\ntogglbutton.render(\n  '.task-detail .task-view-buttonset:not(.toggl)',\n  { observe: true },\n  addButton\n);\n\ntogglbutton.render(\n  '.task-detail .task-view-buttonset:not(.toggl)',\n  {\n    observe: true,\n    iframeSelector: 'iframe.side-panel-iframe:not(.toggl)'\n  },\n  $container => addButton($container, 'iframe.side-panel-iframe')\n);\n\nfunction descriptionSelector () {\n  const $description = $('#pagetitle');\n  return $description.textContent.trim();\n}\n\nfunction projectSelector () {\n  // Avoid invisible field - the project can be removed, but the project name still lingers invisibly in the UI.\n  const $project = $(\n    '.task-group-field:not(.invisible) .task-group-field-label'\n  );\n  return $project ? $project.textContent.trim() : '';\n}\n\nfunction tagsSelector () {\n  const $tags = $('#task-tags-line');\n  return $tags.textContent.split(',').map(tag => tag.trim());\n}\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.card_box:not(.toggl), .card-content:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const project = $('.project_name_card');\n\n    const link = togglbutton.createTimerLink({\n      className: 'breeze',\n      description: function () {\n        let description = $('.card_name', elem);\n        if (!description) {\n          description = $('.card-name', elem);\n        }\n        return description && description.textContent.trim();\n      },\n      projectName: project && project.textContent.trim()\n    });\n\n    link.setAttribute('data-action', 'start-time-entry');\n    $('.timer, .time-tracker', elem).appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global togglbutton, $ */\n\n// Task list\ntogglbutton.render(\n  '[data-toggl=\"taskRow\"]:not(.toggl)',\n  { observe: true },\n  $container => {\n    const $description = $('[data-toggl=\"taskRow-name\"]', $container);\n\n    const link = togglbutton.createTimerLink({\n      className: 'brokerengine',\n      description: () => $description.getAttribute('title').trim(),\n      buttonType: 'minimal'\n    });\n\n    $description.after(link);\n  }\n);\n\n// Loan view\ntogglbutton.render(\n  '[data-toggl=\"loanApp\"]:not(.toggl)',\n  { observe: true },\n  $container => {\n    const $header = $('[data-toggl=\"loanHeader\"]', $container);\n\n    const link = togglbutton.createTimerLink({\n      className: 'brokerengine',\n      description: () => $('h1', $header).getAttribute('title').trim()\n    });\n\n    $header.append(link);\n  }\n);\n\n// Loan drawer\ntogglbutton.render(\n  '[data-toggl=\"loanDrawer\"]:not(.toggl)',\n  { observe: true },\n  $container => {\n    const $header = $('[data-toggl=\"loanHeader\"]', $container);\n\n    const link = togglbutton.createTimerLink({\n      className: 'brokerengine',\n      description: () => $('h1', $header).getAttribute('title').trim()\n    });\n\n    $('[data-toggl=\"loanDrawer-headerCol\"]').append(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#detailBar > div:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const container = document.querySelector(\n    '#detailBar > div > div.taskDetails.panelContent.flexHeight.flexScroller > div.taskDetailMain > div.taskDetailMeta'\n  );\n\n  const description = document.querySelector(\n    '#detailBar > div > div.taskDetails.panelContent.flexHeight.flexScroller > div.taskDetailMain > div.taskDetailMeta > span > span'\n  );\n\n  const project = document.querySelector('#settingsBar > div.panelHead > div');\n\n  const descFunc = function () {\n    return description ? 'Task ' + description.textContent : '';\n  };\n\n  const projectFunc = function () {\n    return project\n      ? project.textContent\n        .trim()\n        .replace(/</g, '')\n        .trim()\n      : '';\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'bugherd',\n    description: descFunc,\n    projectName: projectFunc,\n    buttonType: 'minimal'\n  });\n\n  container.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global togglbutton, $ */\n\ntogglbutton.render(\n  '.ErrorShowHeadline:not(.toggl)',\n  { observe: true },\n  el => {\n    const link = togglbutton.createTimerLink({\n      className: 'bugsnag',\n      description: descriptionSelector\n    });\n\n    $('.ErrorShowHeadline-errorClassContext .ExpandableLine-content', el).appendChild(link);\n  }\n);\n\nconst descriptionSelector = el =>\n  ['.EventText-errorClass', '.EventText-errorLocation'].map(s => $(s, el).textContent.trim()).join(' ');\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('input[name=id]', {}, function (elem) {\n  const description = elem.value;\n\n  const link = togglbutton.createTimerLink({\n    className: 'bugzilla',\n    description: description,\n    projectName: 'Bugs'\n  });\n\n  const targetElement = $('#summary_alias_container') || $('#summary_container');\n\n  if (targetElement !== null) {\n    targetElement.appendChild(link);\n  }\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// List items\ntogglbutton.render('.list li:not(.toggl)', { observe: true }, function (elem) {\n  const taskElement = $('.task-title', elem);\n  const description = $('a', taskElement).textContent.trim();\n\n  const projectName = function () {\n    const label = $('span.highlight', taskElement);\n    if (label) {\n      return label.textContent;\n    }\n    return '';\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'capsule',\n    description: description,\n    projectName: projectName,\n    buttonType: 'minimal'\n  });\n\n  taskElement.appendChild(link);\n});\n\n// List items in new UI\ntogglbutton.render(\n  '.general-task-item:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const taskElement = $('.general-task-item-title', elem);\n\n    const description = function () {\n      const desc = $('.general-task-item-title-text', elem);\n      if (desc) {\n        return desc.textContent.trim();\n      }\n      return '';\n    };\n\n    const projectName = function () {\n      const label = $('.general-task-item-category', elem);\n      if (label) {\n        return label.textContent;\n      }\n      return '';\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'capsule',\n      description: description,\n      projectName: projectName,\n      buttonType: 'minimal'\n    });\n\n    taskElement.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#timeTrackingItem:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const description = $('.task-name', elem).textContent;\n  const project = $('.space-name', elem).textContent;\n\n  const link = togglbutton.createTimerLink({\n    className: 'clickup',\n    description: description,\n    projectName: project,\n    buttonType: 'minimal'\n  });\n\n  $('.toggl-container').appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#left-panel:not(.toggl)', {}, function () {\n  const wrap = createTag('div');\n  const prevElem = $('#left-panel .ui-grid-a');\n  const cloudesDescription = function () {\n    return $('title').textContent;\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'cloudes',\n    description: cloudesDescription\n  });\n\n  wrap.appendChild(link);\n  wrap.className = 'boxedDotted';\n  prevElem.parentNode.insertBefore(wrap, prevElem.nextSibling);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.story-state:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const wrap = createTag('div');\n  const element = elem;\n  elem = elem.parentNode.parentNode.parentNode;\n\n  const getDescription = function () {\n    return $('h2.story-name', elem).textContent;\n  };\n\n  const getProject = function () {\n    return $('.story-project .value', elem).textContent;\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'clubhouse',\n    description: getDescription,\n    projectName: getProject\n  });\n\n  wrap.className = 'attribute editable-attribute';\n  wrap.appendChild(link);\n\n  element.parentNode.insertBefore(wrap, element.nextSibling);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.main__header:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const description = $('div', elem).textContent;\n  const project = $('h3', elem).textContent;\n\n  const link = togglbutton.createTimerLink({\n    className: 'codeable',\n    description: description,\n    projectName: project\n  });\n\n  $('.task-developer .body').appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Tickets page\ntogglbutton.render('#content .right:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const description = $('h2.Thread__subject').textContent.trim();\n  const project = $('.site-header__title').textContent.trim();\n  const existingTag = $('.sidebar__module.toggl');\n\n  if (existingTag) {\n    if (existingTag.parentNode.firstChild.classList.contains('toggl')) {\n      return;\n    }\n    existingTag.parentNode.removeChild(existingTag);\n  }\n\n  const div = document.createElement('div');\n  div.classList.add('sidebar__module', 'toggl');\n\n  const link = togglbutton.createTimerLink({\n    className: 'codebase',\n    description: description,\n    projectName: project\n  });\n\n  div.appendChild(link);\n  elem.prepend(div);\n});\n\n// Merge Requests page\ntogglbutton.render(\n  '.merge-request-summary:not(.toggl)',\n  { observe: true },\n  function () {\n    const description = $('h2.u-ellipsis').textContent.trim();\n    const project = $('.site-header__title').textContent.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'codebase',\n      description: description,\n      projectName: project\n    });\n\n    $('.merge-request-summary__title').appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Tasks view\ntogglbutton.render(\n  '.liConversationCard:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const container = elem.querySelector('.card-header-right-section');\n    const descriptionElem = elem.querySelector('.task-title');\n    const projectElem = elem.querySelector('.card-header-project-name');\n    const togglButtonLoc = elem.querySelector('.card-header-visible-icons');\n\n    const link = togglbutton.createTimerLink({\n      className: 'corgee',\n      description: descriptionElem.textContent.trim(),\n      projectName: projectElem && projectElem.textContent.trim(),\n      buttonType: 'minimal'\n    });\n\n    container.insertBefore(link, togglButtonLoc);\n  }\n);\n\n// Project tasks view\ntogglbutton.render(\n  '.liConversationTitle:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const container = elem.querySelector('.task-name-widget');\n    const descriptionElem = elem.querySelector('.task-list .task-title');\n    const projectElem = document.querySelector('.project-details-name .click-to-edit .lbl-editable-input');\n\n    const link = togglbutton.createTimerLink({\n      className: 'corgee-tasks',\n      description: descriptionElem.textContent.trim(),\n      projectName: projectElem && projectElem.textContent.trim(),\n      buttonType: 'minimal'\n    });\n\n    container.insertBefore(link, descriptionElem);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n/**\n * @name Crowdin\n * @urlAlias crowdin.com\n * @urlRegex *://*.crowdin.com/*\n */\ntogglbutton.render('#panes-controller:not(.toggl)', { observe: true }, function () {\n    function getProjectName() {\n        let titleParts = document.title.split('-');\n\n        if (titleParts.length == 3) {\n            return titleParts[1].trim();\n        }\n\n        return undefined;\n    }\n\n    const fileName = document.querySelector('.file-name-wrapper .file-name');\n    const languageName = document.querySelector('span.language-name-wrapper');\n    const workflowStep = document.querySelector('.workflow-name-wrapper');\n    const projectName = getProjectName();\n\n    let descriptionParts = [];\n\n    projectName && descriptionParts.push(projectName);\n    fileName && descriptionParts.push(fileName.textContent.trim());\n    languageName && descriptionParts.push(languageName.textContent.trim());\n    workflowStep && descriptionParts.push(workflowStep.textContent.trim());\n\n    const link = togglbutton.createTimerLink({\n        className: 'crowdin',\n        description: descriptionParts.join(', '),\n        projectName: projectName,\n        buttonType: 'minimal'\n    });\n\n    const trackingButton = document.createElement('button');\n    trackingButton.classList.add('btn', 'btn-icon', 'pane-toggler', 'pane-toggler-right');\n    trackingButton.style.width = '34px';\n    trackingButton.style.height = '34px';\n    trackingButton.appendChild(link);\n\n    $('#panes-controller').prepend(trackingButton);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.case .content-top-toolbar .controls ul:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const projectName = document.querySelector('title').textContent;\n    const liTag = document.createElement('li');\n\n    const titleFunc = function () {\n      const titleElem = document.querySelector('.content h1.title');\n      const ticketNum = location.href.match(/case\\/(\\d+)/);\n      let description;\n\n      if (titleElem !== null) {\n        description = titleElem.textContent;\n      }\n\n      if (ticketNum) {\n        description = '#' + ticketNum[1] + ' ' + description;\n      }\n\n      return description;\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'desk',\n      description: titleFunc,\n      projectName: projectName && projectName.split(': ').shift(),\n      buttonType: 'minimal'\n    });\n\n    liTag.appendChild(link);\n    elem.insertBefore(\n      liTag,\n      elem.querySelector('.case .controls.pull-right li.actions')\n    );\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('._nav:not(.toggl)', { observe: true }, function () {\n  const getDescription = function () {\n    return document.title;\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'devdocs',\n    description: getDescription\n  });\n\n  const nav = $('nav._nav');\n\n  if (nav) {\n    link.classList.add('_nav-link');\n    link.style.marginTop = '0.8rem';\n    nav.insertBefore(link, nav.firstChild);\n  }\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  // Specify selector for element button needs to hook into\n  // Make sure to include :not(.toggl) to avoid duplicates\n  '.conversation-view__main [class^=conversationHeader__]:not(.toggl)',\n  { observe: true },\n  function (elem) {\n\n    const getConversationId = () => {\n      const csid = document.querySelector('.conversation-view__main button span').textContent;\n      const title = document.querySelector('.conversation-view__main [class^=conversationHeader__] [class^=headline__] p').textContent;\n      return `${csid} ${title}`;\n    };\n\n    const getProject = () => {\n      const subdomain = window.location.host.replace(\".dixa.com\", \"\");\n      return subdomain;\n    }\n\n    // Create timer link element\n    const link = togglbutton.createTimerLink({\n      description: getConversationId,\n      buttonType: 'minimal',\n      projectName: getProject,\n      className: 'dixa'\n    });\n\n    // Add link to element\n    const host = elem.querySelector('[class^=topActions__] [class^=root__]')\n    host.insertBefore(link, null);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.taskScroll:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  let description = $('.jQ_taskTitleEl a', elem);\n  if (!description) {\n    description = $('.jQ_taskTitleEl', elem);\n  }\n  const project = $('.txt-gry .jhtmlTicketsTicketViewItem .jQ_trigger', elem);\n\n  const link = togglbutton.createTimerLink({\n    className: 'dobambam',\n    description: description && description.textContent.trim(),\n    projectName: project && project.textContent.trim()\n  });\n\n  if ($('section.jQ_taskHeader')) {\n    $('section.jQ_taskHeader').appendChild(link);\n  }\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Add button to task detail view\ntogglbutton.render(\n  '[id^=taskview_task_]:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const titleElem = $('h3 > span.title.ng-binding', elem);\n    const projectElem = $('div > div.item.project.ng-binding', elem);\n    const description = titleElem ? titleElem.textContent : '';\n    let project = projectElem ? projectElem.textContent : '';\n\n    if (project !== '') {\n      project = project.substring(1); // remove '#'\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'doit',\n      description: description,\n      projectName: project\n    });\n\n    const firstOp = $('li.task-op').children[0];\n    $('li.task-op').insertBefore(link, firstOp);\n  }\n);\n\n// Add button to popup form ( like when editing project )\ntogglbutton.render(\n  '#taskform > div > div.taskform-main:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const titleElem = $('li.meta.task-title > div > div > div.textarea-tmp', elem);\n    const projectElem = $(\n      'li.meta.task-project.smart > div > div > ul > li.token > div',\n      elem\n    );\n    const description = titleElem ? titleElem.textContent : '';\n    const project = projectElem ? projectElem.textContent : '';\n\n    const link = togglbutton.createTimerLink({\n      className: 'doit',\n      description: description,\n      projectName: project\n    });\n\n    titleElem.parentElement.appendChild(link);\n  }\n);\n\n// Add button to tasks in the list\ntogglbutton.render('li.task:not(.toggl)', { observe: true }, function (elem) {\n  const titleElem = $('div.title > a.link-title', elem);\n  const projectElem = $('div.title > a.project', elem);\n  const description = titleElem ? titleElem.textContent : '';\n  const projectHeader = $('#project_info:not(.ng-hide)');\n  let project;\n\n  if (projectHeader) {\n    project = document.querySelector('#project_info span.title').textContent;\n  } else {\n    project = projectElem ? projectElem.textContent : '';\n    if (project !== '') {\n      project = project.substring(1); // remove '#'\n    }\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'doit',\n    buttonType: 'minimal',\n    description: description,\n    projectName: project\n  });\n\n  titleElem.parentElement.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#dokuwiki__content', { observe: false }, function (elem) {\n  const numElem = $('.pageId span');\n  const pName = numElem.textContent.split(':')[0].trim();\n  const target = $('.wrapper.group') || $('.pageId'); // DokuWiki Template // Bootstrap3 Template\n\n  const description = numElem.textContent\n    .split(' ')\n    .pop()\n    .trim();\n  const link = togglbutton.createTimerLink({\n    className: 'wiki',\n    description: description,\n    projectName: pName\n  });\n\n  target.prepend(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.toggl-root:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const integrationClassName = elem.getAttribute('data-class-name');\n  const description = elem.getAttribute('data-description');\n  const projectName = elem.getAttribute('data-project-name');\n  const projectId = elem.getAttribute('data-project-id');\n  const tags = elem.getAttribute('data-tags');\n  const type = elem.getAttribute('data-type');\n\n  const link = togglbutton.createTimerLink({\n    className: integrationClassName || 'dom-integration',\n    description: description,\n    projectName: projectName,\n    projectId: parseInt(projectId, 10),\n    tags: tags !== null ? tags.split(',') : [],\n    buttonType: type\n  });\n\n  elem.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#edit_menu_group:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const description = $('title').textContent.trim();\n  const link = togglbutton.createTimerLink({\n    className: 'draftin',\n    description: description\n  });\n\n  elem.parentNode.insertBefore(link, elem);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '#main-header:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const titleFunc = function () {\n      const title = $('.hp-header-title');\n      if (!title) {\n        return '';\n      }\n\n      const titleSpan = $('span', title);\n      return titleSpan ? titleSpan.textContent : '';\n    };\n\n    const projectNameFunc = function () {\n      const folder = $('.hp-pad-folder-name');\n      if (!folder) {\n        return '';\n      }\n\n      const textList = folder.querySelectorAll('.hp-breadcrumbs-text');\n\n      return textList.length === 0 ? '' : textList[textList.length - 1].textContent;\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'dropbox-paper',\n      description: titleFunc,\n      projectName: projectNameFunc,\n      buttonType: 'minimal'\n    });\n\n    const wrapper = createTag('div');\n    wrapper.className = 'toggl dropbox-paper-wrapper';\n    wrapper.appendChild(link);\n\n    const divider = $('.main-header-divider', elem);\n    divider.parentNode.insertBefore(wrapper, divider.nextSibling);\n  });\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  'body.node-type-project-issue #tabs ul:not(.toggl)',\n  {},\n  function (elem) {\n    const link = togglbutton.createTimerLink({\n      className: 'drupalorg',\n      description: elem.textContent\n    });\n\n    elem.appendChild(document.createElement('li').appendChild(link));\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '[data-id=\"ticketnumber.fieldControl-text-box-text\"]:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const header = $('#headerContainer');\n    const getDescription = function () {\n      // entity: incident\n      const ticketnumber = $(\n        'input[data-id=\"ticketnumber.fieldControl-text-box-text\"]'\n      );\n      const ticketname = $('input[data-id=\"title.fieldControl-text-box-text\"]');\n      if (ticketnumber || ticketname) {\n        return (\n          (ticketnumber ? ticketnumber.title + ' ' : '') +\n          (ticketname ? ticketname.title : '')\n        );\n      } else {\n        // other entities\n        if (!header) {\n          return '';\n        }\n        const title = $('h1', header);\n        if (!title) {\n          return '';\n        }\n        return title ? title.textContent : '';\n      }\n    };\n    const link = togglbutton.createTimerLink({\n      className: 'dynamics365',\n      description: getDescription\n    });\n    header.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Single task page\ntogglbutton.render(\n  '.single-tasks .right-side:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    let description;\n    const numElem = $('.task-id', elem);\n    const titleElem = $('.entry-title', elem);\n    const projectElem = $('.project a span.label', elem);\n    const project = projectElem.textContent.trim();\n\n    description = titleElem.textContent.trim();\n    if (numElem !== null) {\n      description = numElem.textContent + ' ' + description;\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'eproject',\n      description: description,\n      projectName: project\n    });\n\n    $('.toggl-timer').appendChild(link);\n  }\n);\n\n// Tasks listing page\ntogglbutton.render(\n  '.post-type-archive-tasks table.tasks-table tr:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    let projectName;\n    let description;\n    const className = 'huh';\n    const numElem = $('.task-id', elem);\n    const container = $('.times', elem);\n    const titleElem = $('.entry-title a span', elem);\n\n    if (container === null) {\n      return;\n    }\n\n    if ($('.entry-title a span', elem) === null) {\n      return;\n    }\n    // This needs to be after the null check above\n    description = titleElem.textContent.trim();\n\n    projectName = '';\n    if ($('.project-title a span.label')) {\n      projectName = $('.project-title a span.label').textContent.trim();\n    }\n\n    if (numElem !== null) {\n      description =\n        'Task: #' + numElem.textContent.trim() + ' ' + description.trim();\n      description = description.trim();\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'eproject',\n      description: description,\n      projectName: projectName,\n      buttonType: 'minimal'\n    });\n\n    link.classList.add(className);\n\n    link.addEventListener('click', function () {\n      // Run through and hide all others\n      let i;\n      let len;\n      const elems = document.querySelectorAll('.toggl-button');\n      for (i = 0, len = elems.length; i < len; i += 1) {\n        elems[i].classList.add('huh');\n      }\n\n      if (link.classList.contains(className)) {\n        link.classList.remove(className);\n      } else {\n        link.classList.add(className);\n      }\n    });\n\n    const spanTag = document.createElement('span');\n    spanTag.classList.add('toggl-span');\n    link.style.width = 'auto';\n    link.style.paddingLeft = '25px';\n    link.setAttribute('title', 'Toggl Timer');\n    spanTag.appendChild(link);\n    container.insertBefore(spanTag, container.lastChild);\n  }\n);\n\n// Home page recent tasks table\ntogglbutton.render(\n  '.home .table-recent-tasks tr:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    let projectName;\n    let description;\n    const className = 'huh';\n    const numElem = $('.task-id', elem);\n    const container = $('.actions', elem);\n    const titleElem = $('.task-title', elem);\n\n    if (container === null) {\n      return;\n    }\n\n    if ($('.task-title', elem) === null) {\n      return;\n    }\n    // This needs to be after the null check above\n    description = titleElem.textContent.trim();\n\n    projectName = '';\n    if ($('.project a span.label')) {\n      projectName = $('.project a span.label').textContent.trim();\n    }\n\n    if (numElem !== null) {\n      description =\n        'Task: #' + numElem.textContent.trim() + ' ' + description.trim();\n      description = description.trim();\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'eproject',\n      description: description,\n      projectName: projectName,\n      buttonType: 'minimal'\n    });\n\n    link.classList.add(className);\n\n    link.addEventListener('click', function () {\n      // Run through and hide all others\n      let i;\n      let len;\n      const elems = document.querySelectorAll('.toggl-button');\n      for (i = 0, len = elems.length; i < len; i += 1) {\n        elems[i].classList.add('huh');\n      }\n\n      if (link.classList.contains(className)) {\n        link.classList.remove(className);\n      } else {\n        link.classList.add(className);\n      }\n    });\n\n    const spanTag = document.createElement('span');\n    spanTag.classList.add('toggl-span');\n    link.style.width = 'auto';\n    link.style.float = 'right';\n    link.setAttribute('title', 'Toggl Timer');\n    spanTag.appendChild(link);\n    container.insertBefore(spanTag, container.lastChild);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.task-list-item', {}, function (elem) {\n  const description = elem.textContent;\n\n  const link = togglbutton.createTimerLink({\n    className: 'esa',\n    description: description\n  });\n\n  elem.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.issue_view:not(.toggl)', {}, function (elem) {\n  const issueId = $('#issue_overview', elem).getAttribute('data-issue-id');\n  const description = $('#issue_overview #issue_summary', elem).textContent;\n\n  // find the project dropdown\n  // if the dropdown exists, its multiproject\n  // otherwise take it from text value\n  const projectSelect = $(\n    '#project_chooser > form > select[name=current_project]',\n    elem\n  );\n  const project = projectSelect\n    ? projectSelect.options[projectSelect.selectedIndex].text\n    : $('#project_chooser').textContent.replace(/^\\s+Project:\\s/, '');\n\n  const link = togglbutton.createTimerLink({\n    className: 'eventum',\n    description: '#' + issueId + ' ' + description,\n    projectName: project,\n    tags: getTags\n  });\n\n  const container = $('div#issue_menu', elem);\n  const spanTag = document.createElement('span');\n  container.parentNode.appendChild(spanTag.appendChild(link));\n});\n\nfunction getTags () {\n  const customFields = getCustomFields();\n\n  // for now, just return values of all custom fields\n  return Object.values(customFields);\n}\n\n/**\n * Abstract method to extract custom fields as field name => field value.\n *\n * @returns {{}}\n */\nfunction getCustomFields () {\n  const fields = {};\n  const $rows = document.querySelectorAll('div.issue_section#custom_fields>div.content>table>tbody>tr');\n\n  if (!$rows) {\n    return fields;\n  }\n\n  for (const $row of Object.values($rows)) {\n    const $cells = $row.children;\n    const fieldName = $cells[0].textContent.trim();\n    const fieldValue = $cells[1].textContent.trim();\n\n    // Empty values have no purpose\n    if (!fieldValue) {\n      continue;\n    }\n    fields[fieldName] = fieldValue;\n  }\n\n  return fields;\n}\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#qa-NOTE_HEADER:not(.toggl)', { observe: true }, function (elem) {\n  if (elem.querySelector('.toggl-button')) {\n    // Check for existence in case it's there from previous render (SPA)\n    return;\n  }\n\n  const projectFunc = function () {\n    const projectElem = $('#qa-NOTE_PARENT_NOTEBOOK_BTN');\n    return projectElem ? projectElem.textContent : '';\n  };\n\n  const descriptionFunc = function () {\n    // FIXME: We can't get the description properly because it's in an iFrame\n    // This classname is the only indication of the \"active\" note in the sidebar, and this is guaranteed to break someday.\n    const descriptionElem = $('[id*=_qa-NOTES_SIDEBAR_NOTE].TSUJykWrzFUwd6gUIDTTl [id*=_qa-NOTES_SIDEBAR_NOTE_TITLE]');\n    return descriptionElem ? descriptionElem.textContent.trim() : '';\n  };\n\n  const link = togglbutton.createTimerLink({\n    projectName: projectFunc,\n    description: descriptionFunc,\n    buttonType: 'minimal',\n    className: 'evernote'\n  });\n\n  // Insert at the start of the same header segment as the share button\n  elem\n    .querySelector('#qa-SHARE_BUTTON')\n    .parentNode\n    .prepend(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Main function to add a Toggle Track button to the email view\n// of FastMail. Does not (yet...) integrate with Calendar or Contacts.\ntogglbutton.render(\n  // Add the button to the conversation view toolbar\n  '#conversation .v-Toolbar .v-Toolbar-flex:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    // Create timer link element\n    const link = togglbutton.createTimerLink({\n      description: function () {\n        // Use the subject as the description if we have one.\n        let subject = document.querySelector('#conversation .v-Thread-title');\n        if (subject.textContent) {\n          return subject.textContent;\n        } else {\n          return '';\n        }\n      },\n    });\n    \n    // Add fastmail styles to make the button look neatly integrated - copy\n    // them from the Archive button so we match the users theme.\n\t  link.classList.add(\n      ...document.querySelector('#conversation .s-archive').classList\n    );\n    // Swap the archive class with a toggl one\n    link.classList.replace('s-archive', 's-toggl');\n    \n    // A tiny little tweak to better vertically align the icon and text.\n    // Only do this if it's not already set to avoid breaking\n    // something in future.\n    if (!link.style.paddingTop) {\n      link.style.paddingTop = '2px';\n    }\n    \n    // Add link to element\n    elem.before(link);\n    \n    // Add a toolbar divider before the button\n    let toolbarDivider = document.createElement('span');\n    toolbarDivider.className = 'v-Toolbar-divider';\n    link.before(toolbarDivider);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.entryHeader:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const textnode = document.createTextNode('\\u00A0//\\u00A0 ');\n  const description = $('.entryTitle', elem).textContent;\n\n  const link = togglbutton.createTimerLink({\n    className: 'feedly',\n    description: description\n  });\n\n  elem.querySelector('.entryHeader > .metadata').appendChild(textnode);\n  elem.querySelector('.entryHeader > .metadata').appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n/* global togglbutton, $ */\n\nconst renderTogglButton = () => {\n  togglbutton.render('div.ObjectEditor:not(.toggl)', { observe: true }, $container => {\n    const descriptionSelector = () => {\n      const $description = $('.HeaderLayout textarea', $container);\n      return $description ? $description.textContent.trim() : '';\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'fibery',\n      description: descriptionSelector\n    });\n\n    $('div.ObjectEditorHeader > .HeaderLayout').appendChild(link);\n  });\n};\n\nrenderTogglButton();\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.action:not(.toggl)', { observe: true }, function (elem) {\n    let name = elem.querySelector('.action__title');\n\n    if (name == null) name = '';\n    const link = togglbutton.createTimerLink({\n      className: 'focuster',\n      description: name.textContent,\n      buttonType: 'minimal'\n    });\n    const linkContainer = document.createElement('div');\n    linkContainer.className = 'meta-item is-active';\n    linkContainer.append(link);\n\n    elem.querySelector('.meta-list').prepend(linkContainer);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('section.case:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const container = createTag('div', 'control');\n  const titleElem = $('.top h1', elem);\n  const projectElem = $('.top .case-header-info a');\n  const caseNoElem = $('.top .left a.case');\n  const controlsElem = $('nav .controls');\n\n  const link = togglbutton.createTimerLink({\n    className: 'fogbugz',\n    description: '[' + caseNoElem.textContent + '] ' + titleElem.textContent,\n    projectName: projectElem.textContent\n  });\n\n  container.appendChild(link);\n  controlsElem.appendChild(container);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Salesforce Lightning\n * @urlAlias force.com\n * @urlRegex *://*.force.com/*,*://*.lightning.force.com/*\n */\n'use strict';\n\n// Salesforce legacy view\n\n// Updated Listing view\ntogglbutton.render(\n  '.bMyTask .list tr.dataRow:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const container = elem.querySelectorAll(\n      '.bMyTask .list tr.dataRow .dataCell a'\n    )[0];\n    if (container === null) {\n      return;\n    }\n\n    const descFunc = () => {\n      return container.textContent;\n    };\n\n    const projectFunc = () => {\n      return (\n        ($('.accountBlock .mruText') &&\n          $('.accountBlock .mruText').textContent) ||\n        ''\n      );\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'salesforce-legacy',\n      buttonType: 'minimal',\n      description: descFunc,\n      projectName: projectFunc\n    });\n\n    container.insertBefore(link, container.firstChild);\n  }\n);\n\n// Detail view\ntogglbutton.render('#bodyCell:not(.toggl)', { observe: true }, function (elem) {\n  const container = $('.content', elem);\n\n  if (container === null) {\n    return;\n  }\n\n  const parent = $('.pageType', container);\n\n  if (!parent) {\n    return;\n  }\n\n  const descFunc = () => {\n    const desc = $('.pageDescription', container);\n    return desc ? desc.textContent.trim() : '';\n  };\n\n  const projectFunc = () => {\n    return (\n      ($('.accountBlock .mruText') &&\n        $('.accountBlock .mruText').textContent) ||\n      ''\n    );\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'salesforce-legacy',\n    description: descFunc,\n    projectName: projectFunc\n  });\n\n  parent.appendChild(link);\n});\n\n// Lightning Task List view/sidebar\ntogglbutton.render(\n  '.slds-split-view__list-item:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const getDescription = () => {\n      return $('.uiOutputText', elem).textContent.trim();\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'salesforce-list',\n      description: getDescription,\n      buttonType: 'minimal'\n    });\n\n    $('.uiOutputText', elem).parentElement.parentElement.appendChild(link);\n  }\n);\n\nconst lightningSelector = (selector) => {\n  // Navigate around many views being present in the DOM, hidden/revealed at various times\n  return $(`.slds-template__container > .lafSinglePaneWindowManager >.windowViewMode-normal ${selector}`);\n};\n\ntogglbutton.render(\n  '.utilitybar.slds-utility-bar:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const getDescription = () => {\n      let description = lightningSelector('.slds-page-header__title .uiOutputText:not(.selectedListView)');\n      const descriptionFromTitle = document.querySelector('title').textContent.split('| Salesforce').shift().trim()\n\n      if (!description) description = lightningSelector('.slds-page-header__title lightning-formatted-name');\n      if (!description) description = lightningSelector('.slds-page-header__title lightning-formatted-text');\n\n      return description ? description.textContent.trim() : descriptionFromTitle;\n    };\n\n    const getProject = () => {\n      // If there's localization these will fail, but we're mostly out of options.\n      let project = lightningSelector('[title=\"Account Name\"]');\n      if (!project) project = lightningSelector('[title=\"Related To\"]');\n      if (!project) project = lightningSelector('[title=\"Company\"]');\n\n      if (project) {\n        // We must try to go deep, since .textContent doesn't work at all on some components.\n        let innerEl = project.nextSibling.querySelector('a');\n        if (!innerEl) innerEl = project.nextSibling.querySelector('lightning-formatted-text');\n        return innerEl ? innerEl.textContent.trim() : '';\n      }\n      return getDescription();\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'salesforce',\n      description: getDescription,\n      projectName: getProject\n    });\n\n    const wrapper = document.createElement('li');\n    wrapper.classList.add('slds-utility-bar__item', 'slds-utility-bar__action', 'toggl-button-salesforce-wrapper');\n    wrapper.appendChild(link);\n    elem.appendChild(wrapper);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global createTag */\n\ntogglbutton.render('#Pagearea:not(.toggl)', { observe: true }, function (elem) {\n  const container = createTag('li', 'ticket-btns');\n  const titleElem = $('h2.subject', elem);\n  const idElem = $('#ticket-display-id');\n  const projectElem = $('.logo_text');\n  const buttonsElem = $('.ticket-actions > ul');\n  const description = idElem.textContent.trim() + ' ' + titleElem.textContent.trim();\n\n  const link = togglbutton.createTimerLink({\n    className: 'freshdesk',\n    description: description,\n    projectName: projectElem && projectElem.textContent.trim(),\n    calculateTotal: true\n  });\n\n  container.appendChild(link);\n  buttonsElem.appendChild(container, buttonsElem);\n});\n\n// Freshdesk mint (late 2018)\ntogglbutton.render('.page-actions__left:not(.toggl)', { observe: true }, elem => {\n  const descriptionElem = $('.ticket-subject-heading');\n\n  // if there's no description element it's overview page, don't show\n  if (!descriptionElem) {\n    return;\n  }\n\n  const descriptionSelector = () => {\n    const ticketNumber = $('.breadcrumb__item.active').textContent.trim();\n    // Remove other buttons/controls from the ticket subject\n    const subjectElement = $('.ticket-subject-heading').cloneNode(true);\n    for (const child of subjectElement.children) {\n      subjectElement.removeChild(child);\n    }\n\n    return `${ticketNumber} ${subjectElement.textContent.trim()}`;\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'freshdesk__mint',\n    description: descriptionSelector,\n    buttonType: 'minimal',\n    tags: () => {\n      const tagList = $('.ticket-tags ul');\n      if (!tagList ||\n        !tagList.children ||\n        !tagList.children.length) { return []; }\n\n      return [...tagList.querySelectorAll('li')]\n        .map(listItem => {\n          const content = listItem.querySelector('.tag-options');\n          const tag = content ? content.textContent : '';\n          return tag.trim().replace(/[\\r\\n\\t]/ig, ''); /* UI has strange characters in the markup, let's avoid it */\n        });\n    }\n  });\n\n  elem.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '#filter-navigator-container:not(.toggl)',\n  { observe: true },\n  function () {\n    const numElem = $('.item-title');\n    const titleElem = $('.item-title');\n    const projectElem = $('.project-info a');\n\n    let description = titleElem.textContent;\n    if (numElem !== null) {\n      description = numElem.textContent + ' ' + description;\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'gemini',\n      description: description,\n      projectName: projectElem.textContent\n    });\n\n    $('#filter-navigator-container').parentNode.insertBefore(\n      link,\n      $('#filter-navigator-container')\n    );\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// List items\ntogglbutton.render(\n  '.task-list-section-collection-list li:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const container = $('.content-list-item-label', elem);\n    const description = $('.content-list-item-name-wrapper', container).textContent;\n\n    // Have to remove the empty character projectName gets at the end\n    const link = togglbutton.createTimerLink({\n      className: 'getflow',\n      description: description,\n      projectName: $('.task-list-section-header-link').textContent.trim()\n    });\n\n    container.appendChild(link);\n  }\n);\n\n// Right side panel\ntogglbutton.render(\n  '#app-pane .task-pane-name-field-textarea:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const container = $('#app-pane .task-details-list');\n\n    const descFunc = function () {\n      return elem.value;\n    };\n\n    const projectFunc = function () {\n      return $('#app-pane .task-pane-details-list-link').textContent.trim();\n    };\n\n    // Have to remove the empty character projectName gets at the end\n    const link = togglbutton.createTimerLink({\n      className: 'getflow',\n      description: descFunc,\n      projectName: projectFunc\n    });\n\n    container.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#navbar:not(.toggl)', { observe: true }, function (elem) {\n  const description = $('.navbar-tree-name', elem);\n  const project = '';\n\n  const descFunc = function () {\n    return description.textContent.trim();\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'gingko-toggl-btn',\n    description: descFunc,\n    projectName: project,\n    buttonType: 'minimal'\n  });\n\n  link.style.margin = '9px';\n\n  $('.right-block').appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global togglbutton, $ */\n\ntogglbutton.render('.time-desc:not(.toggl)',\n  { observe: true },\n  $container => {\n    const link = togglbutton.createTimerLink({\n      className: 'gitea',\n      description: descriptionSelector,\n      tags: tagsSelector,\n      projectName: projectSelector,\n    });\n    $container.appendChild(link);\n  }\n);\n\nfunction descriptionSelector () {\n  const description = document.getElementById('issue-title');\n  const issueId = description.previousElementSibling;\n  return `${issueId.textContent} ${description.textContent}`;\n}\n\nfunction projectSelector () {\n  const $project = document.getElementsByClassName('repo-title')[0].children[3];\n  return $project ? $project.textContent.trim() : '';\n}\n\nfunction tagsSelector () {\n  const $tags = document.getElementsByClassName('labels')[0].children;\n  var $result = [];\n  $tags.forEach(element => {\n    if (element.children.length > 0 && !element.children[0].classList.contains(\"hide\")) {\n      $result.push(element.children[0].textContent);\n    }\n  });\n  return $result;\n}\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Github\n * @urlAlias github.com\n * @urlRegex *://github.com/*\n */\n'use strict';\n\n// We need it to get the issue name, the tag value is being changed dynamically\nconst getPaneTitle = async (elem) => {\n  return new Promise(resolve => {\n    const title = setInterval(() => {\n      const titleElem = elem.querySelector('#__primerPortalRoot__ header h2 span')\n      if (!!titleElem.textContent) {\n        clearInterval(title)\n        resolve(titleElem.textContent)\n      }\n    }, 100)\n  })\n} \n\n// Issue and Pull Request Page\ntogglbutton.render('#partial-discussion-sidebar', { observe: true }, function (\n  elem\n) {\n  const numElem = $('.gh-header-number');\n  const titleElem = $('.js-issue-title');\n  const projectElem = $('h1.public strong a, h1.private strong a');\n  const existingTag = $('.discussion-sidebar-item.toggl');\n\n  // Check for existing tag, create a new one if one doesn't exist or is not the first one\n  // We want button to be the first one because it looks different from the other sidebar items\n  // and looks very weird between them.\n\n  if (existingTag) {\n    if (existingTag.parentNode.firstChild.classList.contains('toggl')) {\n      return;\n    }\n    existingTag.parentNode.removeChild(existingTag);\n  }\n\n  let description = titleElem.textContent;\n  if (numElem !== null) {\n    description = numElem.textContent + ' ' + description.trim();\n  }\n\n  const div = document.createElement('div');\n  div.classList.add('discussion-sidebar-item', 'toggl');\n\n  const link = togglbutton.createTimerLink({\n    className: 'github',\n    description: description,\n    projectName: projectElem && projectElem.textContent\n  });\n\n  div.appendChild(link);\n  elem.prepend(div);\n});\n\n// Project Page side pane\ntogglbutton.render('div[role=\"dialog\"]:not(.toggl)', { observe: true }, async function (\n  elem\n) {\n  const numElem = elem.querySelector('#__primerPortalRoot__ header a')\n  const projectElem = document.querySelector('#memexTitleInput')\n\n  const parent = document.querySelector('dl')\n  const title = await getPaneTitle(elem)\n\n  let description = title;\n  if (numElem !== null) {\n    description = numElem.textContent + ' ' + description.trim();\n  }\n\n  const div = document.createElement('div');\n  div.classList = parent.children[0].classList.value;\n  div.style.paddingLeft = '16px'\n  \n  let projectName = ''\n  if (projectElem) projectName = projectElem.value\n\n  const link = togglbutton.createTimerLink({\n    className: 'github',\n    description: description,\n    projectName: projectName\n  });\n\n  div.appendChild(link);\n  parent.prepend(div)\n});\n\n// Project Page\ntogglbutton.render('.js-project-card-details .js-comment:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const titleElem = $('.js-issue-title');\n  const numElem = $('.js-project-card-details .project-comment-title-hover span.color-text-tertiary');\n  const projectElem = $('h1.public strong a, h1.private strong a');\n\n  let description = titleElem.textContent;\n  if (numElem !== null) {\n    description = numElem.textContent + ' ' + description.trim();\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'github',\n    description: description,\n    projectName: projectElem && projectElem.textContent\n  });\n\n  const wrapper = createTag('div', 'discussion-sidebar-item js-discussion-sidebar-item');\n  wrapper.appendChild(link);\n\n  const target = $('.discussion-sidebar-item');\n  target.parentNode.insertBefore(wrapper, target);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.issue-details .detail-page-description:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const prefix = [getId()].filter(Boolean)\n      .map(function(id) { return \"#\" + id;})\n      .join('');\n    const description = [prefix, getTitle(elem)].filter(Boolean).join(' ');\n\n    insertButton($('.detail-page-header-actions'), description, true);\n    insertButton($('.time_tracker'), description);\n  }\n);\n\ntogglbutton.render(\n  '.merge-request > .detail-page-header:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const prefix = [getId()].filter(Boolean)\n      .map(function(id) { return \"MR\" + id + \"::\";})\n      .join('');\n    const description = [prefix, getTitle(elem)].filter(Boolean).join(' ');\n\n    insertButton($('.detail-page-header-actions'), description, true);\n    insertButton($('.time_tracker'), description);\n  }\n);\n\n/**\n * @param $el\n * @param {String} description\n * @param {boolean} prepend\n */\nfunction insertButton ($el, description, prepend = false) {\n  const link = togglbutton.createTimerLink({\n    className: 'gitlab',\n    description: description,\n    tags: tagsSelector,\n    projectName: getProjectSelector\n  });\n\n  if (prepend) {\n    $el.parentElement.insertBefore(link, $el);\n  } else {\n    $el.parentElement.appendChild(link, $el);\n  }\n}\n\nfunction getTitle (parent) {\n  const el = parent.querySelector('.title');\n\n  return el ? el.textContent.trim() : '';\n}\n\nfunction getId () {\n  const pathname = window.location.pathname;\n  const pattern = /-\\/(issues|merge_requests)\\/(?<id>\\d+)/;\n  const result = pattern.test(pathname)\n    ? pathname.match(pattern)\n    : {groups: {id: ''}};\n  const id = result.groups.id;\n\n  return id;\n}\n\nfunction getProjectSelector () {\n  const $el = $('.title .project-item-select-holder') || $('.breadcrumbs-list li:nth-last-child(3) .breadcrumb-item-text');\n  return $el ? $el.textContent.trim() : '';\n}\n\nfunction tagsSelector () {\n  // GitLab 13.5\n  const nodeList = document.querySelectorAll('div.labels span[data-qa-label-name]');\n\n  if (!nodeList) {\n    return [];\n  }\n\n  const tags = [];\n\n  for (const node of Object.values(nodeList)) {\n    const tagName = node.getAttribute('data-qa-label-name');\n    tags.push(tagName);\n  }\n\n  return tags;\n}\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#issue-title:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const titleElem = $('#issue-title');\n  let description = titleElem.textContent.trim();\n  const projectElem = $('.issue .header .breadcrumb a:last-child');\n\n  description = $('.index').textContent + ' ' + description;\n  const project = projectElem.textContent.split(' / ').pop();\n\n  const link = togglbutton.createTimerLink({\n    className: 'gogs',\n    description: description,\n    projectName: project\n  });\n\n  $('.title h1').appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global $, togglbutton */\n\n/**\n * Google Calendar Modern\n *\n * Detail view and popup view support.\n *\n * Implementation notes:\n * - The popup view is re-used when a user clicks between each event without\n *   dismissing the popup.\n * - The way Calendar re-uses the popup view causes the .toggl class to\n     remain on the popup div.\n * - Detail view's container does not appear to be re-used, so the pseudo-class\n *   selector (i.e. \":not(.toggl)\") works for detail view.\n * - When implementing a selector, do not select on an aria-label's value;\n *   i18n will cause that selector to fail.\n */\n\nconst notTogglPseudoClass = ':not(.toggl)';\nconst popupDialogSelector = 'div[data-chips-dialog=\"true\"]';\nconst detailContainerSelector = 'div[data-is-create=\"false\"]';\nconst rootLevelSelectors = [\n  `${popupDialogSelector}`,\n  `${detailContainerSelector}${notTogglPseudoClass}`\n].join(',');\n\ntogglbutton.render(rootLevelSelectors, { observe: true }, elem => {\n  const elemIsPopup = $(popupDialogSelector, elem.parentElement);\n  const elemIsDetail = $(detailContainerSelector, elem.parentElement);\n  let getDescription;\n  let target;\n\n  if (elemIsPopup) {\n    // Popup selector reaches here repeatedly, so we need to prevent the\n    // creation of more than one Toggl button for a popup view.\n    if ($('.toggl-button', elem)) {\n      return;\n    }\n\n    const closeButton = $('[aria-label]:last-child', elem);\n\n    getDescription = () => {\n      const titleSpan = $('span[role=\"heading\"]', elem);\n      return titleSpan ? titleSpan.textContent.trim() : '';\n    };\n    target = closeButton.parentElement.nextSibling; // Left of the left-most action\n  } else if (elemIsDetail) {\n    const closeButton = $('div[aria-label]', elem);\n\n    getDescription = () => {\n      const titleInput = $('input[data-initial-value]', elem);\n      return titleInput ? titleInput.value.trim() : '';\n    };\n    target =\n      closeButton.parentElement.nextElementSibling.lastElementChild\n        .lastElementChild; // Date(s)/All day section\n  }\n\n  if (!target || target.tagName.toLowerCase() !== 'div') {\n    // Prevent adding a Toggl button to other dialogs/views, e.g. Create Event\n    return;\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'google-calendar-modern',\n    description: getDescription\n  });\n\n  if (elemIsPopup) {\n    target.prepend(link);\n  } else if (elemIsDetail) {\n    target.appendChild(link);\n  }\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('div[data-without-stream-item-materials]', { observe: true }, elem => {\n  if ($('.toggl-button', elem)) {\n    return;\n  }\n\n  const title = $('h1', elem);\n  const titleFunc = () => {\n    return title ? title.textContent.trim() : '';\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'google-classroom',\n    description: titleFunc\n  });\n\n  link.style.margin = '1rem 1rem 0';\n  link.style.whiteSpace = 'nowrap';\n\n  title.nextSibling.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#docs-bars:not(.toggl)', {}, function (elem) {\n  const titleFunc = function () {\n    const title = $('.docs-title-input');\n    return title ? title.value : '';\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'google-docs',\n    description: titleFunc\n  });\n  $('#docs-menubar').appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.bJ:not(.toggl)', { observe: true }, function (elem) {\n  const description = $('.eo > span', elem).textContent;\n  const toolbar = $('.iK', elem);\n\n  const link = togglbutton.createTimerLink({\n    className: 'google-inbox',\n    description: description,\n    buttonType: 'minimal'\n  });\n\n  toolbar.parentElement.insertBefore(link, toolbar);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Whole note\ntogglbutton.render('.IZ65Hb-TBnied:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const toolbar = $('.IZ65Hb-INgbqf', elem);\n  const description = $('.IZ65Hb-YPqjbf:not(.LwH6nd)', elem).textContent;\n\n  const tagFunc = function () {\n    let index;\n    const tags = [];\n    const tagItems = $('.IZ65Hb-jfdpUb', elem).children;\n\n    for (index in tagItems) {\n      if (tagItems.hasOwnProperty(index) && tagItems[index].classList.contains('notranslate')) {\n        tags.push(tagItems[index].textContent);\n      }\n    }\n    return tags;\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'keep',\n    buttonType: 'minimal',\n    description: description,\n    tags: tagFunc\n  });\n  toolbar.appendChild(link);\n});\n\n// Checklist inside a note\ntogglbutton.render(\n  '.IZ65Hb-TBnied .gkA7Yd-sKfxWe .CmABtb.RNfche:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const position = $('.IZ65Hb-MPu53c-haAclf', elem);\n    const description = elem.textContent;\n\n    const link = togglbutton.createTimerLink({\n      className: 'keep',\n      buttonType: 'minimal',\n      description: description\n    });\n    position.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.ha:not(.toggl)', { observe: true }, function (elem) {\n  const description = $('h2', elem);\n  const project = $('.hX:last-of-type .hN', elem);\n\n  if (!description) {\n    return;\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'google-mail',\n    description: description.textContent,\n    projectName: !!project && project.textContent.split('/').pop()\n  });\n\n  elem.appendChild(link);\n});\n\n// This enables support for popup gmail view used by dragapp.com extension\ntogglbutton.render('div.subject:not(.toggl)', { observe: true }, function (elem) {\n  const description = $('span', elem);\n\n  if (!description) {\n    return;\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'google-mail',\n    description: description.textContent\n  });\n\n  elem.children[0].insertBefore(link, elem.children[0].children[1]);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name GQueues\n * @urlAlias gqueues.com\n * @urlRegex *://*.gqueues.com/*\n */\n 'use strict';\n\nfunction insertAfter (newNode, referenceNode) {\n  referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\n\ntogglbutton.render(\n  '#gqItemList .gq-task-row:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    let link;\n    const container = createTag('div', 'taskItem-toggl');\n    const titleElem = $('.gq-task-title', elem);\n    const projectContainer = $('#gqQueueContentHeader #gqQueueTitle input') || {};\n\n    if (titleElem) {\n      link = togglbutton.createTimerLink({\n        className: 'gqueues',\n        buttonType: 'minimal',\n        description: () => {\n          return titleElem.textContent\n        },\n        projectName: () => {\n          return projectContainer.value\n        }\n      });\n\n      container.appendChild(link);\n      container.style.paddingTop = '5px'; // move button 5px down\n      insertAfter(container, titleElem);\n    }\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.daily .tasks-list .task:not(.toggl), .habit .tasks-list .task:not(.toggl), .todo .tasks-list .task:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const text = $('.task-title', elem).textContent.trim();\n    const container = $('.icons-right', elem);\n\n    const link = togglbutton.createTimerLink({\n      className: 'habitica',\n      description: text,\n      buttonType: 'minimal'\n    });\n\n    container.prepend(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n/* workitems / tasks view */\ntogglbutton.render('.edit-container:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const titleEl = $('.header-title-container', elem);\n  const number = $('.token-number', titleEl).textContent;\n  const subject = $('.vk-editableText span', titleEl).textContent;\n\n  const descriptionFunc = function () {\n    const task = $('.first-panel .vk-accordion-title', elem);\n    const taskText = task ? ' - ' + task.textContent : '';\n    const description = number + subject + taskText;\n\n    return description;\n  };\n\n  const project = $('#miAppsPopover').textContent;\n\n  const link = togglbutton.createTimerLink({\n    className: 'heflo',\n    description: descriptionFunc,\n    projectName: project\n  });\n\n  $('.header-btn-container', elem).appendChild(link);\n});\n\n/* process editor view */\ntogglbutton.render(\n  '.vk-mainDiagram:not(.toggl)',\n  { observe: true },\n  function () {\n    const liTag = document.createElement('li');\n\n    const descriptionFunc = function () {\n      return window.document.title;\n    };\n\n    const project = $('#miAppsPopover').textContent;\n    const lastEl = $('.navbar-nav');\n\n    liTag.className = 'navbar-right toggl-container';\n\n    const link = togglbutton.createTimerLink({\n      className: 'heflo',\n      description: descriptionFunc,\n      projectName: project\n    });\n\n    liTag.appendChild(link);\n    lastEl.insertBefore(\n      liTag,\n      lastEl.querySelector('.navbar-save-button').nextSibling\n    );\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="togglbutton.render(\n  '.b-topic__sidebar_head span.ticket_toggl:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = function () {\n      return $('#extension_data').dataset.description;\n    };\n\n    const project = function () {\n      return $('#extension_data').dataset.project;\n    };\n\n    const tags = function () {\n      return ($('#extension_data').dataset.tags || '').split(',').map((tag) => tag.trim());\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'helprace',\n      description: description,\n      projectName: project,\n      tags: tags\n    });\n\n    elem.appendChild(link, elem);\n  });\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.convo-actions:not(.toggl)', { observe: true }, function () {\n  const description =\n      '#' +\n      $('#tkHeader strong').textContent +\n      ' ' +\n      $('#subjectLine').textContent;\n\n  const link = togglbutton.createTimerLink({\n    className: 'helpscout',\n    description: description,\n    buttonType: 'minimal'\n  });\n\n  link.setAttribute('style', 'margin-top: 10px');\n\n  const listItem = document.createElement('li');\n  listItem.appendChild(link);\n\n  $('.convo-actions').appendChild(listItem);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.toggl-target:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const description = elem.getAttribute('data-descr');\n  const project = elem.getAttribute('data-proj');\n\n  const link = togglbutton.createTimerLink({\n    className: 'husky-marketing-planner',\n    description: description,\n    projectName: project\n  });\n\n  elem.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Intercom 2021\ntogglbutton.render('[data-conversation-id] > * [data-intercom-target=\"conversation-card-header\"]:not(.toggl)', { observe: true }, elem => {\n  const descriptionSelector = () => {\n    const titleContainer = elem.querySelector('.conversation__card__title__text');\n    const customTitleInput = titleContainer.querySelector('input');\n\n    if (customTitleInput && customTitleInput.value) {\n      return customTitleInput.value;\n    }\n\n    return titleContainer.textContent.replace(/\\s\\s+/g, ' ').replaceAll('\\n', '').trim();\n  };\n  const link = togglbutton.createTimerLink({ className: 'intercom', description: descriptionSelector, buttonType: 'minimal' });\n\n  elem.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global togglbutton, $ */\n\nconst stylesheet = document.styleSheets.item(document.styleSheets.length - 1);\nstylesheet.insertRule('.toggl-button.active {visibility:visible !important}');\n\ntogglbutton.render(\n  '.ListItem:not(.toggl)',\n  { observe: true },\n  $container => {\n    const descriptionSelector = () => {\n      const $description = $('.ListItem-text', $container);\n      return $description.textContent.trim();\n    };\n\n    const projectSelector = () => {\n      const $project = $('.ListItem-project-name', $container);\n      return $project.textContent.trim();\n    };\n\n    const linkStyle = 'margin-left: 5px;visibility: hidden';\n    const link = togglbutton.createTimerLink({\n      className: 'kanbanist',\n      description: descriptionSelector,\n      projectName: projectSelector,\n      buttonType: 'minimal'\n    });\n    link.classList.add('task-link');\n    link.setAttribute('style', linkStyle);\n    $('.ListItem-text', $container).after(link);\n    $container.onmouseenter = () => {\n      console.log(link.style.visibility);\n      link.style.visibility = 'visible';\n    };\n    $container.onmouseleave = () => {\n      console.log(link.style.visibility);\n      link.style.visibility = 'hidden';\n    };\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\nconsole.log('Toggl Button loaded for kanboard.');\n\nfunction addTimerLink (elem, description, location) {\n  const text = $(description, elem).textContent;\n\n  const link = togglbutton.createTimerLink({\n    className: 'kanboard',\n    description: text\n  });\n\n  $(location, elem).appendChild(link);\n}\n\n// dashboard user tasks\ntogglbutton.render(\n  '.sidebar-content .page-header + .table-list .table-list-row:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    addTimerLink(elem, '.table-list-title a', '.table-list-title');\n  }\n);\n\n// dashboard user tasks subtasks table\ntogglbutton.render(\n  '.sidebar-content .page-header + .table-list .table-list-row .task-list-subtask:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    addTimerLink(elem, '.subtask-title a', '.subtask-time-tracking');\n  }\n);\n\n// project task list\ntogglbutton.render(\n  '.page > .table-list > .table-list-row:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    addTimerLink(elem, '.table-list-title a', '.table-list-title');\n  }\n);\n\n// task details page\ntogglbutton.render('#task-summary:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  if (!$('.buttons-header', elem)) {\n    const div = document.createElement('div');\n    div.className = 'buttons-header';\n    $('.task-summary-container', elem).after(div);\n  }\n  addTimerLink(elem, 'h2', '.buttons-header');\n});\n\n// task details page subtasks table\ntogglbutton.render(\n  '.subtasks-table tbody tr:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    addTimerLink(elem, '.subtask-title a', '.subtask-time-tracking');\n  }\n);\n\n// task details page subtasks table\ntogglbutton.render(\n  '.ui-tooltip tbody tr + tr:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const span = document.createElement('span');\n    span.setAttribute('style', 'padding-left: 10px');\n    $('.subtask-title', elem).after(span);\n    addTimerLink(elem, '.subtask-title a', '.subtask-title + span');\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global togglbutton, $ */\n\n/** Features:\n *  - Add timer to the card\n *  - Add timer to the sub-tasks list\n *  - Get toggl project name from kantree card\n *  - Get toggl tags from kantree card\n *  - Handle card view mode changes\n */\n\n/* Card button */\ntogglbutton.render(\n  '.card-view:not(.toggl)',\n  { observe: true },\n  (elem) => {\n    const buildTaskTitle = () => {\n      const cardRef = $('.card-view-header a.ref', elem) || false;\n\n      if (!cardRef || !cardRef.innerHTML) {\n        return false;\n      }\n\n      const cardId = cardRef.innerHTML;\n      const cardTitle = $('.card-view-header h2', elem) && $('.card-view-header h2', elem).textContent;\n      return `${cardId} ${cardTitle}`;\n    };\n\n    const descElem = $('.card-view-attributes-form', elem);\n    const container = createTag('div', 'kt-card-toggl-btn');\n    const taskTitle = buildTaskTitle();\n\n    if (!descElem || !taskTitle) {\n      return;\n    }\n\n    const getTags = () => {\n      const tags = [];\n      const tagItems = document.querySelectorAll('.attribute-type-group-type .group', elem);\n\n      if (!tagItems) {\n        return tags;\n      }\n\n      for (const index in tagItems) {\n        if (tagItems.hasOwnProperty(index)) {\n          tags.push(tagItems[index].textContent.trim());\n        }\n      }\n      return tags;\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'kantree',\n      description: taskTitle,\n      projectName: getProjTitle,\n      calculateTotal: true,\n      tags: getTags\n    });\n\n    container.appendChild(link);\n    descElem.parentNode.insertBefore(container, descElem);\n  },\n  '#card-modal-host, .card-modal'\n);\n\ntogglbutton.render(\n  '.card-tile-content:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const subTaskRef = $('.ref', elem) || false;\n\n    if (!subTaskRef) {\n      return false;\n    }\n\n    const buildDesc = () => {\n      let desc = false;\n      try {\n        const taskDesc = $('.title', elem).textContent.trim();\n        const cardRef = $('.card-view-header a.ref').textContent.trim();\n        desc = `Subtask ${taskId}: ${taskDesc} (on task ${cardRef})`;\n      } catch (e) {}\n      return desc;\n    };\n\n    const taskId = subTaskRef.textContent.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'kantree',\n      buttonType: 'minimal',\n      description: buildDesc,\n      projectName: getProjTitle\n    });\n\n    link.classList.add('kt-checklist-item-toggl-btn');\n\n    if (!taskId) {\n      // run toggl after sub-task creation.\n      setTimeout(function () {\n        subTaskRef.parentNode.prepend(link);\n      }, 2000);\n    } else {\n      subTaskRef.parentNode.prepend(link);\n    }\n  },\n  '.card-view-children .children .card-tile, #card-modal-host, .card-modal'\n);\n\nfunction getProjTitle () {\n  const $selector = $('.board-nav-title .title') || $('.project-panel-title');\n  return $selector\n    ? $selector.textContent.trim()\n    : '';\n}\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '#tutorial-content [data-reactid=\"6\"]:not(.toggl)',\n  {},\n  function (elem) {\n    // remove child nodes. Keep only textContent\n    function cloneText (node) {\n      let i;\n      let n;\n      const textNode = node.cloneNode(true);\n      for (i = 0, n = textNode.children.length; i < n; i += 1) {\n        textNode.removeChild(textNode.children[i]);\n      }\n      return textNode;\n    }\n\n    const topic = cloneText(elem).textContent.trim();\n    const project = elem\n      .querySelector('[role=\"navigation\"] span:first-child a')\n      .textContent.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'khanacademy',\n      buttonType: 'minimal',\n      description: topic,\n      projectName: project\n    });\n\n    elem.style.position = 'relative';\n    elem.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '#treeitem_panel .details.page:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = $('#treeitem_panel_name').textContent;\n\n    const projectFunc = function () {\n      const text = $('#treeitem_panel_parent').textContent.split('>');\n      return text[text.length - 1].trim();\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'liquidplanner',\n      description: description,\n      projectName: projectFunc\n    });\n\n    elem.insertBefore(link, elem.firstChild);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\nconst button = (link, elem) => {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'togglWrapper';\n  wrapper.style.textAlign = 'center';\n  wrapper.style.borderBottom = '1px solid rgba(125,125,125,0.3)';\n  wrapper.style.marginBottom = '1em';\n  wrapper.appendChild(link);\n\n  elem.insertBefore(wrapper, elem.firstChild);\n};\n\n// ticket\nconst descriptionSelector = () => {\n  try {\n    const ticketCode = document.querySelector('.CodeLabel').textContent.trim();\n    const ticketSubject = document.querySelector('.ConversationHeaderSubject').textContent.trim();\n    return '[' + ticketCode + '] ' + ticketSubject;\n  } catch (e) {\n    return '';\n  }\n};\n\ntogglbutton.render(\n  '.ConversationDetailsView:not(.toggl)', { observe: true }, (elem) => {\n    const link = togglbutton.createTimerLink({\n      className: 'liveagent',\n      description: descriptionSelector\n    });\n\n    button(link, elem);\n  }\n);\n\n// knowledgebase article dialog\nconst knowledgeBaseName = () => {\n  try {\n    return document.querySelector('.ArticleContentView .DialogTitle').textContent.trim();\n  } catch (e) {\n    return '';\n  }\n};\ntogglbutton.render('.ArticleDetails:not(.toggl)', { observe: true }, (articleDetails) => {\n  const link = togglbutton.createTimerLink({\n    className: 'liveagent',\n    description: knowledgeBaseName\n  });\n\n  button(link, articleDetails);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// On premise installation\ntogglbutton.render('.requestEditbrsty:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const description = $('#requestSubject_ID', elem).textContent;\n  const project = 'Tickets to be Allocated';\n  const ticketId = $('#requestId', elem).textContent;\n  const togglCell = document.createElement('td');\n\n  const link = togglbutton.createTimerLink({\n    className: 'manageengine',\n    description: ticketId + ' : ' + description,\n    projectName: project\n  });\n\n  togglCell.appendChild(link);\n\n  $('td#startListMenuItems > table > tbody > tr').appendChild(togglCell);\n});\n\n// Cloud version\ntogglbutton.render(\n  '#WorkOrderDetailsTable_CT:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = $('#details-middle-container h1', elem).textContent;\n    const projectElem = $('#projectholder p') || {};\n    const project = projectElem.textContent;\n    const ticketId = $('#reqid', elem).textContent;\n    const togglCell = document.createElement('li');\n\n    const link = togglbutton.createTimerLink({\n      className: 'manageengine',\n      description: ticketId + ': ' + description,\n      projectName: project\n    });\n\n    togglCell.appendChild(link);\n\n    $('#details-middle-container ul.reply-actions').appendChild(togglCell);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.page-content .widget-toolbox .pull-left:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = document.querySelector('td.bug-summary').textContent;\n    const project = document.querySelector('td.bug-project').textContent;\n\n    const link = togglbutton.createTimerLink({\n      className: 'mantishub',\n      description: description,\n      projectName: project\n    });\n\n    elem.appendChild(link);\n  }\n);\n\n// Classic UI\ntogglbutton.render(\n  '#view-issue-details:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = $('td.bug-summary', elem).textContent;\n    const project = $('td.bug-project', elem).textContent;\n\n    const link = togglbutton.createTimerLink({\n      className: 'mantishub',\n      description: description,\n      projectName: project\n    });\n\n    $('.form-title', elem).appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n/** MeisterTask 1.0 **/\n\ntogglbutton.render('.js-box-wrapper:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const togglButtonElement = $('.js-task-header>div>row>cell:nth-child(5)', elem);\n  const description = $('.js-box-wrapper .container-name .js-task-name>div', elem)\n    .textContent;\n  const project = $('.js-project-name').textContent;\n\n  const tagFunc = function () {\n    let index;\n    const tags = [];\n    const tagList = $('.js-box-wrapper .ui-tag', elem);\n\n    if (!tagList) {\n      return [];\n    }\n\n    const tagItems = tagList.children;\n\n    for (index in tagItems) {\n      if (tagItems.hasOwnProperty(index)) {\n        tags.push(tagItems[index].textContent);\n      }\n    }\n    return tags;\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'meistertask',\n    description: description,\n    projectName: project,\n    tags: tagFunc,\n    buttonType: 'minimal'\n  });\n\n  togglButtonElement.parentNode.insertBefore(link, togglButtonElement);\n});\n\n/** MeisterTask 2.0 **/\n\nconst getDataContainer = function () {\n  return document.querySelector('#mt-toggl-data');\n};\n\nconst getApplicationData = function ($dataElement) {\n  const dataAttr = $dataElement.getAttribute('data-toggl-json');\n  const data = JSON.parse(dataAttr);\n  return data;\n};\n\nconst createTogglButton = function ({ taskName, projectName, tagNames }) {\n  return togglbutton.createTimerLink({\n    className: 'meistertask',\n    buttonType: 'minimal',\n    description: taskName || '',\n    projectName: projectName || '',\n    tags: tagNames || []\n  });\n};\n\nconst emptyElement = function ($btnContainer) {\n  while ($btnContainer.hasChildNodes()) {\n    $btnContainer.removeChild($btnContainer.lastChild);\n  }\n};\n\ntogglbutton.render('#mt-toggl-task-button:not(.toggl)', { observe: true }, function ($btnContainer) {\n  const $dataElement = getDataContainer();\n  const data = getApplicationData($dataElement);\n  const $btn = createTogglButton(data);\n  emptyElement($btnContainer);\n  $btnContainer.appendChild($btn);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.taskCard:not(.toggl)', { observe: true }, function (elem) {\n  const description = $('.title', elem).textContent;\n\n  function getProject () {\n    const plannerTaskboardName = $('.planTaskboardPage .primaryTextSection h1');\n    const planName = $('.planName', elem);\n\n    if (plannerTaskboardName) {\n      return plannerTaskboardName.textContent;\n    }\n    if (planName) {\n      return planName.textContent;\n    }\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'microsoftplanner',\n    description: description,\n    projectName: getProject,\n    buttonType: 'minimal'\n  });\n  $('.leftSection', elem).appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.taskItem-body:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const container = createTag('a', 'taskItem-toggl');\n  const titleElem = $('.taskItem-title', elem);\n  const projectTitleElem = $('.listTitle');\n  const activeList = $('.listItem-container.active');\n  const activeListTitle = $('.listItem-title', activeList);\n\n  const projectTitle = projectTitleElem\n    ? projectTitleElem.textContent\n    : activeListTitle\n      ? activeListTitle.textContent\n      : '';\n\n  const link = togglbutton.createTimerLink({\n    className: 'microsoft-todo',\n    buttonType: 'minimal',\n    description: titleElem.textContent,\n    projectName: projectTitle\n  });\n\n  container.appendChild(link);\n  elem.insertBefore(container, elem.lastElementChild);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.task-header .meta:not(.toggl)', {}, function (elem) {\n  const description = $('.title h1', elem).textContent.trim();\n  let project = $('[data-contexttype=\"deal\"]', elem);\n\n  project = project ? project.textContent.trim() : '';\n\n  const link = togglbutton.createTimerLink({\n    className: 'agenocrm',\n    description: description,\n    projectName: project\n  });\n\n  elem.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#submenu:not(.toggl)', { observe: true }, function () {\n  const titleElem = $('#mailing-name');\n  const li = document.createElement('li');\n  const description = titleElem.value;\n\n  const link = togglbutton.createTimerLink({\n    className: 'newsletter2go',\n    description: description\n  });\n\n  li.className = 'sm submenu center';\n  li.appendChild(link);\n  $('#submenu').appendChild(li);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Notion\n * @urlAlias notion.so\n * @urlRegex *://*.notion.so/*\n */\n'use strict';\n\nfunction createWrapper (link) {\n  const wrapper = document.createElement('div');\n  wrapper.classList.add('toggl-button-notion-wrapper');\n  wrapper.appendChild(link);\n\n  return wrapper;\n}\n\n// Selectors here are madness, it works for as of Dec 4th 2019\n// Button renders in popup/dialog view\ntogglbutton.render(\n  '.notion-peek-renderer:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    function getDescription () {\n      const descriptionElem = elem.querySelector('.notion-scroller .notion-selectable div[contenteditable=\"true\"]');\n      return descriptionElem ? descriptionElem.textContent.trim() : '';\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'notion',\n      description: getDescription\n    });\n\n    const wrapper = createWrapper(link);\n\n    const root = elem.querySelector('.notion-topbar-share-menu');\n    if (root) {\n      root.parentElement.prepend(wrapper);\n    } else {\n      elem.querySelector('div:nth-child(2) > div:nth-child(1) > div:nth-child(1) > div:nth-child(3)').prepend(wrapper)\n    }\n  }\n);\n\ntogglbutton.render(\n  '.notion-topbar-action-buttons:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    if (!elem) return;\n\n    elem.style.position = 'relative';\n\n    function getDescription () {\n      const controls = document.querySelector('.notion-page-controls');\n      const topBar = document.querySelector('.notion-topbar');\n      let title = '';\n\n      if (controls) {\n        if (controls.nextElementSibling) {\n          title = controls.nextElementSibling;\n        } else {\n          const parent = controls.parentElement;\n\n          if (!parent) return '';\n\n          title = parent ? parent.nextElementSibling : '';\n        }\n      } else if (topBar) {\n        const breadcrumbs = topBar.querySelector('div > .notranslate')\n        if (breadcrumbs) {\n          title = breadcrumbs.childNodes[breadcrumbs.childNodes.length - 1].querySelector('.notranslate:last-child')\n        }\n      }\n\n      return title ? title.textContent.trim() : '';\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'notion',\n      description: getDescription\n    });\n\n    const wrapper = createWrapper(link);\n\n    elem.prepend(wrapper);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n/**\n * Nozbe detail view\n */\ntogglbutton.render(\n  '.details__attributes-right:not(.toggl)',\n  { observe: true },\n  function renderNozbeDetailView (elem) {\n    const description = document.querySelector('.details .details__title-name').innerText.trim();\n    const project = document.querySelector('.details .details__attribute-name').innerText.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'nozbe',\n      description: description,\n      projectName: project\n    });\n\n    const div = document.createElement('div');\n    div.classList.add('details__attribute', 'togglContainer');\n    div.appendChild(link);\n    elem.appendChild(div);\n  }\n);\n\n/**\n * Nozbe task list\n */\ntogglbutton.render(\n  '.item.task:not(.toggl)',\n  { observe: true },\n  function renderNozbeList (elem) {\n    const description = elem.querySelector('.task__name').innerText.trim();\n    const projectName = elem.querySelector('.task__project-name').innerText.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'nozbe-list',\n      buttonType: 'minimal',\n      description,\n      projectName\n    });\n\n    const container = elem.querySelector('.task__icons-right');\n    const starIcon = container.querySelector('.task__star');\n    container.insertBefore(link, starIcon);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.o_control_panel .breadcrumb:not(.toggl)',\n  { observe: true },\n\n  $container => {\n    const descriptionSelector = () => {\n      const $description = $('.breadcrumb-item.active', $container);\n      return $description.textContent.trim();\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'odoo',\n      description: descriptionSelector\n    });\n\n    $container.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="/* For main task (not a subtask) */\ntogglbutton.render(\n  '.commonInfoTaskDescription:not(.toggl)',\n  { observe: true },\n  function () {\n    'use strict';\n    let description = $('#essenceTitle');\n    description = description ? description.textContent.trim() : null;\n\n    let project = $('.task-desc-block .value a');\n    project = project ? project.textContent.trim() : null;\n\n    const link = togglbutton.createTimerLink({\n      className: 'onlyoffice',\n      description: description,\n      projectName: project,\n      buttonType: 'minimal'\n    });\n    $('.project-title').appendChild(link);\n  }\n);\n\n/* For subtasks */\ntogglbutton.render(\n  '.subtasks .subtask:not(.toggl):not(.closed)',\n  { observe: true },\n  function (elem) {\n    'use strict';\n    let description = $('.taskName span', elem);\n    description = description ? description.textContent.trim() : null;\n\n    let project = $('.task-desc-block .value a');\n    project = project ? project.textContent.trim() : null;\n\n    const link = togglbutton.createTimerLink({\n      className: 'onlyoffice',\n      description: description,\n      projectName: project,\n      buttonType: 'minimal'\n    });\n    elem.insertBefore(link, $('.check', elem));\n    const button = $('.toggl-button.onlyoffice', elem);\n    if (button && button.style) {\n      button.style.float = 'left';\n    }\n  }\n);\n\n/* For main project screen */\ntogglbutton.render(\n  '.taskList .task:not(.toggl):not(.closed)',\n  { observe: true },\n  function (elem) {\n    'use strict';\n    let description = $('.taskName a', elem);\n    description = description ? description.textContent.trim() : null;\n\n    let project = $('#essenceTitle');\n    project = project ? project.textContent.trim() : null;\n\n    const link = togglbutton.createTimerLink({\n      className: 'onlyoffice',\n      description: description,\n      projectName: project,\n      buttonType: 'minimal'\n    });\n    elem.insertBefore(link, $('.check', elem));\n    const button = $('.toggl-button.onlyoffice', elem);\n    if (button && button.style) {\n      button.style.float = 'left';\n    }\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.document-name-container:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = $('.navbar-document-version', elem).textContent;\n    const project = $('.navbar-document-name', elem).textContent;\n\n    const link = togglbutton.createTimerLink({\n      className: 'onshape',\n      description: description,\n      projectName: project,\n      buttonType: 'minimal'\n    });\n\n    $('.navbar-document-and-workspace-names').appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Work packages details view\ntogglbutton.render(\n  '.work-packages--show-view:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const workPackageId = $('.work-packages--info-row > span:first-of-type').textContent.trim();\n    const container = $('.toolbar-items', elem);\n    const description = '[OP' + workPackageId + '] ' + $('.subject').textContent.trim();\n    const projectName = $('#projects-menu').title.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'openproject',\n      description: description,\n      projectName: projectName\n    });\n\n    container.prepend(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Tickets\ntogglbutton.render(\n  '#ticket_tabs_container #ticket_thread:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const titleElem = $('.flush-left a');\n    const projectElem = $('.tixTitle');\n    const ticketNameText = titleElem.textContent.trim();\n    const projectNameText = projectElem.textContent.trim();\n\n    const description = ticketNameText + ' [' + projectNameText + ']';\n    const link = togglbutton.createTimerLink({\n      className: 'osTicket',\n      description: description,\n      projectName: projectNameText\n    });\n\n    $('.flush-left h2').append(link);\n  }\n);\n\n// Tasks\ntogglbutton.render(\n  '#task_thread_container #task_thread_content:not(.toggl)',\n  {\n    observe: true\n  },\n  function (elem) {\n    const titleElem = $('.flush-left a');\n    const projectElem = $('.tixTitle');\n    const ticketNameText = titleElem.textContent.trim();\n    const projectNameText = projectElem.textContent.trim();\n\n    const description = ticketNameText + ' [' + projectNameText + ']';\n    const link = togglbutton.createTimerLink({\n      className: 'osTicket',\n      description: description,\n      projectName: projectNameText\n    });\n\n    $('.flush-left h2').append(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default='/**\n * @name Outlook\n * @urlAlias outlook.office.com\n * @urlRegex *://outlook.office.com/*\n */\n \n"use strict";\n\n// Inbox emails\ntogglbutton.render(\n  \'[aria-label="Message actions"]:not(.toggl)\',\n  { observe: true },\n  (elem) => {\n    const link = togglbutton.createTimerLink({\n      className: "outlook",\n      description: () => document.querySelector(\'div[role="heading"]\').textContent\n    });\n\n    elem.childNodes[0].appendChild(link);\n  }\n);\n\n// Composing emails\ntogglbutton.render(\n  \'[aria-label="Command toolbar"] .ms-CommandBar-primaryCommand:not(.toggl)\',\n  { observe: true },\n  (elem) => {\n    const isComposingEmail = elem.querySelector(\'button[name="Send"]\');\n\n    if (isComposingEmail) {\n      const subject = () =>\n        document.querySelector(\'[aria-label="Add a subject"]\').value;\n\n      const link = togglbutton.createTimerLink({\n        className: "outlook",\n        description: subject,\n      });\n\n      elem.appendChild(link);\n    }\n  }\n);\n'},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.pd-incident-actions:not(.toggl)',\n  { observe: true },\n  function () {\n    const projectElem = $('.pd-service-name__name a');\n\n    const description = document.title.replace(\n      /\\[#(\\d*)\\]([\\w\\W]*) - PagerDuty/g,\n      'Pagerduty $1:$2'\n    );\n\n    const link = togglbutton.createTimerLink({\n      className: 'pagerduty',\n      description: description,\n      projectName: projectElem && projectElem.textContent\n    });\n\n    $('.pd-incident-actions').appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Workboard view\ntogglbutton.render(\n  '#phabricator-standard-page-body .phui-workpanel-view .phui-oi:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = $('.phui-oi-name', elem).textContent.trim();\n    const projectName = $(\n      '.phui-crumb-view[href^=\"/project/profile\"]:not(.phabricator-last-crumb), .phui-header-view > a'\n    ).textContent.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'phabricator',\n      buttonType: 'minimal',\n      description: description,\n      projectName: projectName\n    });\n\n    $('.phui-oi-name', elem).appendChild(link);\n  }\n);\n\n// Task detail view\ntogglbutton.render(\n  '#phabricator-standard-page-body:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const wrap = document.createElement('li', 'phabricator-action-view');\n    const container = $('.phabricator-action-list-view', elem);\n    const desc = elem.querySelector(\n      '.phui-two-column-header .phui-header-view .phui-header-header'\n    );\n    let number = $('.phabricator-last-crumb .phui-crumb-name') || '';\n    let projectName = $('.phabricator-handle-tag-list-item > a');\n\n    if (number) {\n      number = number.textContent.trim() + ' ';\n    }\n\n    projectName = projectName ? projectName.textContent.trim() : '';\n\n    const link = togglbutton.createTimerLink({\n      className: 'phabricator',\n      description: number + desc.textContent,\n      projectName: projectName\n    });\n\n    wrap.appendChild(link);\n    container.prepend(wrap);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('form.story:not(.toggl)', { observe: true }, function (elem) {\n  const titleElem = $('textarea', elem);\n  const id = $('.id.text_value', elem);\n  const container = $('.edit aside', elem);\n  const projectName = $('title').textContent;\n\n  if (titleElem === null || container === null) {\n    return;\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'pivotal',\n    description: id.value + ' ' + titleElem.value,\n    projectName: projectName && projectName.split(' -').shift()\n  });\n\n  container.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global createTag */\n\ntogglbutton.render(\n  '.plackerModal:not(.toggl)',\n  { observe: true },\n  (elem) => {\n    const interval = setInterval(function () {\n      const actionButton = $('.dialogCardHeaderOverviewComponent__bottomRight');\n\n      if (!actionButton) {\n        return;\n      }\n\n      clearInterval(interval);\n\n      const getProject = () => {\n        const project = $('.breadcrumbComponent .breadcrumbComponent__item:first-child .breadcrumbComponent__itemLink', elem);\n        return project ? project.textContent.trim() : '';\n      };\n\n      const getDescription = () => {\n        const description = $('.dialogCardHeaderOverviewComponent__titleInput', elem);\n        return description ? description.textContent.trim() : '';\n      };\n\n      const container = createTag('div', 'button-link placker-tb-wrapper');\n      const link = togglbutton.createTimerLink({\n        className: 'placker',\n        description: getDescription,\n        projectName: getProject,\n        container: '.plackerModal'\n      });\n\n      // Pass through click on placker button to the timer link\n      container.addEventListener('click', (e) => {\n        e.preventDefault();\n        link.click();\n      });\n\n      container.appendChild(link);\n      actionButton.prepend(container);\n    }, 100);\n  },\n  '.plackerModal'\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  'div.importances:not(.toggl)',\n  { observe: true },\n  function () {\n    const description = $('#story_name p').textContent;\n    const projectName = $('.project .name').textContent;\n    const div = document.createElement('div');\n    const importanceDiv = $('div.importances');\n    const collectorDiv = importanceDiv.parentNode;\n\n    div.className = 'fl';\n\n    const link = togglbutton.createTimerLink({\n      className: 'planbox',\n      description: description,\n      projectName: projectName\n    });\n\n    div.appendChild(link);\n    collectorDiv.insertBefore(div, importanceDiv.nextSibling);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.item-topbar:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const delay = 1000; // 1 second\n  setTimeout(function () {\n    const description = $('.item-title', elem);\n    const container = $('.breadcrumb', elem);\n\n    if (description === null || container === null) {\n      return;\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'podio',\n      description: description.textContent.trim()\n    });\n\n    const wrapper = createTag('div', 'item-via');\n    wrapper.appendChild(link);\n    container.parentNode.insertBefore(wrapper, container.nextSibling);\n  }, delay);\n});\n\ntogglbutton.render('.task-detail:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const description = $('.task-link', elem.parentNode);\n  const container = $('.edit-task-reference-wrapper', elem);\n\n  if (description === null || container === null) {\n    return;\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'podio',\n    description: description.textContent.trim()\n  });\n\n  const wrapper = createTag('div', 'task-via');\n  wrapper.appendChild(link);\n  container.parentNode.insertBefore(wrapper, container.nextSibling);\n});\n\ntogglbutton.render('.task-header:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const container = $('.action-bar ul', elem);\n  const description = $('.header-title', elem);\n  if (description === null || container === null) {\n    return;\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'podio',\n    description: description.textContent.trim()\n  });\n\n  const wrapper = createTag('li', 'float-left');\n  wrapper.appendChild(link);\n  container.appendChild(wrapper);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.PageListItem:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const description = $('.label_title', elem).textContent;\n\n  const link = togglbutton.createTimerLink({\n    className: 'processwire',\n    description: description,\n    buttonType: 'minimal'\n  });\n\n  elem.appendChild(link);\n});\n\ntogglbutton.render(\n  '.ProcessPageEdit h1:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = elem.textContent;\n\n    const link = togglbutton.createTimerLink({\n      className: 'processwire',\n      description: description,\n      buttonType: 'minimal'\n    });\n\n    elem.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="/* global $, togglbutton */\n'use strict';\n\n// Issue details view\ntogglbutton.render(\n  '[data-toggl-issue] [data-toggl-sidebar]:not(.toggl)',\n  { observe: true },\n  elem => {\n    const getAlias = function () {\n      const aliasSelector = $('[data-toggl-issue] [data-toggl-alias]');\n      if (!aliasSelector) return 'No Alias';\n      return aliasSelector.getAttribute('data-toggl-alias');\n    };\n\n    const getTitle = function () {\n      const titleSelector = $('[data-toggl-issue] [data-toggl-title]');\n      if (!titleSelector) return 'No Title';\n      return titleSelector.getAttribute('data-toggl-title') || 'No Title';\n    };\n\n    const getDescription = function () {\n      return getAlias() + ' - ' + getTitle();\n    };\n\n    const getProjectName = function () {\n      const projectSelector = $('[data-toggl-issue] [data-toggl-project]');\n      if (!projectSelector) return null;\n      return projectSelector.getAttribute('data-toggl-project');\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'produck',\n      description: getDescription,\n      projectName: getProjectName\n    });\n    const li = document.createElement('li');\n    li.classList.add('toggl-item');\n    li.appendChild(link);\n    elem.prepend(li);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '#conversationHeader:not(.toggl)',\n  { observe: true },\n  function () {\n    const spans = document\n      .getElementsByTagName('h1')[0]\n      .getElementsByTagName('span');\n    const project = $('li.active');\n    const container = $('#conversationHeader h1');\n    const len = spans.length;\n    let description;\n\n    if (len > 1) {\n      description = $('h1 span:nth-child(2)');\n    } else {\n      description = $('h1 span');\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'protonmail',\n      description: description.textContent,\n      projectName: project.textContent.trim()\n    });\n\n    container.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '#viewTask-infoSummary:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const projectNr = elem.querySelector('dd').textContent;\n    const project = $('#viewTask-projectName', elem).textContent;\n    const title = $('h2', elem).textContent;\n    const description = projectNr + ' - ' + project + ' : ' + title;\n\n    const link = togglbutton.createTimerLink({\n      className: 'proworkflow',\n      description: description,\n      projectName: projectNr + ' - ' + project\n    });\n\n    elem.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.chr-PeriscopeContainer',\n  { observe: true },\n  function (elem) {\n    const descriptionElem = $(\n      '.chr-QuickDetailAttributeEditorWrapper--name .smb-TextInput-renderedText',\n      elem\n    );\n    const titleElem = $('.chr-QuickDetailFormattedId', elem);\n    const projectElem = $('.chr-EditorsWorkItemEditor-linkSpan', elem);\n    const existingContainer = $('.togglContainer');\n\n    // if page is not refreshed by F5/CTRL + F5 we need to remove existing timer container.\n    if (existingContainer) {\n      existingContainer.remove();\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'rallydev',\n      description: descriptionElem ? descriptionElem.textContent : '',\n      projectName: projectElem ? projectElem.textContent : ''\n    });\n\n    const div = document.createElement('div');\n    div.classList.add('timer__container', 'togglContainer');\n    div.appendChild(link);\n    titleElem.appendChild(div);\n  },\n  '.chr-QuickDetailGridView, .chr-QuickDetailAttributeEditorWrapper--name .smb-TextInput, .smb-TextInput-renderedText, .chr-EditorsWorkItemEditor-linkSpan'\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Right side panel\ntogglbutton.render(\n  '.js-right-pane .tb-element-big:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const container = $('.tb-element-title', elem);\n    const projectElem = $('.tb-element-subtitle a', elem);\n    const titleElem = $('.js-element-title-inner a', container);\n\n    const link = togglbutton.createTimerLink({\n      className: 'redbooth',\n      description: titleElem.textContent,\n      projectName: projectElem && projectElem.textContent\n    });\n\n    container.appendChild(link);\n  }\n);\n\n// Modal window\ntogglbutton.render(\n  '.js-modal-dialog-content:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const container = $('.tb-element-title', elem);\n    const projectElem = $('.tb-element-subtitle a', elem);\n    const titleElem = $('.js-element-title-inner a', container);\n\n    const link = togglbutton.createTimerLink({\n      className: 'redbooth',\n      description: titleElem.textContent,\n      projectName: projectElem && projectElem.textContent\n    });\n\n    container.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  'body.controller-issues.action-show #content h2:not(.toggl)',\n  {},\n  function (elem) {\n    const numElem = $('#content h2');\n    const titleElem = $('.subject h3') || '';\n    const projectElem = $('h1');\n    let description;\n\n    if ($('.toggl-button')) {\n      return;\n    }\n\n    if (titleElem) {\n      description = titleElem.textContent;\n    }\n\n    if (numElem !== null) {\n      if (description) {\n        description = ' ' + description;\n      }\n      description = numElem.textContent + description;\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'redmine',\n      description: description,\n      projectName: projectElem && projectElem.textContent\n    });\n\n    $('#content h2').appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  \"div[role='listbox'] [role='option']:not(.toggl)\",\n  { observe: true },\n  function (elem) {\n    // Get task's description.\n    const getDescription = function () {\n      return elem\n        .querySelector(\n          \"div[role='listbox'] [role='option'] span[style*='user-select: text']\"\n        )\n        .textContent.trim();\n    };\n\n    // Get project name if in project task view\n    const getProject = function () {\n      const p = $('.b-Mj.b-wd .b-f-n');\n      if (!p) {\n        return;\n      }\n      return p.textContent;\n    };\n\n    const task = elem\n      .querySelector(\n        \"div[role='listbox'] [role='option'] span[style*='user-select: text']\"\n      );\n\n    if (task) {\n      const link = togglbutton.createTimerLink({\n        className: 'rememberthemilk',\n        description: getDescription,\n        projectName: getProject,\n        buttonType: 'minimal'\n      });\n\n      task.parentElement.appendChild(link);\n    }\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="/* jslint indent: 2 */\n/* global $: false, document: false, togglbutton: false */\n'use strict';\n\ntogglbutton.render('.review-request:not(.toggl)', { observe: true }, function () {\n  const description = $('#field_summary').textContent;\n  const projectName = $('#field_repository').textContent;\n  const li = document.createElement('li');\n\n  const link = togglbutton.createTimerLink({\n    className: 'reviewboard',\n    description: description,\n    projectName: projectName\n  });\n\n  li.appendChild(link);\n\n  $('.review-request-actions-left').appendChild(li);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.time__tracker .toggl__container:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const projectName = $('.navbar-default .dropdown .navbar-brand .ng-scope')\n      .textContent;\n\n    const descFunc = function () {\n      const card = $('.toggl__card-title', elem);\n      if (card) {\n        return card.textContent;\n      }\n      return null;\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'rindle',\n      description: descFunc,\n      projectName: projectName\n    });\n\n    elem.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '#item-title-control:not(.toggl)',\n  { observe: true },\n  function () {\n    const descriptionEl = $('.item-detail-page-header__item-title');\n    const projectEl = $('#navbar-content > ul > li > a');\n    const description = ((descriptionEl && descriptionEl.textContent) || '').trim();\n    const projectName = ((projectEl && projectEl.textContent) || '').trim();\n    const link = togglbutton.createTimerLink({\n      className: 'rollbar',\n      description,\n      projectName\n    });\n\n    $('.item-status-level-area').appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Salesforce\n * @urlAlias salesforce.com\n * @urlRegex *://*.salesforce.com/*,*://*.my.salesforce.com/*\n */\n'use strict';\n\n// Salesforce legacy view\n\n// Updated Listing view\ntogglbutton.render(\n  '.bMyTask .list tr.dataRow:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const container = elem.querySelectorAll(\n      '.bMyTask .list tr.dataRow .dataCell a'\n    )[0];\n    if (container === null) {\n      return;\n    }\n\n    const descFunc = () => {\n      return container.textContent;\n    };\n\n    const projectFunc = () => {\n      return (\n        ($('.accountBlock .mruText') &&\n          $('.accountBlock .mruText').textContent) ||\n        ''\n      );\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'salesforce-legacy',\n      buttonType: 'minimal',\n      description: descFunc,\n      projectName: projectFunc\n    });\n\n    container.insertBefore(link, container.firstChild);\n  }\n);\n\n// Detail view\ntogglbutton.render('#bodyCell:not(.toggl)', { observe: true }, function (elem) {\n  const container = $('.content', elem);\n\n  if (container === null) {\n    return;\n  }\n\n  const parent = $('.pageType', container);\n\n  if (!parent) {\n    return;\n  }\n\n  const descFunc = () => {\n    const desc = $('.pageDescription', container);\n    return desc ? desc.textContent.trim() : '';\n  };\n\n  const projectFunc = () => {\n    return (\n      ($('.accountBlock .mruText') &&\n        $('.accountBlock .mruText').textContent) ||\n      ''\n    );\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'salesforce-legacy',\n    description: descFunc,\n    projectName: projectFunc\n  });\n\n  parent.appendChild(link);\n});\n\n// Lightning Task List view/sidebar\ntogglbutton.render(\n  '.slds-split-view__list-item:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const getDescription = () => {\n      return $('.uiOutputText', elem).textContent.trim();\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'salesforce-list',\n      description: getDescription,\n      buttonType: 'minimal'\n    });\n\n    $('.uiOutputText', elem).parentElement.parentElement.appendChild(link);\n  }\n);\n\nconst lightningSelector = (selector) => {\n  // Navigate around many views being present in the DOM, hidden/revealed at various times\n  return $(`.slds-template__container > .lafSinglePaneWindowManager >.windowViewMode-normal ${selector}`);\n};\n\ntogglbutton.render(\n  '.utilitybar.slds-utility-bar:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const getDescription = () => {\n      let description = lightningSelector('.slds-page-header__title .uiOutputText:not(.selectedListView)');\n      const descriptionFromTitle = document.querySelector('title').textContent.split('| Salesforce').shift().trim()\n\n      if (!description) description = lightningSelector('.slds-page-header__title lightning-formatted-name');\n      if (!description) description = lightningSelector('.slds-page-header__title lightning-formatted-text');\n\n      return description ? description.textContent.trim() : descriptionFromTitle;\n    };\n\n    const getProject = () => {\n      // If there's localization these will fail, but we're mostly out of options.\n      let project = lightningSelector('[title=\"Account Name\"]');\n      if (!project) project = lightningSelector('[title=\"Related To\"]');\n      if (!project) project = lightningSelector('[title=\"Company\"]');\n\n      if (project) {\n        // We must try to go deep, since .textContent doesn't work at all on some components.\n        let innerEl = project.nextSibling.querySelector('a');\n        if (!innerEl) innerEl = project.nextSibling.querySelector('lightning-formatted-text');\n        return innerEl ? innerEl.textContent.trim() : '';\n      }\n      return getDescription();\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'salesforce',\n      description: getDescription,\n      projectName: getProject\n    });\n\n    const wrapper = document.createElement('li');\n    wrapper.classList.add('slds-utility-bar__item', 'slds-utility-bar__action', 'toggl-button-salesforce-wrapper');\n    wrapper.appendChild(link);\n    elem.appendChild(wrapper);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global togglbutton, $ */\n\ntogglbutton.render(\n  '.telomere-border .description:not(.toggl)',\n  { observe: true },\n  $container => {\n    const descriptionSelector = () => {\n      const $description = $container.closest('.line').querySelector('.text');\n      return $description.textContent.trim();\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'scrapbox',\n      description: descriptionSelector\n    });\n\n    $container.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.group-detail:not(.toggl)', { observe: true }, function () {\n  const errType = $('h3 > span > span').textContent.trim();\n  const detail = $('.message').textContent.trim();\n  const project = $('.project-select').textContent.trim();\n  const description = errType + ': ' + detail;\n\n  const link = togglbutton.createTimerLink({\n    className: 'sentry',\n    description: description,\n    projectName: project\n  });\n\n  $('.group-detail .nav-tabs').appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#ctl00_ctl00_PageBody_tktHeader', {}, function () {\n  const object = $('#ctl00_ctl00_PageBody_lbSubject');\n  let description = object.textContent;\n  const returnPos = description.indexOf('\\n');\n  if (returnPos > 0) {\n    description = description.substr(0, description.indexOf('\\n'));\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'sherpadesk',\n    description: description\n  });\n\n  object.parentElement.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.story-state:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const wrap = createTag('div');\n  const element = elem;\n  elem = elem.parentNode.parentNode.parentNode;\n\n  const getDescription = function () {\n    const storyId = $('.story-id input', elem).value;\n    const title = $('h2.story-name', elem).textContent;\n\n    return `#${storyId} - ${title}`;\n  };\n\n  const getProject = function () {\n    return $('.story-project .value', elem).textContent;\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'toggl-shortcut',\n    description: getDescription,\n    projectName: getProject\n  });\n\n  wrap.className = 'attribute editable-attribute toggl-button-shortcut-wrapper';\n  wrap.appendChild(link);\n  element.parentNode.insertBefore(wrap, element.nextSibling);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Listing view\ntogglbutton.render('.issues .issue:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const description = $('.subject span.issue-status', elem).textContent.trim();\n  const project = $('.switcher-project-name').textContent.trim();\n\n  const link = togglbutton.createTimerLink({\n    className: 'sifterapp',\n    description: description,\n    projectName: project\n  });\n\n  $('.subject a.issue-status', elem).appendChild(link);\n});\n\n// Detail view\ntogglbutton.render(\n  '.issue-detail-subject:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = $('h1', elem).childNodes[0].textContent.trim();\n    const project = $('.switcher-project-name').textContent.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'sifterapp',\n      description: description,\n      projectName: project\n    });\n\n    elem.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global togglbutton, $ */\n\nconst getTextContent = (element) => element ? element.textContent.trim() : '';\n\nconst getWorkspaceName = () => getTextContent($('.p-ia__sidebar_header__team_name_text'));\n\ntogglbutton.render('.p-ia__view_header:not(.toggl)', { observe: true }, (elem) => {\n  const description = $('[data-qa=\"channel_name\"]');\n  const isRendered = $('.toggl-button', elem) != null;\n\n  if (isRendered) {\n    // Do not duplicate the button.\n    return;\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'slack',\n    description: getTextContent(description),\n    projectName: getWorkspaceName,\n    buttonType: 'minimal'\n  });\n\n  elem.insertBefore(link, elem.lastChild);\n});\n\ntogglbutton.render('.c-message_kit__hover:not(.toggl)', { observe: true }, elem => {\n  const placeholder = $('.c-message_actions__button:last-child');\n  const description = elem.closest('.c-message_kit__message').querySelector('.c-message_kit__blocks--rich_text');\n  const isRendered = $('.toggl-button', placeholder.parentNode) != null;\n\n  if (isRendered) {\n    return;\n  }\n\n  const getDescription = () => getTextContent(description);\n\n  const link = togglbutton.createTimerLink({\n    className: 'slack-message',\n    projectName: getWorkspaceName,\n    description: getDescription,\n    buttonType: 'minimal'\n  });\n\n  const button = document.createElement('button');\n  const buttonContainer = document.createElement('span');\n  buttonContainer.className = 'slack-message-container';\n\n  button.className = 'c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_small c-message_actions__button';\n  button.setAttribute('type', 'button');\n  button.appendChild(link);\n\n  placeholder.parentNode.insertBefore(button, placeholder);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#ide:not(.toggl)', { observe: true }, function () {\n  const projectFunc = function () {\n    return $('.project-label .project-name').getAttribute('title');\n  };\n\n  const descFunc = function () {\n    return $('.project-label .after.actionable').textContent;\n  };\n\n  const inlineCss = 'position: fixed; bottom: 1rem; right: 1rem; z-index: 9999;';\n  const container = document.createElement('div');\n\n  container.setAttribute('id', 'toggl-sourceLair');\n  container.setAttribute('style', inlineCss);\n\n  const link = togglbutton.createTimerLink({\n    projectName: projectFunc,\n    description: descFunc\n  });\n\n  container.appendChild(link);\n  $('.editor-panel').appendChild(container);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.section-header:not(.toggl)',\n  { observe: true },\n  function () {\n    const description = $('.section-header h1').textContent.trim();\n    const project = $('#navbar-project-link').textContent.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'spidergap',\n      description: description,\n      projectName: project\n    });\n\n    $('.nav-tabs').appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.modal-content .card_container:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = $('.card_container .body a.title', elem).textContent.trim();\n    const link = togglbutton.createTimerLink({\n      className: 'sprintly',\n      description: description\n    });\n\n    $('.card_container .card .top', elem).appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Taiga\n * @urlAlias taiga.io\n * @urlRegex *://*.taiga.io/*\n */\n'use strict';\n\n/* Epic/User story/Task/Issue details button */\ntogglbutton.render(\n  '.detail-title-wrapper:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const projectElem = $('tg-project-menu tg-legacy-loader').shadowRoot.querySelector('.menu-option-text.project-name');\n    const refElem = $('.detail-ref', elem);\n    const titleElem = $('.detail-title-text > span', elem);\n\n    const link = togglbutton.createTimerLink({\n      className: 'taiga',\n      buttonType: 'minimal',\n      projectName: projectElem.textContent,\n      description: refElem.textContent.trim() + ' ' + titleElem.textContent\n    });\n\n    elem.insertBefore(link, $('.detail-title-text', elem));\n  }\n);\n\n/* Epics Dashboard */\ntogglbutton.render('.epic-row .name:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const titleElem = $('a', elem);\n  const projectElem = $('.epics .project-name');\n\n  const link = togglbutton.createTimerLink({\n    className: 'taiga',\n    buttonType: 'minimal',\n    description: titleElem.textContent,\n    projectName: projectElem.textContent\n  });\n\n  elem.insertBefore(link, $('a', elem));\n});\n\n/* Backlog buttons */\ntogglbutton.render('.user-story-link:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const projectElem = $('tg-project-menu tg-legacy-loader').shadowRoot.querySelector('.menu-option-text.project-name');\n  const refElem = $('.user-story-number', elem);\n  const taskElem = $('.user-story-name', elem);\n\n  const link = togglbutton.createTimerLink({\n    className: 'taiga',\n    buttonType: 'minimal',\n    projectName: projectElem.textContent,\n    description: refElem.textContent.trim() + ' ' + taskElem.textContent\n  });\n\n  elem.prepend(link);\n});\n\n/* Kanban buttons */\ntogglbutton.render(\n  '.kanban .card-title:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const refElem = $('a > .card-ref', elem);\n    const titleElem = $('a > .card-subject', elem);\n    const projectElem = $('tg-project-menu tg-legacy-loader').shadowRoot.querySelector('.menu-option-text.project-name');\n\n    const link = togglbutton.createTimerLink({\n      className: 'taiga',\n      buttonType: 'minimal',\n      description: refElem.textContent + ' ' + titleElem.textContent,\n      projectName: projectElem.textContent\n    });\n\n    elem.insertBefore(link, $('a', elem));\n  }\n);\n\n/* Sprint Taskboard tasks buttons */\ntogglbutton.render(\n  '.taskboard .card-title:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const refElem = $('.card-title > a > span:nth-child(1)', elem);\n    const titleElem = $('.card-title > a > span:nth-child(2)', elem);\n    const projectElem = $('.taskboard .project-name-short');\n\n    const link = togglbutton.createTimerLink({\n      className: 'taiga',\n      buttonType: 'minimal',\n      description: refElem.textContent.trim() + ' ' + titleElem.textContent,\n      projectName: projectElem ? projectElem.textContent : 'kva'\n    });\n\n    elem.insertBefore(link, $('a', elem));\n  }\n);\n\n/* Issues list buttons */\ntogglbutton.render(\n  '.issues-table .row:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const projectElem = $('tg-project-menu tg-legacy-loader').shadowRoot.querySelector('.menu-option-text.project-name');\n    const refElem = $('.subject .issue-ref', elem);\n    const taskElem = $('.subject .issue-subject', elem);\n\n    const link = togglbutton.createTimerLink({\n      className: 'taiga',\n      buttonType: 'minimal',\n      projectName: projectElem ? projectElem.textContent : 'kva',\n      description: refElem.textContent.trim() + ' ' + taskElem.textContent\n    });\n\n    elem.insertBefore(link, $('.subject', elem));\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// main entity button\ntogglbutton.render('.view-header:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const titleElement = $('.i-role-entity-title', elem);\n  let entityIdElement = $('.entity-id.i-role-entity-id', elem);\n\n  const projectFunc = function () {\n    const projectItem = $('.tau-linkentity');\n    return projectItem ? projectItem.textContent : '';\n  };\n\n  let entityIdName;\n\n  // if element id not found with old tp version, try without the a cause it's just a span in new TP\n  if (!entityIdElement) {\n    entityIdElement = $('.entity-id', elem);\n  }\n\n  // if element id found continue\n  if (entityIdElement) {\n    entityIdName = entityIdElement.textContent + ' ' + titleElement.textContent;\n    const link = togglbutton.createTimerLink({\n      className: 'targetprocess',\n      description: entityIdName,\n      projectName: projectFunc\n    });\n    titleElement.parentElement.appendChild(link);\n  }\n});\n\n// entity's task buttons\ntogglbutton.render(\n  '.tau-list__table__row:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const taskId = '#' + $('.tau-list__table__cell-id', elem).textContent.trim();\n    const taskTitle = $('.tau-list__table__cell-name', elem).textContent.trim();\n\n    const projectFunc = function () {\n      const projectItem = $('.tau-linkentity');\n      return projectItem ? projectItem.textContent : '';\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'targetprocess',\n      description: taskId + ' ' + taskTitle,\n      projectName: projectFunc,\n      buttonType: 'minimal'\n    });\n\n    const buttonPlaceholder = $('.tau-list__table__cell-state', elem);\n    buttonPlaceholder.insertBefore(link, buttonPlaceholder.firstChild);\n  }\n);\n\n// tasks in table view\ntogglbutton.render('.tau-list-line:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const taskIdElement = $('.tau-list-general_entity_id-cell', elem);\n  const taskTitleElement = $('.tau-list-entity_name_1line-cell', elem);\n\n  const projectFunc = function () {\n    const projectItem = $('.tau-list-project_abbr-unit', elem);\n    return projectItem ? projectItem.title : '';\n  };\n\n  let taskId;\n  let taskTitle;\n\n  // if element id found continue\n  if (taskIdElement) {\n    taskId =\n      '#' + $('.tau-list-general_entity_id-cell', elem).textContent.trim();\n    taskTitle = '';\n\n    if (taskTitleElement) {\n      taskTitle =\n        ' ' + $('.tau-list-entity_name_1line-cell', elem).textContent.trim();\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'targetprocess',\n      description: taskId + taskTitle,\n      projectName: projectFunc,\n      buttonType: 'minimal'\n    });\n\n    const buttonPlaceholder = $('.tau-board-unit_type_entity-name', elem);\n    buttonPlaceholder.insertBefore(link, buttonPlaceholder.firstChild);\n  }\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.container:not(.toggl)', { observe: true }, function (elem) {\n  const taskTitleElem = $('#title', elem);\n  const pageTitleElem = $('.content_t', elem);\n  let description;\n\n  description = '';\n\n  if (pageTitleElem !== null) {\n    description += pageTitleElem.textContent.trim();\n  }\n\n  if (taskTitleElem !== null) {\n    if (description.length > 0) {\n      description += ': ';\n    }\n    description += taskTitleElem.textContent.trim();\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'teamleader',\n    description: description\n  });\n\n  elem.getElementsByClassName('widgettitle')[0].appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Teamwork\n * @urlAlias teamwork.com\n * @urlRegex *://*.teamwork.com/*\n */\n\n'use strict';\n\n// Tasks listing page in project\ntogglbutton.render(\n  'div.taskRHS:not(.toggl), div.row-rightElements:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    let desc;\n    let isTKO = false;\n    const className = 'huh';\n    let container = $('.taskIcons', elem);\n    const project = $('.w-header-titles__project-name a').textContent.trim();\n\n    if (container === null) {\n      // check if TKO container is there\n      container = $('.task-options', elem);\n      isTKO = true;\n      if (container === null) {\n        // remove class so we re-check after async data is loaded\n        elem.classList.remove('toggl');\n        return;\n      }\n    }\n\n    if ($('.taskName', elem) === null) {\n      // check if TKO element is there\n      if ($('p.task-name a', elem.parentElement) !== null) {\n        desc = $('p.task-name a', elem.parentElement).textContent;\n      } else {\n        return;\n      }\n    } else {\n      desc = $('.taskName', elem).textContent;\n    }\n\n    const link = togglbutton.createTimerLink({\n      className: 'teamwork',\n      description: desc,\n      projectName: project\n    });\n\n    if (isTKO) {\n      // different behaviour in TKO\n      link.classList.add('option');\n    } else {\n      link.classList.add(className);\n      link.addEventListener('click', function () {\n        // Run through and hide all others\n        let i;\n        let len;\n        const elems = document.querySelectorAll('.toggl-button');\n        for (i = 0, len = elems.length; i < len; i += 1) {\n          elems[i].classList.add('huh');\n        }\n\n        if (link.classList.contains(className)) {\n          link.classList.remove(className);\n        } else {\n          link.classList.add(className);\n        }\n      });\n    }\n\n    const spanTag = document.createElement('span');\n    spanTag.classList.add('toggl-span');\n    link.style.width = 'auto';\n    if (isTKO) {\n      // different styling due to different layout in TKO\n      link.style.paddingLeft = '25px';\n      link.style.transform = 'scale(1)';\n      link.style.fontSize = '13px';\n      link.style.marginRight = '10px';\n    } else {\n      link.style.paddingLeft = '20px';\n    }\n    link.setAttribute('title', 'Toggl Timer');\n    spanTag.appendChild(link);\n    if (isTKO) {\n      // need to use parent, some <a>'s can be nested e.g. HubSpot integration,\n      // can't just use \"unused icons\" container as the layout has changed\n      container.insertBefore(\n        spanTag,\n        container.parentElement.querySelector('.task-options > a:not(.active)')\n      );\n    } else {\n      container.insertBefore(spanTag, container.lastChild);\n    }\n  }\n);\n\n// Teamwork Desk\ntogglbutton.render(\n  'section.inbox--body header.ticket--header:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    // ticket view\n    const container = $('.title-label', elem);\n    const id = $('.id-hold', elem).textContent;\n    const description = $('a', elem).textContent;\n\n    const descFunc = function () {\n      return id.trim() + ' ' + description.trim();\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'teamwork',\n      buttonType: 'minimal',\n      description: descFunc\n    });\n\n    container.appendChild(link);\n  }\n);\n\n// Teamwork Desk - new design 2019\ntogglbutton.render(\n  '.ticket-view-page__main-content:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    // ticket view\n    const container = $('.title', elem);\n    const id = $('.ticket-id', elem).textContent;\n    const description = $('.title__subject', elem).textContent;\n\n    const descFunc = function () {\n      return id.trim() + ' ' + description.trim();\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'teamwork',\n      buttonType: 'minimal',\n      description: descFunc\n    });\n\n    link.style.margin = '3px 0 0 7px';\n\n    container.appendChild(link);\n  }\n);\n\n// Teamwork (July 2020)\ntogglbutton.render(\n  '.task-groupHold-wrapper .task-row .row-content-holder:not(.toggl), .s-project-task__tasklist .row-content-holder:not(.toggl)',\n  { observe: true },\n  function (root) {\n    const getNameHolder = () => root.querySelector('.w-task-row__name > a');\n\n    if (!getNameHolder()) { return; }\n\n    const link = togglbutton.createTimerLink({\n      className: 'teamwork',\n      buttonType: 'minimal',\n      description: () => getNameHolder().textContent.trim(),\n      projectName: () => {\n        const nameElement = $('.w-header-titles__project-name a');\n        return nameElement ? nameElement.textContent.trim() : '';\n      }\n    });\n\n    Object.assign(link.style, {\n      backgroundSize: '16px',\n      marginTop: '7px',\n      marginLeft: '2px'\n    });\n\n    link.setAttribute('data-content', 'Toggl Button');\n\n    link.classList.add(\n      'w-task-row__option',\n      'integration--hide',\n      'tipped-delegate',\n      'show-on-mouseenter');\n\n    root.appendChild(link);\n  }\n);\n\n// Teamwork Desk - new design (March 2022)\ntogglbutton.render(\n  '.ticket-view-page--container:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    // ticket view\n    const container = $('.title-container', elem);\n    const id = $('.ticket-id', elem).textContent;\n    const description = $('.title__subject', elem).textContent;\n\n    const descFunc = function () {\n      return id.trim() + ' ' + description.trim();\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'teamwork',\n      buttonType: 'minimal',\n      description: descFunc\n    });\n\n    link.style.margin = '3px 0 0 7px';\n\n    container.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('#task-detail-view:not(.toggl)', { observe: true }, function renderTickTick (elem) {\n  function getProject () {\n    const projectEl = elem.querySelector('.project-setting input');\n    return projectEl ? projectEl.value.trim() : '';\n  }\n\n  function getDescription () {\n    const descriptionEl = elem.querySelector('.task-title');\n    return descriptionEl ? descriptionEl.textContent.trim() : '';\n  }\n\n  const button = togglbutton.createTimerLink({\n    className: 'TickTick',\n    description: getDescription,\n    projectName: getProject\n  });\n  button.style.marginBottom = '15px';\n\n  const root = elem.querySelector('#td-caption');\n  if (root) {\n    root.insertBefore(button, root.firstChild);\n  }\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Todoist\n * @urlAlias todoist.com\n * @urlRegex *://*.todoist.com/app*\n */\n'use strict';\n/* global togglbutton, $ */\n\nconst todoistEditor = document.getElementById('content');\n\n// New task detail UI\ntogglbutton.render(\n  \"[data-item-detail-root]:not(.toggl)\",\n  { observe: true },\n  (elem) => {\n    const actionsNode = elem.querySelector(\"[data-item-actions-root]\");\n\n    if (actionsNode && actionsNode.children.length) return;\n\n    const description = () => elem.dataset.itemContent || \"\";\n    const project = () => elem.dataset.itemProjectName || \"\";\n    const rootEl = elem.closest(\"[role=dialog]\");\n\n    const tags = () =>\n      Array.from(rootEl.querySelectorAll(\"[data-item-label-name]\"))\n        .map((el) => el.dataset.itemLabelName)\n        .filter(Boolean);\n\n    const link = togglbutton.createTimerLink({\n      className: \"todoist-detail\",\n      description: description,\n      projectName: project,\n      buttonType: \"minimal\",\n      tags: tags,\n    });\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.style.display = \"flex\";\n    wrapper.style.alignItems = \"center\";\n    wrapper.style.justifyContent = \"center\";\n    wrapper.style.width = \"32px\";\n    wrapper.appendChild(link);\n\n    const header = rootEl.querySelector(\"header\");\n    header.firstChild.lastChild.firstChild.prepend(wrapper);\n  }\n);\n\n// task view\n// First example of data-attribute integration ✨\ntogglbutton.render('[data-item-detail-root] [data-item-actions-root]:not(.toggl)', { observe: true }, elem => {\n  const description = () => elem.dataset.itemContent || '';\n  const project = () => elem.dataset.itemProjectName || '';\n  const rootEl = elem.closest('.item_overview_main');\n  const tags = () => Array.from(rootEl.querySelectorAll('[data-item-label-name]'))\n    .map(el => el.dataset.itemLabelName)\n    .filter(Boolean);\n\n  const link = togglbutton.createTimerLink({\n    className: 'todoist-detail',\n    description: description,\n    projectName: project,\n    tags: tags,\n    buttonType: 'minimal'\n  });\n\n  const wrapper = document.createElement('div');\n  wrapper.classList.add('item_action');\n  wrapper.style.display = 'flex';\n  wrapper.style.alignItems = 'center';\n  wrapper.style.justifyContent = 'center';\n  wrapper.appendChild(link);\n\n  elem.lastChild.before(wrapper);\n});\n\n// task view - subtasks\ntogglbutton.render(\n  '.task_list_item .task_list_item__actions:not(.toggl)',\n  { observe: true, observeTarget: todoistEditor, debounceInterval: 300 },\n  elem => {\n    const isButtonAdded = elem.querySelector('.toggl-button') !== null;\n\n    if (isButtonAdded) {\n      return;\n    }\n\n    const rootEl = elem.closest('.task_list_item');\n    const content = rootEl.querySelector('.task_list_item__content');\n\n    const descriptionSelector = () => {\n      const text = content.querySelector('.task_content');\n      return text ? text.textContent.trim() : '';\n    };\n\n    let project = '';\n    const projectId = rootEl.getAttribute('data-item-id');\n\n    if (document.querySelector('.project_view h1 span.simple_content')) {\n      project = document.querySelector('.project_view h1 span.simple_content').textContent.trim();\n    } else if (document.getElementById(`item_${projectId}`)) {\n      // (legacy?) project ID element\n      const projectContent = document.getElementById(`item_${projectId}`).querySelector('.content');\n      project = getProjectNames(projectContent);\n    } else if (rootEl.querySelector('.task_list_item__project')) {\n      // Project name shown alongside the task in UI\n      project = rootEl.querySelector('.task_list_item__project').textContent.trim();\n    } else if (document.querySelector('[data-project-id] .simple_content')) {\n      project = document.querySelector('[data-project-id] .simple_content').textContent;\n    } else {\n      // Try to look for a parent item with a known project\n      project = getParentIfProject(elem.closest('.item_detail'));\n    }\n\n    const tagsSelector = () => {\n      const tags = content.querySelectorAll('.task_list_item__info_tags__label');\n\n      return [...tags].map(tag => tag.textContent);\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'todoist-detail-subtask',\n      description: descriptionSelector,\n      projectName: project,\n      buttonType: 'minimal',\n      tags: tagsSelector\n    });\n\n    const wrapper = document.createElement('div');\n    wrapper.style.display = 'flex';\n    wrapper.style.marginTop = '2px';\n    wrapper.appendChild(link);\n\n    elem.lastChild.before(wrapper);\n  }\n);\n\n/*\nProjects may have a hierarchy in Todoist.\n\nThe selector functions for project name take this into account.\nAll project names found in the hierarchy will be passed to Toggl button,\nwhich will figure out what the lowest level existing project is.\n\nE.g.\n- Project hierarchy is MyProject > MySubProject > MyFeatureProject\n- Selector will find all three project names and pass to Toggl Button\n- Toggl Button will first check if MyFeatureProject exists, and if it doesn't, try to use the next parent etc.\n*/\n\nfunction getProjectNameFromLabel (elem) {\n  let projectLabel = '';\n  const projectLabelEle = $('.project_item__name', elem.parentNode.parentNode);\n  if (projectLabelEle) {\n    projectLabel = projectLabelEle.textContent.trim();\n  } else if ($('.task_list_item__project', elem.parentNode.parentNode)) {\n    projectLabel = $('.task_list_item__project', elem).textContent.trim();\n  }\n  return projectLabel;\n}\n\nfunction getParentEle (sidebarCurrentEle) {\n  const levelPattern = /(?:^|\\s)indent_(\\d*?)(?:\\s|$)/;\n  const curLevel = sidebarCurrentEle.className.match(levelPattern)[1];\n  const parentClass = 'indent_' + (curLevel - 1);\n  let parentCandidate = sidebarCurrentEle;\n\n  while (parentCandidate.previousElementSibling) {\n    parentCandidate = parentCandidate.previousElementSibling;\n    if (parentCandidate.classList.contains(parentClass)) {\n      break;\n    }\n  }\n  return parentCandidate;\n}\n\nfunction isTopLevelProject (sidebarCurrentEle) {\n  return sidebarCurrentEle.classList.contains('indent_1');\n}\n\nfunction getProjectNameHierarchy (sidebarCurrentEle) {\n  const projectName = $(\n    '.name',\n    sidebarCurrentEle\n  ).firstChild.textContent.trim();\n\n  if (isTopLevelProject(sidebarCurrentEle)) {\n    return [projectName];\n  }\n\n  const parentProjectEle = getParentEle(sidebarCurrentEle);\n  return [projectName].concat(getProjectNameHierarchy(parentProjectEle));\n}\n\nfunction projectWasJustCreated (projectId) {\n  return projectId.startsWith('_');\n}\n\nfunction getSidebarCurrentEle (elem) {\n  let projectId;\n  let sidebarRoot;\n  let sidebarColorEle;\n  let sidebarCurrentEle;\n  const editorInstance = elem.closest('.project_editor_instance');\n\n  if (editorInstance) {\n    projectId = editorInstance.getAttribute('data-project-id');\n    sidebarRoot = $('#project_list');\n    if (projectWasJustCreated(projectId)) {\n      sidebarCurrentEle = $('.current', sidebarRoot);\n    } else {\n      sidebarColorEle = $('#project_color_' + projectId, sidebarRoot);\n      if (sidebarColorEle) {\n        sidebarCurrentEle = sidebarColorEle.closest('.menu_clickable');\n      }\n    }\n  }\n  return sidebarCurrentEle;\n}\n\nfunction getProjectNames (elem) {\n  // Return a function for timer link to use, in order for projects to be retrieved\n  // at the moment the button is clicked (rather than only on load)\n  return () => {\n    let projectNames;\n    let sidebarCurrentEle;\n\n    const isViewingInbox = $(\n      '#filter_inbox.current, #filter_team_inbox.current'\n    );\n\n    if (isViewingInbox) {\n      projectNames = ['Inbox'];\n    } else {\n      sidebarCurrentEle = getSidebarCurrentEle(elem);\n      if (sidebarCurrentEle) {\n        projectNames = getProjectNameHierarchy(sidebarCurrentEle);\n      } else {\n        projectNames = [getProjectNameFromLabel(elem)];\n      }\n    }\n    return projectNames;\n  };\n}\n\nfunction getParentIfProject (elem) {\n  if (!elem) return '';\n\n  const parent = elem.querySelector('.item_detail_parent_info');\n  let project = '';\n\n  if (parent.querySelector('circle, .item_detail_parent_icon__inbox_icon')) {\n    project = parent.querySelector('.item_detail_parent_name').textContent;\n  }\n\n  return project;\n}\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\nconst browser = require('webextension-polyfill');\n\nlet userData;\nconst offlineUser = localStorage.getItem('offline_users');\n\nif (offlineUser) {\n  userData = JSON.parse(localStorage.getItem('offline_users-' + offlineUser));\n  if (userData && userData.offlineData) {\n    browser.runtime.sendMessage({\n      type: 'userToken',\n      apiToken: userData.offlineData.api_token\n    }).catch(e => {\n      throw new Error(e);\n    });\n  }\n}\n\n(function () {\n  const version = browser.runtime.getManifest().version;\n  const source = `window.TogglButton = { version: \"${version}\" }`;\n  const s = document.createElement('script');\n  s.textContent = source;\n  document.body.appendChild(s);\n})();\n\ndocument.addEventListener('webkitvisibilitychange', function () {\n  if (!document.webkitHidden) {\n    browser.runtime.sendMessage({ type: 'sync' }).catch(e => {\n      throw new Error(e);\n    });\n  }\n});\n\nbrowser.runtime.sendMessage({ type: 'sync' }).catch(e => {\n  throw new Error(e);\n});\n\nfunction completeLogin () {\n  location.href = browser.runtime.getURL('html/login.html?source=web-login');\n}\n\nfunction handleIncomingMessage (event) {\n  if (\n    event.source === window &&\n    event.data &&\n    event.data.direction === 'from-public-web'\n  ) {\n    switch (event.data.message) {\n      case 'login-success': completeLogin(); break;\n      default: console.log('Unsupported event', event);\n    }\n  }\n}\n\nwindow.addEventListener('message', handleIncomingMessage);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Changed from teamweek to Toggl-Plan\n// Version active on July 2020\ntogglbutton.render('.task-form[data-track-inject-button]:not(.toggl)',\n  { observe: true },\n  element => {\n    const container = element.querySelector('[data-hook=actions-menu]');\n\n    const getDescriptionText = () => {\n      const titleElement = element.querySelector('[data-hook=name-editor] textarea');\n      return titleElement ? titleElement.textContent.trim() : '';\n    };\n\n    const getProjectText = () => {\n      const planElement = element.querySelector('[data-hook=plan-editor] [data-hook=input-value]');\n\n      return planElement\n        ? planElement.textContent.trim()\n        : '';\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'toggl-plan',\n      buttonType: 'minimal',\n      description: getDescriptionText,\n      projectName: getProjectText\n    });\n\n    container.parentNode.insertBefore(link, container);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.row:not(.toggl), .taskRow:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    if (elem.querySelectorAll('.toggl-button').length) {\n      return;\n    }\n\n    const newLayout = $('.tc_title', elem);\n    const taskElem = newLayout || $('.task', elem);\n    const folderElem = $('.col1', elem) || $('.taskCell:not(.tc_title)', elem);\n    let folderName = folderElem && folderElem.firstChild.textContent;\n\n    folderName =\n      !folderName || folderName === 'No Folder' ? '' : ' - ' + folderName;\n\n    const link = togglbutton.createTimerLink({\n      className: 'toodledo',\n      buttonType: 'minimal',\n      description: taskElem.textContent + folderName\n    });\n\n    const newElem = document.createElement('div');\n    newElem.appendChild(link);\n    newElem.setAttribute(\n      'style',\n      (newLayout ? 'display:inline-block;' : 'float:left;') +\n        'width:30px;height:20px;'\n    );\n    if (!newLayout) {\n      link.setAttribute('style', 'top:1px;');\n    }\n\n    const landmarkElem =\n      $('.subm', elem) ||\n      $('.subp', elem) ||\n      $('.ax', elem) ||\n      $('.cellAction', elem) ||\n      $('.cellStarSmall', elem);\n    landmarkElem.parentElement.insertBefore(newElem, landmarkElem.nextSibling);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '#main > #content.ticket:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const tracTicketId = (\n      $('#main > #content.ticket > #ticket > h2 > .trac-id') || // Trac v1.x\n        $('#main > #content.ticket > h1#trac-ticket-title > a')\n    ).textContent;\n    // Trac v0.x\n\n    const tracTicketDescription = $(\n      '#main > #content.ticket > #ticket .summary',\n      elem\n    ).textContent;\n\n    const tracProjectName =\n        $('title')\n          .textContent.split('     – ')\n          .pop() || $('#banner > #header > #logo > img').attr('alt');\n    // First try to get project name from title tag // If can't find in title tag, get from logo alt attribute\n\n    const container =\n        $('#main > #content.ticket > #ticket > h2 > .trac-type', elem) || // Trac v1.x\n        $('#main > #content.ticket > h1#trac-ticket-title > a', elem);\n    // Trac v0.x\n\n    const link = togglbutton.createTimerLink({\n      className: 'trac',\n      description: tracTicketId + ' ' + tracTicketDescription,\n      projectName: tracProjectName\n    });\n\n    const spanTag = document.createElement('span');\n    container.parentNode.appendChild(spanTag.appendChild(link));\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global createTag */\n\nconst getProject = () => {\n  const project = $('.board-header-btn-text');\n  return project ? project.textContent.trim() : '';\n};\n\ntogglbutton.render(\n  '.window-header:not(.toggl)',\n  { observe: true },\n  (elem) => {\n    const actionButton =\n      $('.js-move-card') ||\n      $('.js-copy-card') ||\n      $('.js-archive-card') ||\n      $('.js-more-menu');\n\n    if (!actionButton) {\n      return;\n    }\n\n    const getDescription = () => {\n      const description = $('.window-title h2', elem);\n      return description ? description.textContent.trim() : '';\n    };\n\n    const container = createTag('div', 'button-link trello-tb-wrapper');\n    const link = togglbutton.createTimerLink({\n      className: 'trello',\n      description: getDescription,\n      projectName: getProject,\n      container: '.window-wrapper'\n    });\n\n    // Pass through click on Trello button to the timer link\n    container.addEventListener('click', (e) => {\n      e.preventDefault();\n      link.click();\n    });\n\n    container.appendChild(link);\n    actionButton.parentNode.insertBefore(container, actionButton);\n  },\n  '.window-wrapper'\n);\n\n/* Checklist buttons */\ntogglbutton.render(\n  '.checklist-item-details:not(.toggl)',\n  { observe: true },\n  (elem) => {\n    const getTitleText = () => {\n      const title = $('.window-title h2');\n      return title ? title.textContent.trim() : '';\n    };\n\n    const getTaskText = () => {\n      const task = $('.checklist-item-details-text', elem);\n      return task ? task.textContent.trim() : '';\n    };\n\n    const getDescription = () => {\n      return `${getTitleText()} - ${getTaskText()}`;\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'trello-list',\n      buttonType: 'minimal',\n      projectName: getProject,\n      description: getDescription,\n      container: '.window-wrapper'\n    });\n    const wrapper = document.createElement('span');\n    wrapper.classList.add('checklist-item-menu');\n    wrapper.style.display = 'flex';\n    wrapper.style.alignItems = 'center';\n    wrapper.style.marginRight = '4px';\n    wrapper.appendChild(link);\n    elem.querySelector('.checklist-item-controls').appendChild(wrapper);\n  },\n  '.checklist-items-list, .window-wrapper'\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.ticket-fields-panel:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const titleElem = $('h1.summary .number', elem);\n    const numElem = $('h1.summary .text-field-text', elem);\n\n    const projectName = $(\n      '#account_header .nav:not(.right-actions-top) .dropdown-toggle'\n    ).textContent;\n\n    const description = titleElem.textContent + ': ' + numElem.textContent;\n\n    const link = togglbutton.createTimerLink({\n      className: 'unfuddle',\n      description: description,\n      projectName: projectName\n    });\n\n    $('.primary-properties', elem).appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.inline-asset-detail .asset-summary:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = $(\n      '.main-panel .asset-heading #asset-title-mount .title',\n      elem\n    ).textContent;\n\n    const project = $(\n      '.main-panel .main-panel-scroller .fields .text .asset-name-link span',\n      elem\n    ).textContent;\n\n    const container = $('.toolbar .utility', elem);\n\n    const link = togglbutton.createTimerLink({\n      className: 'versionone',\n      description: description,\n      projectName: project,\n      buttonType: 'minimal'\n    });\n    link.setAttribute('style', 'margin-right: 10px');\n    container.insertBefore(link, $('.share', container));\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="/*\n * 2018-09\n * Warning, Visual Studio Team Services changed layout slightly (at least in HTML structure)\n * Some additional mumbo jumbo for detection is required\n * See more below\n*/\n'use strict';\n\nfunction getContainer (selector) {\n  const visibleContainers = Array\n    .from(document.querySelectorAll(selector))\n    .filter(isElementVisible);\n\n  return visibleContainers.length > 0 && visibleContainers[0];\n}\n\n// We need to find proper project element, which differs between old and new layout\nfunction projectSelector () {\n  const oldLayoutProjectElement = $('.tfs-selector span');\n  const newLayoutProjectElement = $('.fontWeightHeavy.flex-grow.commandbar-item-text');\n  const projectElement = oldLayoutProjectElement || newLayoutProjectElement;\n\n  return projectElement ? projectElement.textContent : '';\n}\n\nfunction descriptionSelectorFactory (container) {\n  return function () {\n    const formIdElem = $('.work-item-form-id span', container);\n    const formTitleElem = $('.work-item-form-title input', container);\n\n    return (formIdElem ? formIdElem.innerText : '') +\n      ' ' +\n      (formTitleElem ? formTitleElem.value : '');\n  };\n}\n\nfunction isElementVisible (element) {\n  return element && element.offsetParent !== null;\n}\n\ntogglbutton.render(\n  '.witform-layout-content-container:not(.toggl)',\n  { observe: true },\n  function () {\n    const activeButtonContainer = getContainer('.work-item-form-toolbar-container ul');\n    const activeHeaderContainer = getContainer('.work-item-form-main-header');\n    const vsActiveClassElem = $('.commandbar.header-bottom > .commandbar-item > .displayed');\n\n    const link = togglbutton.createTimerLink({\n      className: 'visual-studio-online',\n      description: descriptionSelectorFactory(activeHeaderContainer),\n      projectName: projectSelector,\n      container: '.work-item-form-main-header'\n    });\n\n    // For new layout vs_activeClassElem is not longer required, we can skip it\n    if (\n      !vsActiveClassElem ||\n      vsActiveClassElem.textContent === 'Work Items' ||\n      vsActiveClassElem.textContent === 'Backlogs'\n    ) {\n      const wrapper = createTag('li', 'menu-item');\n      wrapper.appendChild(link);\n      activeButtonContainer.appendChild(wrapper);\n    }\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render('.vs-c-modal--task:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const container = $('.vs-c-modal__actions', elem);\n  const descFunc = function () {\n    return $('.vs-c-task__title > .vue-simple-markdown', elem).innerText;\n  };\n\n  const link = togglbutton.createTimerLink({\n    description: descFunc,\n    buttonType: 'minimal'\n  });\n\n  container.prepend(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// WP 4.9\ntogglbutton.render('#poststuff:not(.toggl)', { observe: true }, function (elem) {\n  const heading = document.querySelector('.wp-heading-inline');\n  const description = function () {\n    return elem.querySelector('#title').value;\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'wordpress',\n    description: description\n  });\n\n  heading.append(link);\n});\n\n// WP 5.1\ntogglbutton.render('.edit-post-header:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const targetElement = elem.querySelector('.edit-post-header__settings');\n  const description = function () {\n    const titleInput = document.getElementById('post-title-0');\n    return titleInput ? titleInput.value : '';\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'wordpress',\n    description: description\n  });\n\n  targetElement.prepend(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\nfunction toProperCase (input) {\n  return input.replace(/\\w\\S*/g, function (str) {\n    return str.charAt(0).toUpperCase() + str.substr(1).toLowerCase();\n  });\n}\n\n/* Checklist buttons */\ntogglbutton.render('a.task-list__item:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const title = $('.item__title', elem).textContent.trim();\n  const titleContainer = $('.layout-column', elem);\n\n  const subProjectContainer = $(\n    '.task-list__title',\n    elem.closest('.task-list__container')\n  ).firstElementChild;\n\n  const taskUndone = $('.task--undone', elem);\n\n  if (!titleContainer || !taskUndone) {\n    return;\n  }\n\n  // If the current list header is \"Open tasks\" get the project from the dashboard (current space) title\n  const subProject = !subProjectContainer\n    ? null\n    : subProjectContainer.textContent;\n\n  let project =\n      subProject === 'Open tasks' || subProject === null\n        ? $('.dashboard__title').textContent\n        : subProject;\n\n  const tagFunc = function () {\n    const tags = [];\n    const isDetailedView =\n      elem.getElementsByClassName('item__meta--minimize').length > 0;\n    if (isDetailedView) {\n      const elements = elem.nextElementSibling.getElementsByClassName('tag-item');\n      for (\n        let i = 0;\n        typeof elements[i] !== 'undefined';\n        tags.push(elements[i++].querySelector('.item-name').textContent)\n      );\n    } else {\n      const elements = elem.getElementsByClassName('item__meta--tag');\n      for (\n        let i = 0;\n        typeof elements[i] !== 'undefined';\n        tags.push(elements[i++].getAttribute('aria-label'))\n      );\n    }\n    return tags;\n  };\n\n  // Slack channels have a leading #, do not allow spaces, and are all lowercase.\n  // Reformat to match typical project names\n  project =\n    project.charAt(0) === '#'\n      ? toProperCase(project.replace(/^#/, '').replace(/[-_]/g, ' '))\n      : project;\n\n  const link = togglbutton.createTimerLink({\n    className: 'workast',\n    buttonType: 'minimal',\n    description: title,\n    projectName: project,\n    tags: tagFunc\n  });\n\n  titleContainer.parentNode.insertBefore(link, titleContainer);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global togglbutton, $ */\n\n// The bullet that has been interacted with most recently.\nlet recentBullet = null;\n\n// The timer link (from createTimerLink).\n// Must be global so that its title can be updated to reflect the bullet\n// that has been interacted with most recently.\nlet link = null;\n\ntogglbutton.render(\n  '.header:not(.toggl)',\n  { observe: true },\n  $container => {\n    if ($container.querySelector('.toggl-button')) {\n      // Check for existence in case it's there from a previous render\n      return;\n    }\n\n    link = togglbutton.createTimerLink({\n      className: 'workflowy',\n      buttonType: 'minimal',\n      description: getDescription,\n      tags: getTags\n    });\n\n    $container.insertBefore(link, $container.children[3]);\n  }\n);\n\n// Updates the bullet that has been interacted with most recently.\n// Updates the link's title to match.\ndocument.addEventListener('focusin', function (e) {\n  const focus = document.activeElement;\n  if (focus.className.includes('content')) {\n    recentBullet = focus;\n  }\n  // TODO: May want to move this into a function in case toggl-button ever\n  //   supports i18n.\n  link.title = 'Start timer: ' + getDescription();\n});\n\nfunction getDescription () {\n  // Current most recently focused bullet or top bullet.\n  const bulletInfo = recentBullet || $('.content');\n\n  let description = '';\n  let currentNode = bulletInfo.childNodes[0];\n  while (currentNode !== bulletInfo) {\n    // If it is a text node.\n    if (currentNode.nodeType === 3) {\n      description += currentNode.textContent;\n    }\n\n    // Try to go down the tree.\n    let nextNode = currentNode.firstChild || currentNode.nextSibling;\n    // Span means it is a tag, and tag text should not be included.\n    while (nextNode && nextNode.nodeName === 'SPAN') {\n      nextNode = nextNode.nextSibling;\n    }\n    // If we couldn't go down try to go back up the tree.\n    if (!nextNode) {\n      nextNode = currentNode.parentNode;\n      while (nextNode !== bulletInfo) {\n        // We are valid again!\n        if (nextNode.nextSibling) {\n          nextNode = nextNode.nextSibling;\n          break;\n        }\n        // Try to go up again. If we reach the bulletInfo node that\n        // means we've reached the top and we will break out of both loops.\n        nextNode = nextNode.parentNode;\n      }\n    }\n    currentNode = nextNode;\n  }\n  return description.trim();\n}\n\nfunction getTags () {\n  // Current most recently focused bullet or top bullet.\n  const bulletInfo = recentBullet || $('.content');\n\n  const tagsArray = [];\n  let currentNode = bulletInfo.childNodes[0];\n  while (currentNode !== bulletInfo) {\n    if (currentNode.classList &&\n      currentNode.classList.contains('contentTagText')) {\n      tagsArray.push(currentNode.textContent.trim());\n    }\n\n    // Try to go down the tree.\n    let nextNode = currentNode.firstChild || currentNode.nextSibling;\n    // If we can't go down try to go back up the tree.\n    if (!nextNode) {\n      nextNode = currentNode.parentNode;\n      while (nextNode !== bulletInfo) {\n        // We are valid again!\n        if (nextNode.nextSibling) {\n          nextNode = nextNode.nextSibling;\n          break;\n        }\n        // Try to go up again. If we reach the bulletInfo node that\n        // means we've reached the top and we will break out of both loops.\n        nextNode = nextNode.parentNode;\n      }\n    }\n    currentNode = nextNode;\n  }\n  return tagsArray;\n}\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Single task/issue/project in main view\ntogglbutton.render('#layout-container:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const description = function () {\n    const wName = $('.detail-name-edit', elem).textContent;\n    return wName + ' ' + window.location.href;\n  };\n\n  const link = togglbutton.createTimerLink({\n    className: 'workfront',\n    description: description\n  });\n\n  // Create container element\n  const tContainer = document.createElement('li');\n  tContainer.id = 'nav-toggl';\n  tContainer.className = 'navbar-item';\n  tContainer.setAttribute('style', 'height: 62px; vertical-align: middle;');\n\n  // Add Toggl button to container\n  tContainer.appendChild(link);\n\n  // Add container to navbar\n  const navgroup = document.querySelector('.navbar-item-group.right');\n  navgroup.insertBefore(tContainer, navgroup.children[0]);\n});\n\n// Multiple tasks in project view\nconst t = document.querySelector('#minified-scripts').innerHTML;\nconst userName = /\\/user\\/view.*?label:\"(.*?)\"/.exec(t)[1];\nconst myTasks = document.querySelectorAll(\n  'td[data-workvalue*=\"' + userName + '\"]'\n);\n\nmyTasks.forEach(function (e) {\n  const objid = e.parentElement.getAttribute('objid');\n  let taskName = e.parentElement.querySelector('td[valuefield=name]');\n  let l = taskName.querySelector('.objectlink');\n  let url;\n  let name;\n\n  url = l.href;\n  name = l.innerText;\n\n  if (url.length > 30 && name.length > 3) {\n    togglbutton.render(\n      '[objid=\"' + objid + '\"]:not(.toggl)',\n      { observe: true },\n      function (elem) {\n        taskName = elem.querySelector('td[valuefield=name]');\n        l = taskName.querySelector('.objectlink');\n        url = l.href;\n        name = l.innerText;\n        const description = function () {\n          return name + ' ' + url;\n        };\n\n        const link = togglbutton.createTimerLink({\n          className: 'workfront',\n          description: description,\n          buttonType: 'minimal'\n        });\n\n        // Add Toggl button to container\n        const nameDiv = taskName.querySelector('div');\n        const nameDivSpan = nameDiv.querySelector('span');\n        nameDiv.insertBefore(link, nameDivSpan);\n      }\n    );\n  }\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Gets project name from print styles\n// They're included on any page as of 2019-12-02 with following structure:\n// <div id=\"header_print\">\n//   <span>{workspace_name}</span>\n//   projectName\n// </div>\nfunction getProjectName () {\n  const printHeaderElem = document.querySelector('#header_print');\n\n  return printHeaderElem && printHeaderElem.lastChild && printHeaderElem.lastChild.nodeValue\n    ? printHeaderElem.lastChild.nodeValue.trim()\n    : '';\n}\n\n// Task view\ntogglbutton.render('.task:not(.toggl)', { observe: true }, function (elem) {\n  function getDescription () {\n    // Task details view\n    const descriptionElem = elem.querySelector('h1 > a');\n    if (descriptionElem) return descriptionElem.textContent.trim();\n\n    // Task modal view\n    const descriptionModalElem = document.querySelector('#TB_title .name a');\n    return descriptionModalElem ? descriptionModalElem.textContent.trim() : '';\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'worksection-taskview',\n    description: getDescription,\n    projectName: getProjectName\n  });\n\n  const root = document.querySelector('.buts_menu');\n  if (root) {\n    root.appendChild(link);\n  }\n});\n\n// Tasks list\ntogglbutton.render('#tasks_images .item:not(.toggl)', { observe: true }, function (elem) {\n  function getDescription () {\n    const descriptionElem = elem.querySelector('.name > a');\n    return descriptionElem ? descriptionElem.textContent.trim() : '';\n  }\n\n  const link = togglbutton.createTimerLink({\n    buttonType: 'minimal',\n    className: 'worksection-listview',\n    description: getDescription,\n    projectName: getProjectName\n  });\n\n  const root = elem.querySelector('.td_actions > span');\n  if (root) {\n    root.appendChild(link);\n  }\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Wrike\n * @urlAlias wrike.com\n * @urlRegex *://*.wrike.com/*\n */\n\n'use strict';\n\ntogglbutton.render(\n  'task-title:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const container = document.querySelector('settings-bar-content')\n    const viewContainer = document.querySelector('entity-view')\n\n    const getTitleElement = function () {\n      const wsTaskTitle = document.querySelectorAll('task-title');\n      if (wsTaskTitle.length === 1 && wsTaskTitle[0].textContent !== '') {\n        return wsTaskTitle[0];\n      }\n      return $('title');\n    };\n\n    const descriptionText = function () {\n      const titleElem = getTitleElement();\n      const titleElemText = titleElem ? titleElem.textContent : 'not found';\n    \n      return `${viewContainer.querySelector('author').firstChild.textContent} ${titleElemText.trim().replace(' - Wrike', '')}`.trim();\n    };\n\n    const projectText = function () {\n      const projectElem = viewContainer.querySelector('wrike-tag');\n      // We process the project element text content.\n      return projectElem ? projectElem.textContent : '';\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'wrike',\n      description: descriptionText,\n      projectName: projectText\n    });\n\n    container.append(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Xero\n * @urlAlias xero.com\n * @urlRegex '*://*.xero.com/*'\n */\n'use strict';\n\ntogglbutton.render('.xnav-header--main:not(.toggl)', {}, function (elem) {\n  const container = $('.xnav-addons');\n  let descriptionNode;\n\n  if ($('#page_title h1')) {\n    // Quotes\n    // Sales overview\n    // Purchase Orders\n    // Purchases overview\n    // Expense claims\n    // Products and services\n    descriptionNode = $('#page_title h1');\n  } else if ($('#title')) {\n    // Invoices\n    // Bills\n    // Bank account\n    // Manual journals\n    // Pay Run\n    descriptionNode = $('#title');\n  } else if ($('.page-title h1')) {\n    // Reports child\n    descriptionNode = $('.page-title h1').cloneNode(true);\n    descriptionNode.removeChild($('span', descriptionNode));\n  } else if ($('header.xui-pageheading')) {\n    // Dashboard\n    // Reports\n    // Advanced accounting\n    // Projects\n    descriptionNode = $('.xui-pageheading');\n    // Dashboard\n    // Reports\n    // Projects\n    if ($('h1', descriptionNode)) {\n      descriptionNode = $('h1', descriptionNode);\n    }\n  } else if ($('.fa-pagetitle')) {\n    // Fixed assets\n    descriptionNode = $('.fa-pagetitle');\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'xero',\n    projectName: 'Finance',\n    description: descriptionNode ? descriptionNode.textContent.trim() : '',\n    buttonType: 'minimal'\n  });\n\n  const div = createTag('div', 'xrh-focusable--child xrh-iconwrapper');\n  div.appendChild(link);\n\n  const button = createTag('button', 'xnav-header-button xnav-addon--iconbutton xnav-header--iconbutton xnav-focusable--parent');\n  button.type = 'button';\n\n  button.addEventListener('click', function (e) {\n    e.stopPropagation();\n    link.click();\n  });\n\n  button.appendChild(div);\n\n  const liTag = createTag('li', 'xnav-addon');\n  liTag.appendChild(button);\n\n  if (container) {\n    const userIcon = $('[data-automationid=\"xnav-addon-user\"]', container);\n    container.insertBefore(liTag, userIcon);\n  }\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n/* the first selector is required for youtrack-5 and the second for youtrack-6 */\ntogglbutton.render(\n  '.fsi-toolbar-content:not(.toggl), .toolbar_fsi:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    let description;\n    const numElem = $('a.issueId');\n    const titleElem = $('.issue-summary');\n\n    const projectElem = $(\n      '.fsi-properties a[title^=\"Project\"], .fsi-properties .disabled.bold'\n    );\n\n    description = titleElem.textContent;\n    description =\n      numElem.firstChild.textContent.trim() + ' ' + description.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'youtrack',\n      description: description,\n      projectName: projectElem ? projectElem.textContent : ''\n    });\n\n    elem.insertBefore(link, titleElem);\n  }\n);\n\n/* new view for single issues — obligatory since YouTrack 2018.3 */\ntogglbutton.render(\n  '.yt-issue-body:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const parent = elem.closest('.yt-issue-view');\n    const issueId = parent.querySelector('.js-issue-id').textContent;\n    const link = togglbutton.createTimerLink({\n      className: 'youtrack-new',\n      description: issueId + ' ' + $('h1').textContent.trim(),\n      projectName: issueId.split('-')[0]\n    });\n\n    elem.insertBefore(link, $('.yt-issue-view__star'));\n  }\n);\n\n// Agile board\ntogglbutton.render('.yt-agile-card:not(.toggl)', { observe: true }, function (\n  elem\n) {\n  const container = $('.yt-agile-card__summary', elem);\n  const projectName = $('.yt-issue-id').textContent.split('-');\n\n  const description = function () {\n    const text = $('.yt-agile-card__summary', elem).children[1].textContent;\n    const id = $('.yt-agile-card__id', elem).textContent;\n    return (id ? id + ' ' : '') + (text ? text.trim() : '');\n  };\n\n  if (projectName.length > 1) {\n    projectName.pop();\n  }\n\n  const link = togglbutton.createTimerLink({\n    className: 'youtrack',\n    buttonType: 'minimal',\n    description: description,\n    projectName: projectName.join('')\n  });\n\n  container.appendChild(link);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n/* global togglbutton, $ */\n\n// Zammad 3.1 add toggl button to the ticket controls\ntogglbutton.render(\n  '.ticketZoom-header:not(.toggl)',\n  { observe: true },\n  $element => {\n    const $container = $('.ticketZoom-controls');\n    const togglLink = togglbutton.createTimerLink({\n      className: 'zammad-toggle-btn',\n      description: descriptionSelector,\n      projectName: projectSelector,\n      tags: tagsSelector,\n      buttonType: 'minimal'\n    });\n    // Append the button to the ticket controls\n    appendTogglLinkAsButton(togglLink, $container);\n  }\n);\n\nfunction appendTogglLinkAsButton (togglLink, $container) {\n  // First append a spacer\n  const spacer = document.createElement('div');\n  spacer.className = 'spacer';\n  $container.appendChild(spacer);\n  // Now append the wrapped button\n  const wrapper = document.createElement('div');\n  wrapper.className = 'btn btn--action centered';\n  wrapper.appendChild(togglLink);\n  $container.appendChild(wrapper);\n}\n\nfunction descriptionSelector () {\n  const $ticketId = $('.ticket-number');\n  const $ticketTitle = $('.ticket-title');\n  return (($ticketId) ? '#' + $ticketId.textContent + ': ' : '') + $ticketTitle.textContent.trim();\n}\n\n/**\n * We take the client name as project if one is found and append the organization if the client is assigned\n * @returns {string}\n */\nfunction projectSelector () {\n  const client = document.querySelectorAll('[data-tab=\"customer\"] [title=\"Name\"]');\n  const organization = document.querySelectorAll('[data-tab=\"organization\"] [title=\"Name\"]');\n  let clientName = '';\n  if (client.length === 1) {\n    clientName = client[0].textContent.trim();\n  }\n  if (organization.length === 1) {\n    clientName += ' (' + organization[0].textContent.trim() + ')';\n  }\n  return clientName;\n}\n\nfunction tagsSelector () {\n  let tags = document.querySelectorAll('.tags .list-item-name');\n  tags = tags ? Array.from(tags).map(tag => tag.textContent.trim()) : null;\n  return tags;\n}\n"},function(e,t,n){"use strict";n.r(t),t.default="/**\n * @name Zendesk\n * @urlAlias zendesk.com\n * @urlRegex *://*.zendesk.com/*\n */\n\n'use strict';\n\n// Zendesk new UI Jul 2021\ntogglbutton.render(\n  '.omni-conversation-pane>div>div:first-child:not(.toggl)',\n  { observe: true },\n  (elem) => {\n    const getProject = () => {\n      const title = document.querySelector('title');\n      return title ? title.textContent.trim() : '';\n    };\n\n    const getDescription = () => {\n      const ticketId = document.querySelector('header div[data-selected=true]').attributes['data-entity-id'].value || ''\n\n      const input = elem.querySelector('input[aria-label=Subject]');\n      const title = (input ? input.value : '').trim();\n\n      return [`#${ticketId}`, title].filter(Boolean).join(' ');\n    };\n\n    const link = togglbutton.createTimerLink({\n      buttonType: 'minimal',\n      className: 'zendesk--2021',\n      description: getDescription,\n      projectName: getProject\n    });\n\n    elem.appendChild(link);\n  }\n);\n\n// Zendesk pre-2021\ntogglbutton.render(\n  '.pane_header:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    let description;\n    const projectName = $('title').textContent;\n\n    const titleFunc = function () {\n      const titleElem = $('.editable .ember-view input', elem);\n      const ticketNum = location.href.match(/tickets\\/(\\d+)/);\n\n      if (titleElem !== null) {\n        description = titleElem.value.trim();\n      }\n\n      if (ticketNum) {\n        description = '#' + ticketNum[1].trim() + ' ' + description;\n      }\n      return description;\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'zendesk',\n      description: titleFunc,\n      projectName: projectName && projectName.split(' - ').shift()\n    });\n\n    // Check for strange duplicate buttons. Don't know why this happens in Zendesk.\n    if (elem.querySelector('.toggl-button')) {\n      elem.removeChild(elem.querySelector('.toggl-button'));\n    }\n\n    elem.insertBefore(link, elem.querySelector('.btn-group'));\n  }\n);\n\nconst getDescription = () => {\n  const ticketNum = location.href.match(/tickets\\/(\\d+)/);\n\n  if (!ticketNum) return null;\n  const id = ticketNum[1].trim();\n  const titleElem = document.querySelector(\n    `[data-side-conversations-anchor-id=\"${id}\"] input[aria-label=\"Subject\"]`\n  );\n  if (!titleElem) return null;\n\n  return '#' + id + ' ' + titleElem.value.trim();\n};\n\ntogglbutton.render(\n  '[data-test-id=\"customer-context-tab-navigation\"]',\n  { observe: true },\n  function (elem) {\n    // Manual check for existence in this SPA.\n    if (elem.querySelector('.toggl-button')) return;\n    // If we can't get the description on this pass, let's skip and wait for the next one\n    if (!getDescription()) return;\n\n    const link = togglbutton.createTimerLink({\n      className: 'zendesk-agent-ws',\n      description: getDescription\n    });\n\n    elem.prepend(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Issue and Pull Request Page\ntogglbutton.render('.zhc-menu-bar > .zhc-menu-bar-item:not(.toggl):first-child', { observe: true }, function (\n  elem\n) {\n  const numElem = $('.zhc-issue-description__number');\n  const titleElem = $('.zhc-issue-description__title');\n\n  let description = titleElem.textContent;\n  if (numElem !== null) {\n    description = numElem.textContent + ' ' + description.trim().replace(numElem.textContent, '');\n  }\n\n  const div = document.createElement('div');\n  div.classList.add('zhc-menu-bar-item', 'toggl');\n\n  const link = togglbutton.createTimerLink({\n    className: 'zenhub',\n    description: description\n  });\n\n  div.appendChild(link);\n  elem.parentNode.prepend(div);\n});\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\ntogglbutton.render(\n  '.content-column .btn-toolbar:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = function () {\n      let first = document.querySelector('.pcs-template-body .pcs-label b');\n      let second = document.querySelector('.pcs-template-body #tmp_ref_number');\n\n      first = first ? first.textContent.trim() + ' ' : '';\n      second = second ? second.textContent.trim() : '';\n      return first + second;\n    };\n\n    const project = function () {\n      let p = document.querySelector(\n        '.pcs-template-body .pcs-customer-name a'\n      );\n      p = p ? p.textContent.trim() : '';\n      return p;\n    };\n\n    const link = togglbutton.createTimerLink({\n      className: 'zoho_books',\n      description: description,\n      projectName: project\n    });\n\n    elem.appendChild(link);\n  }\n);\n"},function(e,t,n){"use strict";n.r(t),t.default="'use strict';\n\n// Card detail view\ntogglbutton.render(\n  '#card-modal-view:not(.toggl)',\n  { observe: true },\n  function () {\n    const description = $('#card-title-container .content').textContent.trim();\n    const project = $('.project-name').textContent.trim();\n\n    const link = togglbutton.createTimerLink({\n      className: 'zube',\n      description: description,\n      projectName: project\n    });\n\n    $('#card-primary-attributes-container div').appendChild(link);\n  }\n);\n\n// Ticket detail view\ntogglbutton.render(\n  '#tickets-show-options-container:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = $('.resource-details .title').textContent.trim();\n    const project = $('.project-selector .truncate').textContent.trim();\n    const existingTag = $('.sidebar-item.toggl');\n\n    if (existingTag) {\n      if (existingTag.parentNode.firstChild.classList.contains('toggl')) {\n        return;\n      }\n      existingTag.parentNode.removeChild(existingTag);\n    }\n\n    const div = document.createElement('div');\n    div.classList.add('sidebar-item', 'toggl');\n\n    const link = togglbutton.createTimerLink({\n      className: 'zube',\n      description: description,\n      projectName: project\n    });\n\n    div.appendChild(link);\n    elem.prepend(div);\n  }\n);\n\n// Epic detail view\ntogglbutton.render(\n  '#epics-show-options-container:not(.toggl)',\n  { observe: true },\n  function (elem) {\n    const description = $('.resource-details .title').textContent.trim();\n    const project = $('.project-selector .truncate').textContent.trim();\n    const existingTag = $('.sidebar-item.toggl');\n\n    if (existingTag) {\n      if (existingTag.parentNode.firstChild.classList.contains('toggl')) {\n        return;\n      }\n      existingTag.parentNode.removeChild(existingTag);\n    }\n\n    const div = document.createElement('div');\n    div.classList.add('sidebar-item', 'toggl');\n\n    const link = togglbutton.createTimerLink({\n      className: 'zube',\n      description: description,\n      projectName: project\n    });\n\n    div.appendChild(link);\n    elem.prepend(div);\n  }\n);\n"},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){var o=self.crypto||self.msCrypto;e.exports=function(e){e=e||21;for(var t="",n=o.getRandomValues(new Uint8Array(e));0<e--;)t+="_~getRandomVsCrypwhil0214563789bcfjkquvxzABDEFGHIJKLMNOPQSTUWXYZ"[63&n[e]];return t}},,,,,,,function(e,t,n){var o={"./airtable":53,"./airtable.js":53,"./anydo":54,"./anydo.js":54,"./asana":55,"./asana.js":55,"./assembla":56,"./assembla.js":56,"./atlassian":57,"./atlassian.js":57,"./axosoft":58,"./axosoft.js":58,"./backlog":59,"./backlog.js":59,"./basecamp":60,"./basecamp.js":60,"./bitbucket":61,"./bitbucket.js":61,"./bitrix24":62,"./bitrix24.js":62,"./breeze":63,"./breeze.js":63,"./brokerengine":64,"./brokerengine.js":64,"./bugherd":65,"./bugherd.js":65,"./bugsnag":66,"./bugsnag.js":66,"./bugzilla":67,"./bugzilla.js":67,"./capsulecrm":68,"./capsulecrm.js":68,"./clickup":69,"./clickup.js":69,"./cloudes.me":70,"./cloudes.me.js":70,"./clubhouse":71,"./clubhouse.js":71,"./codeable":72,"./codeable.js":72,"./codebase":73,"./codebase.js":73,"./corgee":74,"./corgee.js":74,"./crowdin":75,"./crowdin.js":75,"./desk.com":76,"./desk.com.js":76,"./devdocs.io":77,"./devdocs.io.js":77,"./dixa":78,"./dixa.js":78,"./dobambam":79,"./dobambam.js":79,"./doit":80,"./doit.js":80,"./dokuwiki":81,"./dokuwiki.js":81,"./dom-integration":82,"./dom-integration.js":82,"./draftin":83,"./draftin.js":83,"./dropbox-paper":84,"./dropbox-paper.js":84,"./drupal":85,"./drupal.js":85,"./dynamics-365":86,"./dynamics-365.js":86,"./eproject.me":87,"./eproject.me.js":87,"./esa.io":88,"./esa.io.js":88,"./eventum":89,"./eventum.js":89,"./evernote":90,"./evernote.js":90,"./fastmail":91,"./fastmail.js":91,"./feedly":92,"./feedly.js":92,"./fibery":93,"./fibery.js":93,"./focuster":94,"./focuster.js":94,"./fogbugz":95,"./fogbugz.js":95,"./force":96,"./force.js":96,"./freshdesk":97,"./freshdesk.js":97,"./gemini":98,"./gemini.js":98,"./getflow":99,"./getflow.js":99,"./gingkoapp":100,"./gingkoapp.js":100,"./gitea":101,"./gitea.js":101,"./github":102,"./github.js":102,"./gitlab":103,"./gitlab.js":103,"./gogs":104,"./gogs.js":104,"./google-calendar":105,"./google-calendar.js":105,"./google-classroom":106,"./google-classroom.js":106,"./google-docs":107,"./google-docs.js":107,"./google-inbox":108,"./google-inbox.js":108,"./google-keep":109,"./google-keep.js":109,"./google-mail":110,"./google-mail.js":110,"./gqueues":111,"./gqueues.js":111,"./habitica":112,"./habitica.js":112,"./heflo":113,"./heflo.js":113,"./helprace":114,"./helprace.js":114,"./helpscout":115,"./helpscout.js":115,"./husky-marketing-planner":116,"./husky-marketing-planner.js":116,"./intercom":117,"./intercom.js":117,"./kanbanist":118,"./kanbanist.js":118,"./kanboard":119,"./kanboard.js":119,"./kantree":120,"./kantree.js":120,"./khanacademy":121,"./khanacademy.js":121,"./liquidplanner":122,"./liquidplanner.js":122,"./liveagent":123,"./liveagent.js":123,"./manageengine":124,"./manageengine.js":124,"./mantishub":125,"./mantishub.js":125,"./meistertask":126,"./meistertask.js":126,"./microsoft-planner":127,"./microsoft-planner.js":127,"./microsoft-to-do":128,"./microsoft-to-do.js":128,"./minicrm":129,"./minicrm.js":129,"./newsletter2go":130,"./newsletter2go.js":130,"./notion":131,"./notion.js":131,"./nozbe":132,"./nozbe.js":132,"./odoo":133,"./odoo.js":133,"./onlyoffice":134,"./onlyoffice.js":134,"./onshape":135,"./onshape.js":135,"./openproject":136,"./openproject.js":136,"./osticket":137,"./osticket.js":137,"./outlook":138,"./outlook.js":138,"./pagerduty":139,"./pagerduty.js":139,"./phabricator":140,"./phabricator.js":140,"./pivotaltracker":141,"./pivotaltracker.js":141,"./placker":142,"./placker.js":142,"./planbox":143,"./planbox.js":143,"./podio":144,"./podio.js":144,"./processwire":145,"./processwire.js":145,"./produck":146,"./produck.js":146,"./protonmail":147,"./protonmail.js":147,"./proworkflow":148,"./proworkflow.js":148,"./rallydev":149,"./rallydev.js":149,"./redbooth":150,"./redbooth.js":150,"./redmine":151,"./redmine.js":151,"./rememberthemilk":152,"./rememberthemilk.js":152,"./reviewboard":153,"./reviewboard.js":153,"./rindle":154,"./rindle.js":154,"./rollbar":155,"./rollbar.js":155,"./salesforce":156,"./salesforce.js":156,"./scrapbox":157,"./scrapbox.js":157,"./sentry":158,"./sentry.js":158,"./sherpadesk":159,"./sherpadesk.js":159,"./shortcut":160,"./shortcut.js":160,"./sifterapp":161,"./sifterapp.js":161,"./slack":162,"./slack.js":162,"./sourcelair":163,"./sourcelair.js":163,"./spidergap":164,"./spidergap.js":164,"./sprintly":165,"./sprintly.js":165,"./taiga":166,"./taiga.js":166,"./targetprocess":167,"./targetprocess.js":167,"./teamleader":168,"./teamleader.js":168,"./teamwork":169,"./teamwork.js":169,"./ticktick":170,"./ticktick.js":170,"./todoist":171,"./todoist.js":171,"./toggl":172,"./toggl-plan":173,"./toggl-plan.js":173,"./toggl.js":172,"./toodledo":174,"./toodledo.js":174,"./trac":175,"./trac.js":175,"./trello":176,"./trello.js":176,"./unfuddle":177,"./unfuddle.js":177,"./versionone":178,"./versionone.js":178,"./visualstudio":179,"./visualstudio.js":179,"./vivifyscrum":180,"./vivifyscrum.js":180,"./wordpress":181,"./wordpress.js":181,"./workast":182,"./workast.js":182,"./workflowy":183,"./workflowy.js":183,"./workfront":184,"./workfront.js":184,"./worksection":185,"./worksection.js":185,"./wrike":186,"./wrike.js":186,"./xero":187,"./xero.js":187,"./youtrack":188,"./youtrack.js":188,"./zammad":189,"./zammad.js":189,"./zendesk":190,"./zendesk.js":190,"./zenhub":191,"./zenhub.js":191,"./zoho-books":192,"./zoho-books.js":192,"./zube":193,"./zube.js":193};function r(e){var t=i(e);return n(t)}function i(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}r.keys=function(){return Object.keys(o)},r.resolve=i,e.exports=r,r.id=363},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t);var o=n(2),r=n.n(o),i=n(6),s=n(7);var a=n(10);const l=window.indexedDB,c=()=>new Promise((e,t)=>{const n=l.open("TogglExtension",2);n.onupgradeneeded=()=>{const e=n.result;e.objectStoreNames.contains("LocalData")||(console.log("Creating IDB Object Store"),e.createObjectStore("LocalData",{keyPath:"id"}))},n.onsuccess=()=>{e(n.result)},n.onerror=t}),u="TogglButton-origins",d={startAutomatically:!1,stopAutomatically:!1,showRightClickButton:!0,customIntegrations:{},darkMode:window.matchMedia("(prefers-color-scheme: dark)").matches,developmentMode:!1,showPostPopup:!0,nannyCheckEnabled:!1,nannyInterval:36e5,nannyFromTo:"09:00-17:00",idleDetectionEnabled:!1,pomodoroModeEnabled:!1,pomodoroSoundFile:"sounds/time_is_up_1.mp3",pomodoroSoundEnabled:!0,pomodoroSoundVolume:1,pomodoroStopTimeTrackingWhenTimerEnds:!0,pomodoroTickerEnabled:!1,pomodoroTickerFile:"sounds/tick-tock.mp3",pomodoroTickerVolume:1,pomodoroInterval:25,stopAtDayEnd:!1,dayEndTime:"17:00",defaultProject:0,rememberProjectPer:"false",enableAutoTagging:!1,sendErrorReports:!0,sendUsageStatistics:!0},m={[u]:!0,timeEntriesTracked:!0,dismissedReviewPrompt:!0,customIntegrations:!0};function g(e){return m[e]||!1}function p(e){return e.file?e.file:(e.name||e).toLowerCase().replace(" ","-")+".js"}const f=e=>void 0!==e?"false"===e||"true"===e?JSON.parse(e):e:null;var b=n(356),h=n.n(b);let k=localStorage.getItem("GA:clientID");var y=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{l(o.next(e))}catch(e){i(e)}}function a(e){try{l(o.throw(e))}catch(e){i(e)}}function l(e){e.done?r(e.value):new n((function(t){t(e.value)})).then(s,a)}l((o=o.apply(e,t||[])).next())}))};class v{static instance(e,t,n=!1){return y(this,void 0,void 0,(function*(){const o=new AudioContext,r=o.createGain(),i=o.createBufferSource();return r.gain.value=t,r.connect(o.destination),i.connect(r),i.loop=n,i.buffer=yield new Promise((t,n)=>y(this,void 0,void 0,(function*(){let r=yield v.getAudioBuffer(e);o.decodeAudioData(r,e=>t(e),e=>n(e))}))),{play:()=>i.start(0),stop:()=>(i.stop(0),o.close())}}))}static getAudioBuffer(e){return y(this,void 0,void 0,(function*(){let t=r.a.runtime.getURL(e),n=yield fetch(t);return yield n.arrayBuffer()}))}}var T=v,j=n(25);let w=0;const x=-1===navigator.userAgent.indexOf("Chrome");function E(){return e=0,t=60,Math.floor(Math.random()*(t-e+1))+e;var e,t}function C(e){return function(t){try{if(Array.isArray(t)&&t.length&&t[0].url.match("https?://"))return e(t)}catch(e){Object(s.f)(e)}}}window.TogglButton={$user:null,$curEntry:null,$latestStoppedEntry:null,$ApiUrl:"https://track.toggl.com/api",$ApiV8Url:"https://track.toggl.com/api/v8",$ApiV9Url:"https://track.toggl.com/api/v9",$sendResponse:null,websocket:{socket:null,retryCount:0},$nannyTimer:null,$lastSyncDate:null,$lastWork:{id:null,date:Date.now()},$checkingUserState:!1,checkingWorkdayEnd:!1,pomodoroAlarm:null,pomodoroProgressTimer:null,$ticker:null,pomodoroInterval:null,pomodoroFocusMode:null,localEntry:null,$userState:"active",$fullVersion:"TogglButton/2.0.18",$version:"2.0.18",queue:[],$editForm:'<div id="toggl-button-edit-form"><form autocomplete="off"><a class="toggl-button toggl-button-edit-form-button {service} active" href="javascript:void(0)">'+j.a+'<span>Stop timer</span></a><a id="toggl-button-hide"></a><div class="TB__Dialog__field" id="toggl-button-duration-row">\n      <div>\n        <input name="toggl-button-duration" type="text" id="toggl-button-duration" class="TB__Input" value="" placeholder="00:00" autocomplete="off">\n      </div>\n    </div><div class="TB__Dialog__field">\n      <div><input name="toggl-button-description" type="text" id="toggl-button-description" class="TB__Input" value="" placeholder="What are you doing?" autocomplete="off" /></div>\n    </div>\n    <div class="TB__Dialog__field" tabindex="0">\n      <div>\n        <div id="toggl-button-project-placeholder" class="TB__FormFieldTrigger__trigger" disabled><span class="tb-project-bullet"><div>No project</div></span><span class="TB__Popdown__caret"></span></div>\n        <div class="TB__Popdown__overlay"></div>\n        <div class="TB__Popdown__content">\n          <div class="TB__Popdown__filterContainer">\n            <input name="toggl-button-project-filter" type="text" id="toggl-button-project-filter" class="TB__Popdown__filter" value="" placeholder="Find project..." autocomplete="off">\n          </div>\n          <div id="project-autocomplete">{projects}</div>\n        </div>\n      </div>\n    </div>\n    \n    <div class="TB__Dialog__field" tabindex="0">\n      <div>\n        <div id="toggl-button-tag-placeholder" class="TB__FormFieldTrigger__trigger" disabled><div>Add tags</div><span class="TB__Popdown__caret"></span></div>\n        <div class="TB__Popdown__overlay"></div>\n        <div class="TB__Popdown__content">\n          <div class="TB__Popdown__filterContainer">\n            <input name="toggl-button-tag-filter" type="text" id="toggl-button-tag-filter" class="TB__Popdown__filter" value="" placeholder="Find tags..." autocomplete="off">\n          </div>\n          <div id="tag-autocomplete">\n            <div class="tag-clear">Clear selected tags</div>\n            <a href="javascript:void(0)" class="add-new-tag">+ Add tag "<span></span>"</a>\n            {tags}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="TB__Dialog__field"><div class="tb-billable {billable}"><div class="toggl-button-billable-label">Billable</div><div class="toggl-button-billable-flag"><span></span></div></div></div>\n      <div class="tb-actions-button-group">\n        <button type="button" id="toggl-button-update" tabindex="0" class="TB__Button__button">Done</button>\n      </div>\n      <div class="tb-actions-button-group">\n        <button type="button" id="tb-edit-form-cancel" tabindex="0" class="TB__Secondary__button">Cancel</button>\n        <button type="button" id="toggl-button-delete" tabindex="0" class="TB__Button__button danger">Delete</button>\n      </div>\n    <input type="submit" class="toggl-button-hidden"></form></div>',fetchUser:function(e){return i.a.leaveBreadcrumb("Fetching user with related data"),new Promise((t,n)=>{TogglButton.ajax("/me?with_related_data=true",{token:e,baseUrl:TogglButton.$ApiV8Url,onLoad:async function(e){let n;const o={},a={},l={};let c=null,u=null;try{if(200===e.status){if(r.a.tabs.query({active:!0,currentWindow:!0}).then(C((function(e){r.a.tabs.sendMessage(e[0].id,{type:"sync"}).catch(e=>{if("Could not establish connection. Receiving end does not exist."!==e.message)throw new Error(e)})}))),n=JSON.parse(e.responseText),n.data.projects&&n.data.projects.forEach((function(e){e.active&&!e.server_deleted_at&&n.data.workspaces.find(t=>t.id===e.wid)&&(o[e.name+e.id]=e)})),n.data.clients&&n.data.clients.forEach((function(e){n.data.workspaces.find(t=>t.id===e.wid)&&(a[e.id]=e,l[e.name.toLowerCase()+e.id]=e)})),n.data.tasks&&(c={},n.data.tasks.forEach((function(e){const t=e.pid;c[t]||(c[t]=[]),c[t].push(e)}))),n.data.time_entries){const{time_entries:e}=n.data;u=e.find(e=>e.duration<0)||null}if(TogglButton.hasWorkspaceBeenRevoked(n.data.workspaces)&&TogglButton.showRevokedWSView(),TogglButton.updateTriggers(u),TogglButton.$user=n.data,TogglButton.$user.time_entries=(TogglButton.$user.time_entries||[]).map(e=>({...e,pid:e.pid||null,tid:e.tid||null})),await Promise.all([db.setLocal(TogglButton.$user.id+"-projects",o),db.setLocal(TogglButton.$user.id+"-clients",a)]),TogglButton.$user.projectMap=o,TogglButton.$user.clientMap=a,TogglButton.$user.clientNameMap=l,TogglButton.$user.projectTaskList=c,!TogglButton.$user.default_wid){const e=TogglButton.$user.workspaces[0];TogglButton.$user.default_wid=e.id}localStorage.setItem("userToken",n.data.api_token),t({success:200===e.status}),TogglButton.setBrowserActionBadge(),TogglButton.setupSocket(),TogglButton.updateBugsnag(),TogglButton.handleQueue(),TogglButton.setCanSeeBillable(),ga.reportOs()}else 403!==e.status&&i.a.notify(new Error("Fetch user failed "+e.status),t=>{t.addMetadata("general",{status:e.status,responseText:e.responseText})}),TogglButton.setBrowserActionBadge(),t({success:!1,type:"login",error:"Fetch user failed "+e.status})}catch(e){Object(s.f)(e)}},onError:function(e){TogglButton.setBrowserActionBadge(),t({success:!1,type:"login",error:"Connectivity error"})}})})},handleQueue:function(){for(;TogglButton.queue.length;)TogglButton.queue.shift()()},updateBugsnag:function(){i.a.setUser({id:TogglButton.$user.id})},setCanSeeBillable:function(){let e,t,n=!1;for(t in TogglButton.$user.workspaces)if(TogglButton.$user.workspaces.hasOwnProperty(t)&&(e=TogglButton.$user.workspaces[t],e.premium)){n=!0;break}TogglButton.canSeeBillable=n},setupSocket:function(){if(TogglButton.websocket.socket&&TogglButton.websocket.socket.readyState!==WebSocket.CLOSED)return;try{TogglButton.websocket.socket=new WebSocket(Object.assign(new URL("/stream","https://track.toggl.com/api"),{protocol:"wss:"}).href)}catch(e){return i.a.notify(e,e=>{e.context="websocket"}),void TogglButton.retryWebsocketConnection()}const e={type:"authenticate",api_token:TogglButton.$user.api_token},t=JSON.stringify({type:"pong"});TogglButton.websocket.socket.onopen=function(){TogglButton.resetWebsocketRetryCount();const t=JSON.stringify(e);try{return TogglButton.websocket.socket.send(t)}catch(e){0,i.a.notify(e,e=>{e.context="websocket"})}},TogglButton.websocket.socket.onerror=function(e){return console.error("Websocket error: ",e)},TogglButton.websocket.socket.onclose=function(){i.a.leaveBreadcrumb("Websocket connection closed"),TogglButton.retryWebsocketConnection()},TogglButton.websocket.socket.onmessage=function(e){if(!e.data)return;const n=JSON.parse(e.data);if(null!==n.model)"time_entry"===n.model&&TogglButton.updateCurrentEntry(n);else if(null!==TogglButton.websocket.socket)try{TogglButton.websocket.socket.send(t)}catch(e){0,i.a.notify(e,e=>{e.context="websocket"})}}},retryWebsocketConnection:function(){const e=(t=TogglButton.websocket.retryCount,Math.min(15*Math.pow(2,t)+E(),3600));var t;setTimeout(()=>{TogglButton.websocket.retryCount++,TogglButton.setupSocket(),i.a.leaveBreadcrumb("Websocket reconnection attempt "+TogglButton.websocket.retryCount)},1e3*e)},resetWebsocketRetryCount:function(){TogglButton.websocket.retryCount=0},updateTriggers:function(e){const t=!!TogglButton.localEntry&&!!e&&TogglButton.localEntry.id===e.id;TogglButton.$curEntry=e,e?(t&&(TogglButton.checkPomodoroAlarm(e),clearTimeout(TogglButton.$nannyTimer),TogglButton.$nannyTimer=null),t||(r.a.browserAction.setIcon({path:{19:"images/icon-19.png",38:"images/icon-38.png"}}),TogglButton.clearPomdoroAnimation())):(TogglButton.clearPomdoroAnimation(),r.a.browserAction.setIcon({path:{19:"images/inactive-19.png",38:"images/inactive-38.png"}})),TogglButton.startCheckingDayEnd(!!e),TogglButton.toggleCheckingUserState(!!e),TogglButton.setBrowserAction(e)},updateCurrentEntry:async function(e){let t=e.data;const n=await db.get("rememberProjectPer");if(n){const e=await db.getDefaultProject();t.pid===e?null!==e&&db.setDefaultProject(null,"service"===n?TogglButton.$curService:TogglButton.$curURL):t.pid!==e&&db.setDefaultProject(t.pid,"service"===n?TogglButton.$curService:TogglButton.$curURL)}"INSERT"===e.action?TogglButton.updateTriggers(t):"UPDATE"!==e.action||null!==TogglButton.$curEntry&&t.id!==TogglButton.$curEntry.id?"delete"===e.action&&null!==TogglButton.$curEntry&&TogglButton.$curEntry.id===t.id&&(TogglButton.$latestStoppedEntry=t,TogglButton.updateTriggers(null)):(t.duration>=0&&(TogglButton.$latestStoppedEntry=t,TogglButton.updateEntriesDb(),t=null),TogglButton.updateTriggers(t))},updateEntriesDb:function(){let e,t,n=!1;if(TogglButton.$user){if(TogglButton.$latestStoppedEntry&&(TogglButton.$latestStoppedEntry.pid=TogglButton.$latestStoppedEntry.pid||TogglButton.$latestStoppedEntry.project_id||null,TogglButton.$latestStoppedEntry.tid=TogglButton.$latestStoppedEntry.tid||TogglButton.$latestStoppedEntry.task_id||null),TogglButton.$user.time_entries&&Object.keys(TogglButton.$user.time_entries).length)for(e in TogglButton.$user.time_entries)TogglButton.$user.time_entries.hasOwnProperty(e)&&(t=TogglButton.$user.time_entries[e],t.id===TogglButton.$latestStoppedEntry.id&&(TogglButton.$user.time_entries[e]=TogglButton.$latestStoppedEntry,n=!0));else TogglButton.$user.time_entries=[];n||TogglButton.$user.time_entries.push(TogglButton.$latestStoppedEntry)}else TogglButton.fetchUser()},findProjectByName:function(e){let t,n;const o=[].concat(e);let r,i;for(i=0;i<o.length;i++)for(t in n=o[i],TogglButton.$user.projectMap)if(TogglButton.$user.projectMap.hasOwnProperty(t)&&TogglButton.$user.projectMap[t].name===n&&(r=TogglButton.$user.projectMap[t],r.wid===TogglButton.$user.default_wid))return r;return r},findProjectByPid:function(e){let t;for(t in TogglButton.$user.projectMap)if(TogglButton.$user.projectMap.hasOwnProperty(t)&&TogglButton.$user.projectMap[t].id===e)return TogglButton.$user.projectMap[t]},createTimeEntry:async function(e){const t=e.type,n=e.container,o=new Date;let r;const i=await db.get("rememberProjectPer"),a=await db.get("enableAutoTagging");let l,c,u="";if(TogglButton.$curService=(e||{}).service,TogglButton.$curURL=(e||{}).url,r=i?await db.getDefaultProject("service"===i?TogglButton.$curService:TogglButton.$curURL):await db.getDefaultProject(),!e)return new Promise(e=>{e({success:!1,type:"New Entry"})});const d=a||"list-continue"===t||"resume"===t||"idle-detection-notification-continue"===t;return l={start:o.toISOString(),stop:null,duration:-parseInt(o.getTime()/1e3,10),description:e.description||"",pid:e.pid||e.projectId||null,tid:e.tid||null,wid:e.wid||TogglButton.$user.default_wid,tags:d&&e.tags||null,billable:e.billable||!1,created_with:e.createdWith||TogglButton.$fullVersion},null===e.projectName||l.pid||(c=TogglButton.findProjectByName(e.projectName),l.pid=c&&c.id||null,l.billable=c&&c.billable,l.wid=c&&c.wid||l.wid),!l.pid&&r&&(c=TogglButton.findProjectByPid(r),l.pid=c&&c.id||null,l.billable=c&&c.billable,l.wid=c&&c.wid||l.wid),new Promise(t=>{TogglButton.ajax("/time_entries",{method:"POST",payload:l,baseUrl:TogglButton.$ApiV9Url,onLoad:async function(o){const r=!!TogglButton.$user&&!!TogglButton.$user.projectTaskList,i=200===o.status;try{if(i?(l=JSON.parse(o.responseText),TogglButton.localEntry=l,TogglButton.updateTriggers(l),ga.reportEvent(e.type,e.service),db.bumpTrackedCount()):u=o.responseText,e.respond){const e=await db.get("showPostPopup"),o=await db.get("darkMode");t({success:i,type:"New Entry",entry:l,showPostPopup:e,html:TogglButton.getEditForm(),container:n,hasTasks:r,darkMode:o,error:u})}else t({success:!0})}catch(e){Object(s.f)(e)}},onError:function(e){t({success:!1,type:"New Entry"})}})})},latestEntry:function(){const e=TogglButton.$user.time_entries||[null];return e[e.length-1]},checkPomodoroAlarm:function(e){const t=new Date-new Date(e.start);TogglButton.triggerPomodoroAlarm(t)},triggerPomodoroAlarm:async function(e){null!==TogglButton.pomodoroAlarm&&(clearTimeout(TogglButton.pomodoroAlarm),TogglButton.pomodoroAlarm=null,clearInterval(TogglButton.pomodoroProgressTimer));const t=await db.get("pomodoroModeEnabled"),n=await db.get("pomodoroInterval");if(t){let t;TogglButton.startTicker(),TogglButton.pomodoroFocusMode=await db.get("pomodoroFocusMode");const o=6e4*parseInt(n,10);if(TogglButton.pomodoroInterval=o,e>o)clearTimeout(TogglButton.pomodoroAlarm),TogglButton.pomodoroAlarm=null,clearInterval(TogglButton.pomodoroProgressTimer),t=TogglButton.updatePomodoroProgress(0,0,0);else{const r=o-e||o,i=120,s=(o-r)/o;TogglButton.pomodoroInterval=n,t=TogglButton.updatePomodoroProgress(r,i,s),TogglButton.pomodoroAlarm=setTimeout(TogglButton.pomodoroAlarmStop,r),TogglButton.pomodoroProgressTimer=setInterval(t,o/i)}r.a.runtime.sendMessage({type:"bg/render-entries-list"}).catch(e=>{throw new Error(e)}),t()}},updatePomodoroProgress:function(e,t,n){let o=0,i=0;return async function(){let s,a;const l={19:"images/icon-19.png",38:"images/icon-38.png"},c={},u=2*Math.PI,d=.5*Math.PI;let m=0;const g=function(e){return function(){const t=document.createElement("canvas").getContext("2d");t.drawImage(this,0,0),t.beginPath(),t.strokeStyle="#ffffff",t.lineCap="butt",t.closePath(),t.fill(),t.lineWidth=2.5,t.beginPath(),t.arc(.5*this.naturalWidth,.5*this.naturalHeight,.5*this.naturalWidth-1,-1*d,u*o-d,!1),t.stroke(),c[e]=t.getImageData(0,0,this.naturalWidth,this.naturalHeight),++m,2===m&&r.a.browserAction.setIcon({imageData:c})}};i+=e/t,o=i/e+n;if(await db.get("pomodoroModeEnabled"))for(s in l)l.hasOwnProperty(s)&&(a=new Image,a.onload=g(s),a.src=l[s]);else clearInterval(TogglButton.pomodoroProgressTimer),r.a.browserAction.setIcon({path:l})}},ajax:function(e,t){const n=new XMLHttpRequest,o=t.method||"GET",r=(t.baseUrl||TogglButton.$ApiV8Url)+e,i=t.token||TogglButton.$user&&TogglButton.$user.api_token||localStorage.getItem("userToken"),s=t.credentials||null;n.open(o,r,!0),n.setRequestHeader("IsTogglButton","true"),r.match(TogglButton.$ApiUrl)&&(i?n.setRequestHeader("Authorization","Basic "+btoa(i+":api_token")):s&&n.setRequestHeader("Authorization","Basic "+btoa(s.username+":"+s.password))),t.onError&&n.addEventListener("error",(function(){t.onError(n)})),t.onLoad&&n.addEventListener("load",(function(){t.onLoad(n)})),t.mime&&n.overrideMimeType("application/json"),n.send(JSON.stringify(t.payload))},resetPomodoroProgress:function(e){TogglButton.clearPomdoroAnimation(),TogglButton.updateTriggers(e)},clearPomdoroAnimation:function(){TogglButton.stopTicker(),clearTimeout(TogglButton.pomodoroAlarm),TogglButton.pomodoroAlarm=null,clearInterval(TogglButton.pomodoroProgressTimer),TogglButton.pomodoroProgressTimer=null},stopTimeEntryPomodoro:function(e,t,n){return new Promise(async t=>{const n=await db.get("pomodoroInterval"),o=60*parseInt(n,10);if(!TogglButton.$curEntry)return void t();const i={duration:o};TogglButton.ajax("/time_entries/"+TogglButton.$curEntry.id,{method:"PUT",payload:i,baseUrl:TogglButton.$ApiV9Url,onLoad:function(n){200===n.status&&(TogglButton.$latestStoppedEntry=JSON.parse(n.responseText),TogglButton.updateEntriesDb(),TogglButton.resetPomodoroProgress(null),TogglButton.setNannyTimer(),ga.reportEvent(e.type,e.service),t({success:!0,type:"Stop"}),r.a.tabs.query({active:!0,currentWindow:!0}).then(C((function(e){r.a.tabs.sendMessage(e[0].id,{type:"stop-entry",user:TogglButton.$user}).catch(e=>{if("Could not establish connection. Receiving end does not exist."!==e.message)throw new Error(e)})})))),400===n.status&&n.response&&n.response.includes("please add a")&&TogglButton.showUnmetConstraintsNotification(n.response)},onError:function(e){t({success:!1,type:"Update"})}})})},stopTimeEntry:function(e){return new Promise(t=>{if(!TogglButton.$curEntry)return void t();const n=e.stopDate||new Date,o=new Date(1e3*-TogglButton.$curEntry.duration),i={stop:n.toISOString(),duration:Math.floor((n-o)/1e3)};TogglButton.ajax("/time_entries/"+TogglButton.$curEntry.id,{method:"PUT",baseUrl:TogglButton.$ApiV9Url,payload:i,onLoad:function(n){200===n.status&&(TogglButton.$latestStoppedEntry=JSON.parse(n.responseText),TogglButton.updateEntriesDb(),TogglButton.resetPomodoroProgress(null),TogglButton.setNannyTimer(),ga.reportEvent(e.type,e.service),r.a.tabs.query({active:!0,currentWindow:!0}).then(C((function(e){r.a.tabs.sendMessage(e[0].id,{type:"stop-entry",user:TogglButton.$user}).catch(e=>{if("Could not establish connection. Receiving end does not exist."!==e.message)throw new Error(e)})}))),t({success:!0,type:"Stop"})),400===n.status&&n.response&&n.response.includes("please add a")&&TogglButton.showUnmetConstraintsNotification(n.response)},onError:function(e){t({success:!1,type:"Stop"})}})})},showUnmetConstraintsNotification:function(e){const t={type:"basic",iconUrl:"images/icon-128.png",title:"Toggl Track",message:e,priority:2};TogglButton.hideNotification("unmet-constraints"),r.a.notifications.create("unmet-constraints",t)},pomodoroStopTimeTracking:async function(){await db.get("pomodoroStopTimeTrackingWhenTimerEnds")?TogglButton.stopTimeEntryPomodoro({type:"pomodoro-stop",service:"dropdown"}):TogglButton.resetPomodoroProgress(TogglButton.$curEntry)},pomodoroAlarmStop:async function(){if(!await db.get("pomodoroModeEnabled"))return;let e,t="pomodoro-time-is-up";const n=TogglButton.$curEntry&&TogglButton.$curEntry.description?TogglButton.$curEntry.description:"";let o=n.slice(0,30);o.length<n.length&&(o+=".. ");let i="Continue Latest "+(n&&`(${o})`),s="Start New";TogglButton.pomodoroStopTimeTracking();await db.get("pomodoroStopTimeTrackingWhenTimerEnds")||(t="pomodoro-time-is-up-dont-stop",i="Stop timer",s="Stop and Start New");const a={type:"basic",iconUrl:"images/icon-128.png",title:"Toggl Track Browser Extension - Pomodoro Timer",message:"Time is up! Take a break",priority:2};if(x){const e=await db.get("pomodoroStopTimeTrackingWhenTimerEnds");a.message+=e?". Click to continue tracking.":". Click to stop tracking."}else a.requireInteraction=!0,a.buttons=[{title:i},{title:s}];TogglButton.hideNotification(t),r.a.notifications.create(t,a);if(await db.get("pomodoroSoundEnabled")){const t=await db.get("pomodoroSoundFile"),n=await db.get("pomodoroSoundVolume");e=new Audio,e.src=t,e.volume=n,e.play()}},updateTimeEntry:function(e){let t,n,o="";const r=TogglButton.$curEntry&&TogglButton.$curEntry.id===e.id;return new Promise((function(i,a){t={description:e.description,pid:e.pid||null,tags:e.tags,tid:e.tid||null,billable:e.billable,wid:e.wid||TogglButton.$curEntry.wid},e.id?t.id=e.id:t.id=TogglButton.$curEntry.id,t.pid&&(n=TogglButton.findProjectByPid(parseInt(t.pid,10)),t.wid=n&&n.wid),e.start&&(t.start=e.start),r||(t.stop=e.stop),e.duration&&(t.duration=e.duration),TogglButton.ajax("/time_entries/"+t.id,{method:"PUT",payload:t,baseUrl:TogglButton.$ApiV9Url,onLoad:function(n){const a=200===n.status;try{if(a)if(t=JSON.parse(n.responseText),r)TogglButton.$curEntry=t,TogglButton.setBrowserAction(t);else{const n=TogglButton.$user.time_entries.findIndex(t=>t.id===e.id);n&&(TogglButton.$user.time_entries[n]=t)}else o=n.responseText;e.respond?i({success:a,type:"Update",error:o}):i(),ga.reportEvent(e.type,e.service)}catch(e){Object(s.f)(e),i({success:!1,type:"Update"})}},onError:function(e){i({success:!1,type:"Update"})}})}))},deleteTimeEntry:function(e){return new Promise((function(t,n){TogglButton.ajax("/time_entries/"+e.id,{method:"DELETE",baseUrl:TogglButton.$ApiV9Url,onLoad:function(n){const o=200===n.status;if(o){const t=parseInt(e.id,10);TogglButton.$curEntry&&TogglButton.$curEntry.id===t&&(TogglButton.$curEntry=null,TogglButton.updateTriggers(null));const n=TogglButton.$user.time_entries.filter((function(e){return e.id!==t}));TogglButton.$user.time_entries=n}try{t({success:o,type:"delete",id:e.id}),ga.reportEvent(e.type,e.service)}catch(e){Object(s.f)(e),t({success:!1,type:"delete"})}},onError:function(e){t({success:!1,type:"delete"})}})}))},setBrowserActionBadge:function(){let e="";TogglButton.$user||(e="x",TogglButton.setBrowserAction(null)),r.a.browserAction.setBadgeText({text:e})},setBrowserAction:function(e){let t={19:"images/inactive-19.png",38:"images/inactive-38.png"},n=r.a.runtime.getManifest().browser_action.default_title;TogglButton.updatePopup(),TogglButton.pomodoroProgressTimer||(e&&(t={19:"images/icon-16.png",38:"images/icon-38.png"},n=e.description&&e.description.length>0?e.description+" - Toggl":"(no description) - Toggl",r.a.browserAction.setBadgeText({text:""})),r.a.browserAction.setTitle({title:n}),r.a.browserAction.setIcon({path:t}))},setupToken:function(e){try{const t=JSON.parse(e),{api_token:n}=t.data;localStorage.setItem("userToken",n)}catch(t){i.a.notify(new Error("Login token-parse failed"),t=>{t.addMetadata({general:{response:e}})})}},loginUser:function(e){let t;return new Promise((n,o)=>{TogglButton.ajax("/sessions",{method:"POST",onLoad:function(e){200===e.status?(TogglButton.setupToken(e.responseText),TogglButton.fetchUser().then(e=>{TogglButton.refreshPage(),n(e)}).catch(o)):(403===e.status&&(t="Wrong Email or Password!"),i.a.notify(new Error(`Login failed (${e.status})`),t=>{t.addMetadata({general:{status:e.status,responseText:e.responseText}})}),n({success:!1,error:t}))},onError:function(e){n({success:!1,type:"login"})},credentials:{username:e.username,password:e.password}})})},logoutUser:function(){return new Promise(e=>{TogglButton.ajax("/sessions?created_with="+TogglButton.$fullVersion,{method:"DELETE",onLoad:async function(t){TogglButton.$user=null,TogglButton.updateTriggers(null),await db.clearLocal(),localStorage.removeItem("userToken"),e({success:200===t.status,xhr:t}),200===t.status&&TogglButton.setBrowserActionBadge(),TogglButton.refreshPageLogout()},onError:function(t){e({success:!1,type:"logout"})}})})},getEditForm:function(){return TogglButton.$user?TogglButton.$editForm.replace("{projects}",TogglButton.fillProjects()).replace("{tags}",TogglButton.fillTags()).replace("{billable}",TogglButton.setupBillable()):""},setupBillable:function(){return TogglButton.canSeeBillable?'" ':'no-billable" tabindex="-1'},fillProjects:function(){let e='<p class="project-row" data-pid="0"><span class="tb-project-bullet tb-project-color tb-no-color">No project</span></p>';const t=TogglButton.$user.projectMap,n=TogglButton.$user.clientMap,o=TogglButton.$user.clientNameMap,r=TogglButton.$user.workspaces.length>1?"":" hide",i={};let a,l,c=null,u=null;const d=[];let m,g=0;try{for(c in o)o.hasOwnProperty(c)&&d.push(c.toLowerCase());for(d.sort(),TogglButton.$user.workspaces.forEach((function(e,t){i[e.id]={},i[e.id][0]='<ul class="ws-list" data-wid="'+e.id+'" title="'+Object(s.a)(e.name)+'"><li class="ws-row'+r+'" title="'+Object(s.a)(e.name)+'">'+Object(s.a)(e.name)+'</li><ul class="client-list" data-cid="0">'})),m=0;m<d.length;m++)a=o[d[m]],i[a.wid][a.name+a.id]='<ul class="client-list" data-cid="'+a.id+'"><li class="client-row" title="'+Object(s.a)(a.name)+'">'+Object(s.a)(a.name)+"</li>";for(c in t)t.hasOwnProperty(c)&&(l=t[c],g=l.cid&&n[l.cid]?n[l.cid].name+l.cid:0,i[l.wid][g]+=TogglButton.generateProjectItem(l));for(c in i)if(i.hasOwnProperty(c)){for(u in i[c])i[c].hasOwnProperty(u)&&-1!==i[c][u].indexOf("project-row")&&(e+=i[c][u]+"</ul>");e+="</ul>"}}catch(e){Object(s.f)(e)}return e},generateProjectItem:function(e){const t=TogglButton.$user.projectTaskList?TogglButton.$user.projectTaskList[e.id]:null;let n,o;const r=t?"has-tasks":"";let i='<li class="project-row" title="'+Object(s.a)(e.name)+'" data-pid="'+e.id+'"><span class="tb-project-bullet tb-project-color" style="color: '+e.hex_color+'"><span class="item-name '+r+'" title="'+Object(s.a)(e.name)+'">'+Object(s.a)(e.name)+"</span></span>";if(t){for(o=t.length+" task",t.length>1&&(o+="s"),i+='<span class="task-count" title="'+o+'">'+o+"</span>",i+='<ul class="task-list">',n=0;n<t.length;n++)i+='<li class="task-item" data-tid="'+t[n].id+'" title="'+Object(s.a)(t[n].name)+'">'+Object(s.a)(t[n].name)+"</li>";i+="</ul>"}return i+"</li>"},fillTags:function(){return`\n      <ul class="tag-list">\n        ${(TogglButton.$user.tags||[]).sort((e,t)=>e.name.localeCompare(t.name)).map(e=>`\n        <li\n          class="tag-item"\n          data-wid="${Object(s.a)(e.wid)}"\n          title="${Object(s.a)(e.name)}"\n        >\n        ${Object(s.a)(e.name)}\n        </li>\n      `.trim()).join("\n")}\n      </ul>\n    `.trim()},refreshPage:function(){let e;r.a.tabs.query({active:!0,currentWindow:!0}).then(C((async function(t){e=await TogglButton.extractDomain(t[0].url),(e.file||e.code)&&r.a.tabs.reload(t[0].id)})))},refreshPageLogout:function(){r.a.tabs.query({active:!0,currentWindow:!0}).then(C((function(e){r.a.tabs.executeScript(e[0].id,{code:"!!document.querySelector('.toggl-button')"}).then((function(t){t&&t[0]&&r.a.tabs.reload(e[0].id)}))})))},startCheckingUserState:async function(){const e=await db.get("idleDetectionEnabled");!TogglButton.$checkingState&&e&&TogglButton.$curEntry&&(TogglButton.$checkingUserState=setTimeout((function(){r.a.idle.queryState(15).then(TogglButton.onUserState)}),2e3))},stopCheckingUserState:function(){clearTimeout(TogglButton.$checkingUserState),TogglButton.$checkingUserState=!1},toggleCheckingUserState:function(e){e?TogglButton.startCheckingUserState():TogglButton.stopCheckingUserState()},timeStringFromSeconds:function(e){let t=0,n=0,o=0;return n=Math.floor(e/60),t=e%60,o=Math.floor(n/60),n%=60,o>0?o+"h "+n+"m":n>0?n+"m "+t+"s":t+"s"},showIdleDetectionNotification:function(e){const t={type:"basic",iconUrl:"images/icon-128.png",title:"Toggl Track",message:"You've been idle for "+TogglButton.timeStringFromSeconds(e)+' while tracking "'+(TogglButton.$curEntry.description||"(no description)")+'"'};x?t.message+=". Click to discard time.":t.buttons=[{title:"Discard idle time"},{title:"Discard idle and continue"}],TogglButton.$idleNotificationDiscardSince=TogglButton.$lastWork.date,TogglButton.hideNotification("idle-detection"),r.a.notifications.create("idle-detection",t)},updateLastWork:e=>{TogglButton.$lastWork={id:TogglButton.$curEntry.id,date:e||new Date}},onUserState:function(e){TogglButton.$userState=e;const t=new Date,n=Math.floor((t-TogglButton.$lastWork.date)/1e3);TogglButton.$user&&(e=>"locked"!==e)(e)&&TogglButton.$curEntry&&(TogglButton.$lastWork.id===TogglButton.$curEntry.id&&((e,t)=>"active"===e&&t>300||"idle"===e&&t>0&&t%300==0)(e,n)&&(TogglButton.showIdleDetectionNotification(n),TogglButton.updateLastWork(TogglButton.$lastWork.date)),"active"===e&&TogglButton.updateLastWork()),clearTimeout(TogglButton.$checkingUserState),TogglButton.$checkingUserState=null,TogglButton.startCheckingUserState()},checkState:function(){r.a.idle.queryState(15).then(TogglButton.checkActivity)},checkActivity:async function(e){let t,n="Open toggl.com";clearTimeout(TogglButton.$nannyTimer),TogglButton.$nannyTimer=null,TogglButton.$latestStoppedEntry&&TogglButton.$latestStoppedEntry.description&&(n="Continue ("+TogglButton.$latestStoppedEntry.description+")");const o=await db.get("nannyCheckEnabled"),i=await TogglButton.isDuringWorkHours();TogglButton.$user&&"active"===e&&o&&i&&null===TogglButton.$curEntry&&(t={type:"basic",iconUrl:"images/icon-128.png",title:"Toggl Track",message:"Don't forget to track your time!"},x?t.message+=" Click to start timer.":t.buttons=[{title:"Start timer"},{title:n}],r.a.notifications.create("remind-to-track-time",t))},startCheckingDayEnd:function(e){clearInterval(TogglButton.checkingWorkdayEnd),e&&(TogglButton.checkingWorkdayEnd=setInterval(TogglButton.checkWorkDayEnd,3e4))},checkWorkDayEnd:async function(){if(!TogglButton.$curEntry)return;const e=await db.get("stopAtDayEnd"),t=await TogglButton.workdayEnded();if(TogglButton.$user&&e&&TogglButton.$curEntry&&t){let e="Continue";TogglButton.$curEntry.description?e+=" ("+TogglButton.$curEntry.description+")":e+=" latest";const t={type:"basic",iconUrl:"images/icon-128.png",title:"Toggl Track",message:"Your workday is over, running entry has been stopped"};x?t.message+=". Click to continue latest.":t.buttons=[{title:e}],TogglButton.stopTimeEntry(TogglButton.$curEntry),r.a.notifications.create("workday-ended-notification",t)}},workdayEnded:async function(){if(!TogglButton.$curEntry)return!1;const e=new Date(TogglButton.$curEntry.start),t=new Date,n=new Date,o=(await db.get("dayEndTime")).split(":");return n.setHours(o[0]),n.setMinutes(o[1]),n.setSeconds(0),t>=n&&n>e},notificationBtnClick:function(e,t){let n="dropdown-pomodoro",o=TogglButton.$curEntry,i="start_new",s="reminder";"remind-to-track-time"===e?(n="dropdown-reminder",0===t?TogglButton.createTimeEntry({type:"timeEntry",service:n}):(o=TogglButton.$latestStoppedEntry,o&&o.description?(o.type="timeEntry",o.service=n,TogglButton.createTimeEntry(o),i="continue"):(r.a.tabs.create({url:"https://toggl.com/app/"}),i="go_to_web"))):"idle-detection"===e?(0!==t&&1!==t||(i="discard",TogglButton.stopTimeEntry({stopDate:TogglButton.$idleNotificationDiscardSince,type:"idle-detection-notification"}).then(()=>{1===t&&(o.type="idle-detection-notification-continue",TogglButton.createTimeEntry(o),i="discard_continue")})),s="idle"):"pomodoro-time-is-up"===e?(0===t?(o=TogglButton.$latestStoppedEntry,o?(o.type="timeEntry",o.service=n):o={type:"timeEntry",service:n},TogglButton.createTimeEntry(o),i="continue"):TogglButton.createTimeEntry({type:"timeEntry",service:n}),s="pomodoro"):"workday-ended-notification"===e?(0===t&&(o=TogglButton.$latestStoppedEntry,o?(o.type="timeEntry",o.service=n):o={type:"timeEntry",service:n},TogglButton.createTimeEntry(o),i="continue"),s="workday-end"):"pomodoro-time-is-up-dont-stop"===e&&(0===t?TogglButton.stopTimeEntry(TogglButton.$curEntry):TogglButton.createTimeEntry({type:"timeEntry",service:n}),s="pomodoro"),x||TogglButton.onNotificationClicked(e),ga.reportEvent(s,i)},isDuringWorkHours:async function(){try{const e=new Date,t=(await db.get("nannyFromTo")).split("-");if(6===e.getDay()||0===e.getDay())return!1;const n=t[0].split(":"),o=t[1].split(":"),r=new Date;r.setHours(n[0]),r.setMinutes(n[1]);const i=new Date;return i.setHours(o[0]),i.setMinutes(o[1]),e>r&&e<=i}catch(e){return i.a.notify(e),!1}},setNannyTimer:async function(){if(null===TogglButton.$nannyTimer&&null===TogglButton.$curEntry){TogglButton.hideNotification("remind-to-track-time");const e=await db.get("nannyInterval");TogglButton.$nannyTimer=setTimeout(TogglButton.checkState,e)}},onNotificationClicked:function(e){x&&TogglButton.notificationBtnClick(e,0),"remind-to-track-time"===e?TogglButton.setNannyTimer():TogglButton.hideNotification(e)},onNotificationClosed:function(e){"remind-to-track-time"===e?TogglButton.setNannyTimer():TogglButton.hideNotification(e)},hideNotification:function(e){r.a.notifications.clear(e)},checkDailyUpdate:function(){const e=new Date,t=e.getDate()+"-"+e.getMonth()+"-"+e.getFullYear();null!==TogglButton.$lastSyncDate&&TogglButton.$lastSyncDate===t||(TogglButton.fetchUser(),TogglButton.$lastSyncDate=t)},updatePopup:function(){const e=r.a.extension.getViews({type:"popup"});e&&e.length&&e[0].PopUp&&e[0].PopUp.showPage()},showRevokedWSView:function(){const e=r.a.extension.getViews({type:"popup"});if(e&&e.length&&e[0].PopUp){const t=e[0].PopUp;t.switchView(t.$revokedWorkspaceView)}},calculateSums:function(){const e=new Date;let t=0,n=0;const o=TogglButton.$user.time_entries||[];e.setHours(0),e.setMinutes(0),e.setSeconds(0);const r=new Date;r.setHours(0,0,0,0);const i=function(e){const t=TogglButton.$user.beginning_of_week,n=e.getDay(),o=e.getDate()-n+(t>n?t-7:t);return new Date(e.setDate(o))}(e);return o.forEach((function(e){new Date(e.start).getTime()>r.getTime()&&(e.duration<0?t+=(new Date-new Date(e.start))/1e3:t+=e.duration),new Date(e.start).getTime()>i.getTime()&&(e.duration<0?n+=(new Date-new Date(e.start))/1e3:n+=e.duration)})),{today:Object(s.g)(t),week:Object(s.g)(n)}},contextMenuClick:function(e,t){TogglButton.createTimeEntry({type:"timeEntry",service:"contextMenu",description:e.selectionText||t.title})},newMessage:function(e){return new Promise(async t=>{let n,o;try{if("toggle-popup"===e.type)db.set("showPostPopup",e.state);else if("toggle-nanny"===e.type)db.updateSetting("nannyCheckEnabled",e.state,db.togglButton.setNannyTimer);else if("toggle-nanny-from-to"===e.type){const t=await db.get("nannyCheckEnabled");db.updateSetting("nannyFromTo",e.state,db.togglButton.setNannyTimer,t)}else if("toggle-nanny-interval"===e.type){const t=await db.get("nannyCheckEnabled");db.updateSetting("nannyInterval",Math.max(e.state,1e3),db.togglButton.setNannyTimer,t)}else if("toggle-idle"===e.type)db.updateSetting("idleDetectionEnabled",e.state,db.togglButton.startCheckingUserState);else if("toggle-pomodoro"===e.type)db.set("pomodoroModeEnabled",e.state);else if("toggle-pomodoro-focus-mode"===e.type)db.set("pomodoroFocusMode",e.state);else if("toggle-pomodoro-sound"===e.type)db.set("pomodoroSoundEnabled",e.state);else if("toggle-pomodoro-interval"===e.type)db.updateSetting("pomodoroInterval",e.state);else if("toggle-pomodoro-stop-time"===e.type)db.set("pomodoroStopTimeTrackingWhenTimerEnds",e.state);else if("update-pomodoro-sound-volume"===e.type)db.set("pomodoroSoundVolume",e.state);else if("toggle-right-click-button"===e.type)db.updateSetting("showRightClickButton",e.state);else if("toggle-dark-mode"===e.type)db.updateSetting("darkMode",e.state);else if("toggle-start-automatically"===e.type)db.updateSetting("startAutomatically",e.state);else if("toggle-stop-automatically"===e.type)db.updateSetting("stopAutomatically",e.state);else if("toggle-stop-at-day-end"===e.type)db.updateSetting("stopAtDayEnd",e.state),db.togglButton.startCheckingDayEnd(e.state);else if("toggle-day-end-time"===e.type)db.updateSetting("dayEndTime",e.state);else if("change-default-project"===e.type)db.updateSetting(db.togglButton.$user.id+"-defaultProject",e.state);else if("change-remember-project-per"===e.type)db.updateSetting("rememberProjectPer",e.state),db.resetDefaultProjects();else if("update-send-usage-statistics"===e.type)db.updateSetting("sendUsageStatistics",e.state);else if("update-send-error-reports"===e.type)db.updateSetting("sendErrorReports",e.state);else if("update-enable-auto-tagging"===e.type)db.updateSetting("enableAutoTagging",e.state);else if("settings-reset"===e.type)TogglButton.logoutUser(),t();else if("activate"===e.type){TogglButton.checkDailyUpdate(),TogglButton.setBrowserActionBadge();const e=await db.getDefaultProject();t({success:null!==TogglButton.$user,user:TogglButton.$user,version:TogglButton.$fullVersion,defaults:{project:e}}),TogglButton.setNannyTimer()}else if("login"===e.type)TogglButton.loginUser(e).then(e=>{t(e)}).catch(()=>t(void 0));else if("logout"===e.type)TogglButton.logoutUser().then(t);else if("sync"===e.type){const n=await TogglButton.fetchUser();t(e.respond?n:void 0)}else"timeEntry"===e.type?TogglButton.createTimeEntry(e).then(e=>{TogglButton.hideNotification("remind-to-track-time"),t(e)}):"list-continue"===e.type?(TogglButton.createTimeEntry({...e.data,respond:e.respond,type:e.type}).then(t),TogglButton.hideNotification("remind-to-track-time")):"resume"===e.type?(TogglButton.createTimeEntry({...TogglButton.$latestStoppedEntry,type:"resume"}).then(t),TogglButton.hideNotification("remind-to-track-time")):"delete"===e.type?TogglButton.deleteTimeEntry(e).then(t):"update"===e.type?TogglButton.updateTimeEntry(e).then(t):"stop"===e.type?TogglButton.stopTimeEntry(e).then(t):"userToken"===e.type?TogglButton.$user||TogglButton.fetchUser(e.apiToken):"currentEntry"===e.type?t({currentEntry:TogglButton.$curEntry}):"error"===e.type?(n=new Error,n.stack=e.stack,n.message=e.stack.split("\n")[0],o=e.stack.split("content/")[1],o=o?o.split(".js")[0]:"Unknown","Content"===e.category?(n.name=`Content Error [${o}]`,i.a.notify(n)):Object(s.f)(n)):"options"===e.type?r.a.runtime.openOptionsPage():"create-workspace"===e.type?TogglButton.createWorkspace(e).then(t):t(void 0)}catch(e){0,Object(s.f)(e),t(void 0)}})},tabUpdated:async function(e,t,n){if(TogglButton.$user||""===n.url||Object(s.e)(n.url)){if("complete"===t.status&&-1===n.url.indexOf("chrome://")){const t=await TogglButton.extractDomain(n.url,!1),o={origins:t.origins};0,x?(t.file||t.code)&&TogglButton.checkLoadedScripts(e,t.file,t.code):r.a.permissions.contains(o).then((function(n){n&&(t.file||t.code)&&TogglButton.checkLoadedScripts(e,t.file,t.code)}))}}else TogglButton.setBrowserActionBadge()},checkLoadedScripts:function(e,t,n){r.a.tabs.executeScript(e,{code:"(typeof togglbutton === 'undefined')"}).then((function(o){o&&o[0]&&TogglButton.loadFiles(e,t,n)})).catch(e=>{if("Missing host permission for the tab"!==e.message)throw e})},loadFiles:function(e,t,n){r.a.tabs.insertCSS(e,{file:"styles/style.css"}).then((function(){return r.a.tabs.insertCSS(e,{file:"styles/integrations-styles.css"})})).then((function(){return r.a.tabs.insertCSS(e,{file:"styles/edit-form.css"})})).then((function(){return r.a.tabs.insertCSS(e,{file:"styles/autocomplete.css"})})),r.a.tabs.executeScript(e,{file:"scripts/common.js"}).then((function(){let o={};o=n?{code:n}:{file:"scripts/content/"+t},r.a.tabs.executeScript(e,o)}))},extractDomain:async function(e,t=!0){if(t&&!TogglButton.$user)return!1;const n=new URL(e).hostname.replace("www.",""),o=await db.getOriginScript(n);return!!n&&{code:(o||{}).code,file:(o||{}).file,origins:["*://"+n+"/*"]}},toggleRightClickButton:function(e){r.a.contextMenus&&(e?(r.a.contextMenus.create({title:"Start timer",contexts:["page"],onclick:TogglButton.contextMenuClick}),r.a.contextMenus.create({title:"Start timer with description '%s'",contexts:["selection"],onclick:TogglButton.contextMenuClick})):r.a.contextMenus.removeAll())},startAutomatically:async function(){const e=await db.get("startAutomatically");!TogglButton.$curEntry&&e&&TogglButton.$user&&(TogglButton.$latestStoppedEntry=TogglButton.latestEntry(),TogglButton.$latestStoppedEntry&&(TogglButton.createTimeEntry(TogglButton.$latestStoppedEntry),TogglButton.hideNotification("remind-to-track-time")))},stopTrackingOnBrowserClosed:async function(){w--;await db.get("stopAutomatically")&&0===w&&TogglButton.$curEntry&&TogglButton.stopTimeEntry(TogglButton.$curEntry)},hasWorkspaceBeenRevoked:function(e){return 0===e.length},createWorkspace:function(e){return new Promise((t,n)=>{const{workspace:o}=e,r={name:o,only_admins_see_team_dashboard:!1,ical_url:""};TogglButton.ajax("",{method:"POST",baseUrl:TogglButton.$ApiV9Url,payload:r,onLoad:e=>{t({type:"create-workspace",success:200===e.status})},onError:e=>{t({type:"create-workspace",success:!1})}})})},startTicker:async function(){if(await db.get("pomodoroTickerEnabled")){if(TogglButton.$ticker)return;const e=await db.get("pomodoroTickerFile"),t=await db.get("pomodoroTickerVolume"),n=await T.instance(e,+t,!0);TogglButton.$ticker=n,TogglButton.$ticker.play()}},stopTicker:async function(){TogglButton.$ticker&&await TogglButton.$ticker.stop(),TogglButton.$ticker=null}},r.a.webRequest.onBeforeSendHeaders.addListener((function(e){const t=e.requestHeaders;let n=!1,o=-1;return t.forEach((function(e,t){"user-agent"===e.name.toLowerCase()&&(o=t),"IsTogglButton"===e.name&&(n=!0)})),n&&-1!==o&&(t[o].value="TogglButton/2.0.18"),{requestHeaders:t}}),{urls:["https://track.toggl.com/api/*"],types:["xmlhttprequest"]},["blocking","requestHeaders"]),window.db=new class{constructor(e){this.togglButton=e,this.loadAll()}async getOriginScript(e){let t=await this.getOrigin(e);const n=await this.getAllOrigins();if(t&&t.indexOf&&0===t.indexOf("custom_integration")){return{code:await this.getCustomIntegration(t)}}if(t&&(t.name||t.file))return{file:p(t)};if(t||(t=e),!n[t]){for(t=t.split(".");t.length>0&&!n[t.join(".")];)t.shift();if(t=t.join("."),!n[t])return null}return{code:await this.getCustomIntegration(n[t]),file:p(n[t])}}getOriginScriptContent(e){const t=p(a.a[e]);try{return n(363)("./"+t).default}catch(e){return null}}async getOrigin(e){return(await this.getAllOrigins())[e]||null}async setOrigin(e,t){const n=await this.getAllOrigins();n[e]=t,this.set(u,{...n,[e]:t})}async removeOrigin(e){const t=await this.getAllOrigins();delete t[e],this.set(u,t)}async getAllOrigins(){const e=await this.get(u);return{...a.a,...e}}async setDefaultProject(e,t){const n=this.togglButton.$user.id;let o=await this.get(n+"-defaultProjects",{});if(o||(o={}),!t)return this.set(n+"-defaultProject",e);o[t]=e,this.set(n+"-defaultProjects",o)}async getDefaultProject(e){if(!this.togglButton.$user)return 0;const t=this.togglButton.$user.id;let n=await this.get(t+"-defaultProjects");n||(n={});let o=await this.get(t+"-defaultProject");return o=parseInt(o||"0",10),e&&n&&n[e]||o}resetDefaultProjects(){this.togglButton.$user&&this.set(this.togglButton.$user.id+"-defaultProjects",{})}get(e,t){const n=t||d[e],o=void 0!==n,i=o?{[e]:n}:e;return g(e)?this.getLocal(e):r.a.storage.sync.get(i).then(t=>{let r=t[e];return o&&typeof r!=typeof n&&(r=n),f(r)})}getMultiple(e){return r.a.storage.sync.get(e).then(e=>Object.keys(e).reduce((t,n)=>Object.assign(t,{[n]:f(e[n])}),{}))}set(e,t){return g(e)?this.setLocal(e,t):r.a.storage.sync.set({[e]:t}).catch(t=>{console.error(`Error attempting to save ${e};`,t)}).finally(()=>{0})}setLocal(e,t){return((e,t)=>c().then(n=>new Promise((o,r)=>{const i=n.transaction("LocalData","readwrite"),s=i.objectStore("LocalData"),a={id:e,value:t},l=s.put(a);l.onerror=r,l.onsuccess=o,i.oncomplete=()=>n.close(),i.onerror=r})))(e,t)}async saveCustomIntegration(e,t){const n=await this.get("customIntegrations")||{};await this.set("customIntegrations",{...n,[e]:t})}async removeCustomIntegration(e){const t=await this.getCustomIntegrations();delete t[e],await this.set("customIntegrations",t)}async findOriginsForCustomIntegration(e){const t=await this.getAllOrigins();return Object.entries(t).filter(([t,n])=>n===e).map(([e,t])=>e)}getCustomIntegrations(){return this.get("customIntegrations")||{}}async getCustomIntegration(e){return(await this.getCustomIntegrations())[e]}setMultiple(e){return r.a.storage.sync.set(e).catch(t=>{console.error("Error attempting to save settings:",e,t)}).finally(()=>{0})}async getLocal(e){const t=localStorage.getItem(e),n=await(e=>c().then(t=>new Promise((n,o)=>{const r=t.transaction("LocalData","readonly"),i=r.objectStore("LocalData").get(e);i.onsuccess=()=>n(i.result&&i.result.value),i.onerror=o,r.oncomplete=()=>t.close(),r.onerror=o})))(e);if(t&&localStorage.removeItem(e),t&&!n){const n=JSON.parse(t);return await this.setLocal(e,n),n}return n}clearLocal(){return c().then(e=>new Promise((t,n)=>{const o=e.transaction("LocalData","readwrite"),r=o.objectStore("LocalData").clear();r.onerror=n,r.onsuccess=t,o.oncomplete=()=>e.close(),o.onerror=n}))}load(e,t){this.get(e).then(n=>{void 0===n&&(n=t),this.set(e,n)})}loadAll(){for(const e in d)d.hasOwnProperty(e)&&this.load(e,d[e])}updateSetting(e,t,n,o){const r=null!==o?o:t;this.set(e,t),r&&null!==n&&n()}async bumpTrackedCount(){const e=await this.get("timeEntriesTracked")||0;return this.set("timeEntriesTracked",e+1)}resetAllSettings(){const e={...d};return this.setMultiple(e).then(()=>{i.a.leaveBreadcrumb("Completed reset all settings")}).catch(e=>{i.a.notify(e),alert("Failed to reset settings. Please contact support@toggl.com for assistance or try re-installing the extension.")})}_migrateToStorageSync(){console.info("Migrating settings to v2"),i.a.leaveBreadcrumb("Attempting settings migration to v2");try{const e={...d},t=Object.keys(e).reduce((t,n)=>{const o=e[n];let r=localStorage.getItem(n);return r&&"boolean"==typeof o&&(r=JSON.parse(r)),t[n]=void 0===r?o:r,t},{});0,this.setMultiple(t).then(()=>{console.info("Succesully migrated old settings to v2"),i.a.leaveBreadcrumb("Migrated settings to v2")}).catch(e=>{console.error("Failed to migrate settings to v2; "),i.a.notify(e)})}catch(e){i.a.notify(e)}}}(TogglButton),window.ga=new class{constructor(e){this.db=e,this.load()}load(){k||(k=h()(),localStorage.setItem("GA:clientID",k))}report(e,t){this.db.get("sendUsageStatistics").then(n=>{if(n){const n=new XMLHttpRequest,o="v=1&tid=UA-3215787-22&cid="+k+"&aip=1&ds=extension&t=event&ec="+e+"&ea="+t;n.open("POST","https://www.google-analytics.com/collect",!0),n.send(o)}})}reportEvent(e,t){this.report(e,e+"-"+t)}reportOs(){chrome.runtime.getPlatformInfo(e=>{this.report("os","os-"+e.os)})}reportSettings(e,t){}}(db),TogglButton.queue.push(TogglButton.startAutomatically),db.get("showRightClickButton").then(e=>{TogglButton.toggleRightClickButton(e)}),TogglButton.fetchUser(),TogglButton.setNannyTimer(),TogglButton.startCheckingUserState(),r.a.tabs.onUpdated.addListener(TogglButton.tabUpdated),r.a.alarms.onAlarm.addListener(TogglButton.pomodoroAlarmStop),db.get("stopAtDayEnd").then(TogglButton.startCheckingDayEnd),r.a.runtime.onMessage.addListener(TogglButton.newMessage),r.a.notifications.onClosed.addListener(TogglButton.onNotificationClosed),r.a.notifications.onClicked.addListener(TogglButton.onNotificationClicked),x||r.a.notifications.onButtonClicked.addListener(TogglButton.notificationBtnClick),r.a.windows.onCreated.addListener(TogglButton.startAutomatically),r.a.windows.getAll().then((function(e){w=e.length})),r.a.windows.onCreated.addListener((function(){w++})),r.a.windows.onRemoved.addListener(TogglButton.stopTrackingOnBrowserClosed),r.a.runtime.setUninstallURL("https://toggl.com/track/toggl-button-feedback/").catch(i.a.notify),window.onbeforeunload=function(){db.get("stopAutomatically").then(e=>{e&&TogglButton.$curEntry&&TogglButton.stopTimeEntry(TogglButton.$curEntry)})},r.a.runtime.onInstalled.addListener((function(e){if("install"===e.reason)TogglButton.$user||r.a.tabs.create({url:"html/login.html?source=install"});else if("update"===e.reason){console.info(`Updated from ${e.previousVersion} to 2.0.18.`);const[t,n]=e.previousVersion.split(".").map(Number),[o,r]="2.0.18".split(".").map(Number);1===t&&n<=22&&1===o&&r>=23&&db._migrateToStorageSync()}})),r.a.commands&&r.a.commands.onCommand.addListener((function(e){const t=TogglButton.$latestStoppedEntry||{type:"timeEntry",service:"keyboard"};"quick-start-stop-entry"===e&&(null!==TogglButton.$curEntry?TogglButton.stopTimeEntry(TogglButton.$curEntry):TogglButton.createTimeEntry(t))})),x||r.a.runtime.onMessageExternal.addListener((function(e,t,n){e&&e.message&&"version"===e.message&&n({version:"2.0.18"})}))}]);
//# sourceMappingURL=background.js.map